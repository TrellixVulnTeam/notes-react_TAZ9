{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport { useKeyboardFocusableElement } from \"@react-md/utils\";\nimport { TextField } from \"../text-field/TextField\";\n/**\n * This is a wrapper for the `TextField` component that can be used within\n * `Menu`s by updating the `onKeyDown` and `onClick` behavior.\n *\n * Note: This is **not** the `TextFieldWithMessage` since the message part is\n * hard to style nicely within menus. You'd most likely want to use another menu\n * for displaying errors.\n *\n * @remarks \\@since 5.0.0\n */\n\nexport var MenuItemTextField = forwardRef(function MenuItemTextField(_a, nodeRef) {\n  var liProps = _a.liProps,\n      onKeyDown = _a.onKeyDown,\n      _b = _a.stretch,\n      stretch = _b === void 0 ? true : _b,\n      props = __rest(_a, [\"liProps\", \"onKeyDown\", \"stretch\"]);\n\n  var refCallback = useKeyboardFocusableElement(nodeRef);\n  return _jsx(\"li\", __assign({\n    role: \"none\"\n  }, liProps, {\n    onClick: function (event) {\n      var _a;\n\n      (_a = liProps === null || liProps === void 0 ? void 0 : liProps.onClick) === null || _a === void 0 ? void 0 : _a.call(liProps, event);\n      event.stopPropagation();\n    },\n    className: cn(\"rmd-list-item rmd-menu-item\", liProps === null || liProps === void 0 ? void 0 : liProps.className)\n  }, {\n    children: _jsx(TextField, __assign({}, props, {\n      ref: refCallback,\n      stretch: stretch,\n      onKeyDown: function (event) {\n        onKeyDown === null || onKeyDown === void 0 ? void 0 : onKeyDown(event);\n\n        switch (event.key) {\n          case \"Tab\":\n          case \"Escape\":\n          case \" \":\n            // do default behavior\n            break;\n\n          default:\n            if (event.key.length === 1 || event.currentTarget.value) {\n              event.stopPropagation();\n            }\n\n        }\n      }\n    }))\n  }));\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AACA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,EAAP,MAAe,YAAf;AAEA,SAASC,2BAAT,QAA4C,iBAA5C;AAGA,SAASC,SAAT,QAA0B,yBAA1B;AAcA;;;;;;;;;;;AAUA,OAAO,IAAMC,iBAAiB,GAAGJ,UAAU,CAGzC,SAASI,iBAAT,CACAC,EADA,EAEAC,OAFA,EAEO;EADL,WAAO,aAAP;EAAA,IAASC,SAAS,eAAlB;EAAA,IAAoBC,eAApB;EAAA,IAAoBC,OAAO,mBAAG,IAAH,GAAOD,EAAlC;EAAA,IAAuCE,KAAK,cAA9C,mCAA8C,CAA5C;;EAGF,IAAMC,WAAW,GAAGT,2BAA2B,CAACI,OAAD,CAA/C;EACA,OACEM;IACEC,IAAI,EAAC;EADP,GAEMC,OAFN,EAEa;IACXC,OAAO,EAAE,UAACC,KAAD,EAAM;;;MACb,aAAO,SAAP,WAAO,WAAP,GAAO,MAAP,UAAO,CAAED,OAAT,MAAgB,IAAhB,IAAgBV,aAAhB,GAAgB,MAAhB,GAAgBA,iBAAGW,KAAH,CAAhB;MACAA,KAAK,CAACC,eAAN;IACD,CAJU;IAKXC,SAAS,EAAEjB,EAAE,CAAC,6BAAD,EAAgCa,OAAO,SAAP,WAAO,WAAP,GAAO,MAAP,UAAO,CAAEI,SAAzC;EALF,CAFb,EAOkE;IAAAC,UAEhEP,KAACT,SAAD,EAAUiB,aACJV,KADI,EACC;MACTW,GAAG,EAAEV,WADI;MAETF,OAAO,EAAEA,OAFA;MAGTF,SAAS,EAAE,UAACS,KAAD,EAAM;QACfT,SAAS,SAAT,aAAS,WAAT,GAAS,MAAT,YAAS,CAAGS,KAAH,CAAT;;QACA,QAAQA,KAAK,CAACM,GAAd;UACE,KAAK,KAAL;UACA,KAAK,QAAL;UACA,KAAK,GAAL;YACE;YACA;;UACF;YACE,IAAIN,KAAK,CAACM,GAAN,CAAUC,MAAV,KAAqB,CAArB,IAA0BP,KAAK,CAACQ,aAAN,CAAoBC,KAAlD,EAAyD;cACvDT,KAAK,CAACC,eAAN;YACD;;QATL;MAWD;IAhBQ,CADD,CAAV;EAFgE,CAPlE,EADF;AA+BD,CAvC0C,CAApC","names":["forwardRef","cn","useKeyboardFocusableElement","TextField","MenuItemTextField","_a","nodeRef","onKeyDown","_b","stretch","props","refCallback","_jsx","role","liProps","onClick","event","stopPropagation","className","children","__assign","ref","key","length","currentTarget","value"],"sources":["C:\\Users\\hungr\\Documents\\VS-CODE\\notes-react\\node_modules\\@react-md\\form\\src\\menu\\MenuItemTextField.tsx"],"sourcesContent":["import type { HTMLAttributes } from \"react\";\nimport { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport type { PropsWithRef } from \"@react-md/utils\";\nimport { useKeyboardFocusableElement } from \"@react-md/utils\";\n\nimport type { TextFieldProps } from \"../text-field/TextField\";\nimport { TextField } from \"../text-field/TextField\";\n\n/**\n * @remarks \\@since 5.0.0\n */\nexport interface MenuItemTextFieldProps extends TextFieldProps {\n  /**\n   * Any additional props or a `ref` to apply to the surrounding `<li>` element.\n   */\n  liProps?: Readonly<\n    PropsWithRef<HTMLAttributes<HTMLLIElement>, HTMLLIElement>\n  >;\n}\n\n/**\n * This is a wrapper for the `TextField` component that can be used within\n * `Menu`s by updating the `onKeyDown` and `onClick` behavior.\n *\n * Note: This is **not** the `TextFieldWithMessage` since the message part is\n * hard to style nicely within menus. You'd most likely want to use another menu\n * for displaying errors.\n *\n * @remarks \\@since 5.0.0\n */\nexport const MenuItemTextField = forwardRef<\n  HTMLInputElement,\n  MenuItemTextFieldProps\n>(function MenuItemTextField(\n  { liProps, onKeyDown, stretch = true, ...props },\n  nodeRef\n) {\n  const refCallback = useKeyboardFocusableElement(nodeRef);\n  return (\n    <li\n      role=\"none\"\n      {...liProps}\n      onClick={(event) => {\n        liProps?.onClick?.(event);\n        event.stopPropagation();\n      }}\n      className={cn(\"rmd-list-item rmd-menu-item\", liProps?.className)}\n    >\n      <TextField\n        {...props}\n        ref={refCallback}\n        stretch={stretch}\n        onKeyDown={(event) => {\n          onKeyDown?.(event);\n          switch (event.key) {\n            case \"Tab\":\n            case \"Escape\":\n            case \" \":\n              // do default behavior\n              break;\n            default:\n              if (event.key.length === 1 || event.currentTarget.value) {\n                event.stopPropagation();\n              }\n          }\n        }}\n      />\n    </li>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}