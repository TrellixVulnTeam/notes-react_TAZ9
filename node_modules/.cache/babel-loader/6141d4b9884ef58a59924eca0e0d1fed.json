{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n/* eslint-disable jsx-a11y/click-events-have-key-events, jsx-a11y/role-supports-aria-props */\n\nimport { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport { bem } from \"@react-md/utils\";\nimport { getListItemHeight } from \"./getListItemHeight\";\nimport { ListItemChildren } from \"./ListItemChildren\";\nvar block = bem(\"rmd-list-item\");\n/**\n * The `SimpleListItem` component is used to create a non-clickable item within\n * a `List`. This is really just useful since it allows for the `ListItem`\n * styling behavior of left and right icons, avatars, and media.\n *\n * Note: Even though this component exists, it is recommended to use the\n * `ListItemChildren` component instead if you want the \"addon\" styling/behavior\n * since screen readers read `li` items within lists differently.\n */\n\nexport var SimpleListItem = forwardRef(function SimpleListItem(_a, ref) {\n  var _b;\n\n  var className = _a.className,\n      textClassName = _a.textClassName,\n      secondaryTextClassName = _a.secondaryTextClassName,\n      textChildren = _a.textChildren,\n      primaryText = _a.primaryText,\n      secondaryText = _a.secondaryText,\n      leftAddon = _a.leftAddon,\n      _c = _a.leftAddonType,\n      leftAddonType = _c === void 0 ? \"icon\" : _c,\n      _d = _a.leftAddonPosition,\n      leftAddonPosition = _d === void 0 ? \"middle\" : _d,\n      rightAddon = _a.rightAddon,\n      _e = _a.rightAddonType,\n      rightAddonType = _e === void 0 ? \"icon\" : _e,\n      _f = _a.rightAddonPosition,\n      rightAddonPosition = _f === void 0 ? \"middle\" : _f,\n      forceAddonWrap = _a.forceAddonWrap,\n      children = _a.children,\n      _g = _a.height,\n      propHeight = _g === void 0 ? \"auto\" : _g,\n      _h = _a.threeLines,\n      threeLines = _h === void 0 ? false : _h,\n      _j = _a.clickable,\n      clickable = _j === void 0 ? false : _j,\n      onClick = _a.onClick,\n      _k = _a.disabled,\n      disabled = _k === void 0 ? false : _k,\n      _l = _a.disabledOpacity,\n      disabledOpacity = _l === void 0 ? false : _l,\n      props = __rest(_a, [\"className\", \"textClassName\", \"secondaryTextClassName\", \"textChildren\", \"primaryText\", \"secondaryText\", \"leftAddon\", \"leftAddonType\", \"leftAddonPosition\", \"rightAddon\", \"rightAddonType\", \"rightAddonPosition\", \"forceAddonWrap\", \"children\", \"height\", \"threeLines\", \"clickable\", \"onClick\", \"disabled\", \"disabledOpacity\"]);\n\n  var height = getListItemHeight({\n    height: propHeight,\n    leftAddon: leftAddon,\n    leftAddonType: leftAddonType,\n    rightAddon: rightAddon,\n    rightAddonType: rightAddonType,\n    secondaryText: secondaryText\n  });\n  var ariaDisabled = props[\"aria-disabled\"];\n  var isDisabled = disabled || ariaDisabled === \"true\" || ariaDisabled === true;\n  return _jsx(\"li\", __assign({}, props, {\n    \"aria-disabled\": isDisabled || undefined,\n    ref: ref,\n    className: cn(block((_b = {}, _b[height] = height !== \"auto\" && height !== \"normal\", _b[\"three-lines\"] = threeLines, _b.clickable = clickable, _b.disabled = isDisabled, _b[\"disabled-color\"] = isDisabled && !disabledOpacity, _b[\"disabled-opacity\"] = isDisabled && disabledOpacity, _b)), className),\n    onClick: isDisabled ? undefined : onClick\n  }, {\n    children: _jsx(ListItemChildren, __assign({\n      textClassName: textClassName,\n      secondaryTextClassName: secondaryTextClassName,\n      textChildren: textChildren,\n      primaryText: primaryText,\n      secondaryText: secondaryText,\n      leftAddon: leftAddon,\n      leftAddonType: leftAddonType,\n      leftAddonPosition: leftAddonPosition,\n      rightAddon: rightAddon,\n      rightAddonType: rightAddonType,\n      rightAddonPosition: rightAddonPosition,\n      forceAddonWrap: forceAddonWrap\n    }, {\n      children: children\n    }))\n  }));\n});","map":{"version":3,"mappings":"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","names":["forwardRef","cn","bem","getListItemHeight","ListItemChildren","block","SimpleListItem","_a","ref","textClassName","secondaryTextClassName","textChildren","primaryText","secondaryText","leftAddon","_c","leftAddonType","_d","leftAddonPosition","rightAddon","_e","rightAddonType","_f","rightAddonPosition","forceAddonWrap","children","_g","propHeight","_h","threeLines","_j","clickable","onClick","_k","disabled","_l","disabledOpacity","props","height","ariaDisabled","isDisabled","_jsx","undefined","className","_b","__assign"],"sources":["C:\\Users\\hungr\\Documents\\VS-CODE\\notes-react\\node_modules\\@react-md\\list\\src\\SimpleListItem.tsx"],"sourcesContent":["/* eslint-disable jsx-a11y/click-events-have-key-events, jsx-a11y/role-supports-aria-props */\nimport { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport { bem } from \"@react-md/utils\";\n\nimport type { SimpleListItemProps } from \"./getListItemHeight\";\nimport { getListItemHeight } from \"./getListItemHeight\";\nimport { ListItemChildren } from \"./ListItemChildren\";\n\nconst block = bem(\"rmd-list-item\");\n\n/**\n * The `SimpleListItem` component is used to create a non-clickable item within\n * a `List`. This is really just useful since it allows for the `ListItem`\n * styling behavior of left and right icons, avatars, and media.\n *\n * Note: Even though this component exists, it is recommended to use the\n * `ListItemChildren` component instead if you want the \"addon\" styling/behavior\n * since screen readers read `li` items within lists differently.\n */\nexport const SimpleListItem = forwardRef<HTMLLIElement, SimpleListItemProps>(\n  function SimpleListItem(\n    {\n      className,\n      textClassName,\n      secondaryTextClassName,\n      textChildren,\n      primaryText,\n      secondaryText,\n      leftAddon,\n      leftAddonType = \"icon\",\n      leftAddonPosition = \"middle\",\n      rightAddon,\n      rightAddonType = \"icon\",\n      rightAddonPosition = \"middle\",\n      forceAddonWrap,\n      children,\n      height: propHeight = \"auto\",\n      threeLines = false,\n      clickable = false,\n      onClick,\n      disabled = false,\n      disabledOpacity = false,\n      ...props\n    },\n    ref\n  ) {\n    const height = getListItemHeight({\n      height: propHeight,\n      leftAddon,\n      leftAddonType,\n      rightAddon,\n      rightAddonType,\n      secondaryText,\n    });\n    const { \"aria-disabled\": ariaDisabled } = props;\n    const isDisabled =\n      disabled || ariaDisabled === \"true\" || ariaDisabled === true;\n\n    return (\n      <li\n        {...props}\n        aria-disabled={isDisabled || undefined}\n        ref={ref}\n        className={cn(\n          block({\n            [height]: height !== \"auto\" && height !== \"normal\",\n            \"three-lines\": threeLines,\n            clickable,\n            disabled: isDisabled,\n            \"disabled-color\": isDisabled && !disabledOpacity,\n            \"disabled-opacity\": isDisabled && disabledOpacity,\n          }),\n          className\n        )}\n        onClick={isDisabled ? undefined : onClick}\n      >\n        <ListItemChildren\n          textClassName={textClassName}\n          secondaryTextClassName={secondaryTextClassName}\n          textChildren={textChildren}\n          primaryText={primaryText}\n          secondaryText={secondaryText}\n          leftAddon={leftAddon}\n          leftAddonType={leftAddonType}\n          leftAddonPosition={leftAddonPosition}\n          rightAddon={rightAddon}\n          rightAddonType={rightAddonType}\n          rightAddonPosition={rightAddonPosition}\n          forceAddonWrap={forceAddonWrap}\n        >\n          {children}\n        </ListItemChildren>\n      </li>\n    );\n  }\n);\n"]},"metadata":{},"sourceType":"module"}