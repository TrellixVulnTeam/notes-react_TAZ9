{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport { bem } from \"@react-md/utils\";\nimport { useFormTheme } from \"../FormThemeProvider\";\nimport { TextFieldAddon } from \"./TextFieldAddon\";\nvar block = bem(\"rmd-text-field-container\");\n/**\n * This is a container component that is used to structure the text field with\n * different parts and themes.\n */\n\nexport var TextFieldContainer = forwardRef(function TextFieldContainer(_a, ref) {\n  var _b;\n\n  var className = _a.className,\n      children = _a.children,\n      _c = _a.inline,\n      inline = _c === void 0 ? false : _c,\n      propTheme = _a.theme,\n      _d = _a.error,\n      error = _d === void 0 ? false : _d,\n      active = _a.active,\n      label = _a.label,\n      _e = _a.dense,\n      dense = _e === void 0 ? false : _e,\n      _f = _a.stretch,\n      stretch = _f === void 0 ? false : _f,\n      _g = _a.disabled,\n      disabled = _g === void 0 ? false : _g,\n      _h = _a.isLeftAddon,\n      isLeftAddon = _h === void 0 ? true : _h,\n      _j = _a.isRightAddon,\n      isRightAddon = _j === void 0 ? true : _j,\n      leftChildren = _a.leftChildren,\n      rightChildren = _a.rightChildren,\n      propUnderlineDirection = _a.underlineDirection,\n      props = __rest(_a, [\"className\", \"children\", \"inline\", \"theme\", \"error\", \"active\", \"label\", \"dense\", \"stretch\", \"disabled\", \"isLeftAddon\", \"isRightAddon\", \"leftChildren\", \"rightChildren\", \"underlineDirection\"]);\n\n  var _k = useFormTheme({\n    theme: propTheme,\n    underlineDirection: propUnderlineDirection\n  }),\n      theme = _k.theme,\n      underlineDirection = _k.underlineDirection;\n\n  var underline = theme === \"underline\";\n  var outline = theme === \"outline\";\n  var filled = theme === \"filled\";\n  var isUnderlined = underline || filled;\n  var isOutlineActive = outline && active;\n  return _jsxs(\"div\", __assign({}, props, {\n    ref: ref,\n    className: cn(block((_b = {\n      error: error,\n      inline: inline,\n      stretch: stretch,\n      filled: filled,\n      outline: outline,\n      disabled: disabled,\n      hoverable: !disabled && !isOutlineActive,\n      label: label && !dense,\n      dense: !label && dense,\n      \"dense-label\": dense && label,\n      \"dense-placeholder\": dense && isUnderlined && !label,\n      \"outline-active\": isOutlineActive,\n      \"outline-error\": outline && error,\n      \"outline-left\": outline && leftChildren,\n      \"outline-right\": outline && rightChildren,\n      underline: isUnderlined,\n      \"underline-labelled\": label && isUnderlined,\n      \"underline-active\": isUnderlined && active\n    }, _b[\"underline-\".concat(underlineDirection)] = isUnderlined, _b[\"underline-left-addon\"] = isUnderlined && leftChildren, _b[\"underline-right-addon\"] = isUnderlined && rightChildren, _b)), className)\n  }, {\n    children: [isLeftAddon ? _jsx(TextFieldAddon, {\n      children: leftChildren\n    }) : leftChildren, children, isRightAddon ? _jsx(TextFieldAddon, {\n      children: rightChildren\n    }) : rightChildren]\n  }));\n});","map":{"version":3,"mappings":"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","names":["forwardRef","cn","bem","useFormTheme","TextFieldAddon","block","TextFieldContainer","_a","ref","children","_c","inline","propTheme","_d","error","active","label","_e","dense","_f","stretch","_g","disabled","_h","isLeftAddon","_j","isRightAddon","leftChildren","rightChildren","propUnderlineDirection","props","theme","underlineDirection","underline","outline","filled","isUnderlined","isOutlineActive","_jsxs","className","hoverable","_b","_jsx"],"sources":["C:\\Users\\hungr\\Documents\\VS-CODE\\notes-react\\node_modules\\@react-md\\form\\src\\text-field\\TextFieldContainer.tsx"],"sourcesContent":["import type { HTMLAttributes, ReactNode } from \"react\";\nimport { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport { bem } from \"@react-md/utils\";\n\nimport type { FormThemeOptions } from \"../FormThemeProvider\";\nimport { useFormTheme } from \"../FormThemeProvider\";\nimport { TextFieldAddon } from \"./TextFieldAddon\";\n\nexport interface TextFieldContainerOptions extends FormThemeOptions {\n  /**\n   * Boolean if the form components should be using the `dense` spec to reduce\n   * the sizing slightly.\n   */\n  dense?: boolean;\n\n  /**\n   * Boolean if the component should be rendered inline with\n   * `display: inline-flex` instead of `display: flex`.\n   */\n  inline?: boolean;\n\n  /**\n   * Boolean if the component should gain `flex: 1 1 auto;` which is useful for\n   * full-width behavior within flex containers.\n   *\n   * @defaultValue `false`\n   * @remarks \\@since 5.0.0\n   */\n  stretch?: boolean;\n\n  /**\n   * Boolean if the text field should gain the error state and update the\n   * colors.\n   */\n  error?: boolean;\n\n  /**\n   * An optional addon to apply to the left of the text field. This should\n   * normally be an icon. This element will not have pointer events so it can be\n   * \"clicked through\" to focus the text field instead.\n   */\n  leftChildren?: ReactNode;\n\n  /**\n   * Boolean if the left children should be wrapped in the `TextFieldAddon`\n   * component. This is enabled by default since this is _normally_ the behavior\n   * that is desired so that icons can be positioned correctly.\n   */\n  isLeftAddon?: boolean;\n\n  /**\n   * An optional addon to apply to the right of the text field. This should be a\n   * clickable button such as a password field toggle or a reset button for the\n   * field.\n   */\n  rightChildren?: ReactNode;\n\n  /**\n   * Boolean if the right children should be wrapped in the `TextFieldAddon`\n   * component. This is enabled by default since this is _normally_ the behavior\n   * that is desired so that icons can be positioned correctly.\n   */\n  isRightAddon?: boolean;\n}\n\nexport interface TextFieldContainerProps\n  extends TextFieldContainerOptions,\n    HTMLAttributes<HTMLDivElement> {\n  /**\n   * Boolean if the text field is currently active (focused) to applied the\n   * active color to the current theme.\n   */\n  active?: boolean;\n\n  /**\n   * Boolean if there is a floating label with the text field.\n   */\n  label?: boolean;\n\n  /**\n   * Boolean if the text field is currently disabled.\n   */\n  disabled?: boolean;\n}\n\nconst block = bem(\"rmd-text-field-container\");\n\n/**\n * This is a container component that is used to structure the text field with\n * different parts and themes.\n */\nexport const TextFieldContainer = forwardRef<\n  HTMLDivElement,\n  TextFieldContainerProps\n>(function TextFieldContainer(\n  {\n    className,\n    children,\n    inline = false,\n    theme: propTheme,\n    error = false,\n    active,\n    label,\n    dense = false,\n    stretch = false,\n    disabled = false,\n    isLeftAddon = true,\n    isRightAddon = true,\n    leftChildren,\n    rightChildren,\n    underlineDirection: propUnderlineDirection,\n    ...props\n  },\n  ref\n) {\n  const { theme, underlineDirection } = useFormTheme({\n    theme: propTheme,\n    underlineDirection: propUnderlineDirection,\n  });\n\n  const underline = theme === \"underline\";\n  const outline = theme === \"outline\";\n  const filled = theme === \"filled\";\n  const isUnderlined = underline || filled;\n  const isOutlineActive = outline && active;\n\n  return (\n    <div\n      {...props}\n      ref={ref}\n      className={cn(\n        block({\n          error,\n          inline,\n          stretch,\n          filled,\n          outline,\n          disabled,\n          hoverable: !disabled && !isOutlineActive,\n          label: label && !dense,\n          dense: !label && dense,\n          \"dense-label\": dense && label,\n          \"dense-placeholder\": dense && isUnderlined && !label,\n          \"outline-active\": isOutlineActive,\n          \"outline-error\": outline && error,\n          \"outline-left\": outline && leftChildren,\n          \"outline-right\": outline && rightChildren,\n          underline: isUnderlined,\n          \"underline-labelled\": label && isUnderlined,\n          \"underline-active\": isUnderlined && active,\n          [`underline-${underlineDirection}`]: isUnderlined,\n          \"underline-left-addon\": isUnderlined && leftChildren,\n          \"underline-right-addon\": isUnderlined && rightChildren,\n        }),\n        className\n      )}\n    >\n      {isLeftAddon ? (\n        <TextFieldAddon>{leftChildren}</TextFieldAddon>\n      ) : (\n        leftChildren\n      )}\n      {children}\n      {isRightAddon ? (\n        <TextFieldAddon>{rightChildren}</TextFieldAddon>\n      ) : (\n        rightChildren\n      )}\n    </div>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}