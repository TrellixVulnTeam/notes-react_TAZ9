{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { forwardRef, useMemo } from \"react\";\nimport cn from \"classnames\";\nimport { bem } from \"@react-md/utils\";\nimport { TableConfigProvider } from \"./config\";\nvar block = bem(\"rmd-table\");\n/**\n * Creates a `<table>` element with some default styles and a quick way to\n * configure the other styles within a table. That being said, styling tables is\n * awful if you are used to flexbox and this component will not be helping with\n * layout styles of tables.\n *\n * The table will not be responsive by default, but you can easily create a\n * responsive table with overflow by wrapping with the `TableContainer`\n * component or just adding `overflow: auto` to a parent element. Note that\n * horizontal scrolling is still not one of the best user interactions and it\n * might be better to render a table in a different manner for mobile devices to\n * help display all the required data.\n */\n\nexport var Table = forwardRef(function Table(_a, ref) {\n  var className = _a.className,\n      children = _a.children,\n      _b = _a.dense,\n      dense = _b === void 0 ? false : _b,\n      _c = _a.hAlign,\n      hAlign = _c === void 0 ? \"left\" : _c,\n      _d = _a.vAlign,\n      vAlign = _d === void 0 ? \"middle\" : _d,\n      _e = _a.lineWrap,\n      lineWrap = _e === void 0 ? false : _e,\n      _f = _a.fullWidth,\n      fullWidth = _f === void 0 ? false : _f,\n      _g = _a.disableHover,\n      disableHover = _g === void 0 ? false : _g,\n      _h = _a.disableBorders,\n      disableBorders = _h === void 0 ? false : _h,\n      props = __rest(_a, [\"className\", \"children\", \"dense\", \"hAlign\", \"vAlign\", \"lineWrap\", \"fullWidth\", \"disableHover\", \"disableBorders\"]);\n\n  var configuration = useMemo(function () {\n    return {\n      header: false,\n      hAlign: hAlign,\n      vAlign: vAlign,\n      lineWrap: lineWrap,\n      disableHover: disableHover,\n      disableBorders: disableBorders\n    };\n  }, [hAlign, vAlign, lineWrap, disableHover, disableBorders]);\n  return _jsx(TableConfigProvider, __assign({\n    value: configuration\n  }, {\n    children: _jsx(\"table\", __assign({}, props, {\n      ref: ref,\n      className: cn(block({\n        dense: dense,\n        \"full-width\": fullWidth\n      }), className)\n    }, {\n      children: children\n    }))\n  }));\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AACA,SAASA,UAAT,EAAqBC,OAArB,QAAoC,OAApC;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,SAASC,GAAT,QAAoB,iBAApB;AAGA,SAASC,mBAAT,QAAoC,UAApC;AAUA,IAAMC,KAAK,GAAGF,GAAG,CAAC,WAAD,CAAjB;AAEA;;;;;;;;;;;;;;AAaA,OAAO,IAAMG,KAAK,GAAGN,UAAU,CAA+B,SAASM,KAAT,CAC5DC,EAD4D,EAa5DC,GAb4D,EAazD;EAXD,aAAS,eAAT;EAAA,IACAC,QAAQ,cADR;EAAA,IAEAC,aAFA;EAAA,IAEAC,KAAK,mBAAG,KAAH,GAAQD,EAFb;EAAA,IAGAE,cAHA;EAAA,IAGAC,MAAM,mBAAG,MAAH,GAASD,EAHf;EAAA,IAIAE,cAJA;EAAA,IAIAC,MAAM,mBAAG,QAAH,GAAWD,EAJjB;EAAA,IAKAE,gBALA;EAAA,IAKAC,QAAQ,mBAAG,KAAH,GAAQD,EALhB;EAAA,IAMAE,iBANA;EAAA,IAMAC,SAAS,mBAAG,KAAH,GAAQD,EANjB;EAAA,IAOAE,oBAPA;EAAA,IAOAC,YAAY,mBAAG,KAAH,GAAQD,EAPpB;EAAA,IAQAE,sBARA;EAAA,IAQAC,cAAc,mBAAG,KAAH,GAAQD,EARtB;EAAA,IASGE,KAAK,cAVV,iHAUU,CATR;;EAaF,IAAMC,aAAa,GAAGxB,OAAO,CAC3B;IAAM,OAAC;MACLyB,MAAM,EAAE,KADH;MAELb,MAAM,QAFD;MAGLE,MAAM,QAHD;MAILE,QAAQ,UAJH;MAKLI,YAAY,cALP;MAMLE,cAAc;IANT,CAAD;EAOJ,CARyB,EAS3B,CAACV,MAAD,EAASE,MAAT,EAAiBE,QAAjB,EAA2BI,YAA3B,EAAyCE,cAAzC,CAT2B,CAA7B;EAYA,OACEI,KAACvB,mBAAD,EAAoBwB;IAACC,KAAK,EAAEJ;EAAR,GAAqB;IAAAhB,UACvCkB,2BACMH,KADN,EACW;MACThB,GAAG,EAAEA,GADI;MAETsB,SAAS,EAAE5B,EAAE,CACXG,KAAK,CAAC;QACJM,KAAK,OADD;QAEJ,cAAcQ;MAFV,CAAD,CADM,EAKXW,SALW;IAFJ,CADX,EASG;MAAArB,UAEAA;IAFA,CATH;EADuC,CAArB,CAApB,CADF;AAiBD,CA5C8B,CAAxB","names":["forwardRef","useMemo","cn","bem","TableConfigProvider","block","Table","_a","ref","children","_b","dense","_c","hAlign","_d","vAlign","_e","lineWrap","_f","fullWidth","_g","disableHover","_h","disableBorders","props","configuration","header","_jsx","__assign","value","className"],"sources":["C:\\Users\\hungr\\Documents\\VS-CODE\\notes-react\\node_modules\\@react-md\\table\\src\\Table.tsx"],"sourcesContent":["import type { TableHTMLAttributes } from \"react\";\nimport { forwardRef, useMemo } from \"react\";\nimport cn from \"classnames\";\nimport { bem } from \"@react-md/utils\";\n\nimport type { TableConfiguration } from \"./config\";\nimport { TableConfigProvider } from \"./config\";\n\n/**\n * All the available props for the `Table` component. This allows you to apply\n * the general table configuration for convenience.\n */\nexport interface TableProps\n  extends TableHTMLAttributes<HTMLTableElement>,\n    TableConfiguration {}\n\nconst block = bem(\"rmd-table\");\n\n/**\n * Creates a `<table>` element with some default styles and a quick way to\n * configure the other styles within a table. That being said, styling tables is\n * awful if you are used to flexbox and this component will not be helping with\n * layout styles of tables.\n *\n * The table will not be responsive by default, but you can easily create a\n * responsive table with overflow by wrapping with the `TableContainer`\n * component or just adding `overflow: auto` to a parent element. Note that\n * horizontal scrolling is still not one of the best user interactions and it\n * might be better to render a table in a different manner for mobile devices to\n * help display all the required data.\n */\nexport const Table = forwardRef<HTMLTableElement, TableProps>(function Table(\n  {\n    className,\n    children,\n    dense = false,\n    hAlign = \"left\",\n    vAlign = \"middle\",\n    lineWrap = false,\n    fullWidth = false,\n    disableHover = false,\n    disableBorders = false,\n    ...props\n  },\n  ref\n) {\n  const configuration = useMemo(\n    () => ({\n      header: false,\n      hAlign,\n      vAlign,\n      lineWrap,\n      disableHover,\n      disableBorders,\n    }),\n    [hAlign, vAlign, lineWrap, disableHover, disableBorders]\n  );\n\n  return (\n    <TableConfigProvider value={configuration}>\n      <table\n        {...props}\n        ref={ref}\n        className={cn(\n          block({\n            dense,\n            \"full-width\": fullWidth,\n          }),\n          className\n        )}\n      >\n        {children}\n      </table>\n    </TableConfigProvider>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}