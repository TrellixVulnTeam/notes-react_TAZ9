{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport cn from \"classnames\";\nimport { useCSSTransition } from \"@react-md/transition\";\nimport { useStatesConfigContext } from \"../StatesConfig\";\nexport function Ripple(_a) {\n  var className = _a.className,\n      propClassNames = _a.classNames,\n      propTimeout = _a.timeout,\n      ripple = _a.ripple,\n      entered = _a.entered,\n      exited = _a.exited;\n  var exiting = ripple.exiting,\n      style = ripple.style;\n  var timeout = propTimeout;\n  var classNames = propClassNames;\n  var context = useStatesConfigContext();\n\n  if (typeof timeout === \"undefined\" || typeof classNames === \"undefined\") {\n    if (typeof timeout === \"undefined\") {\n      timeout = context.rippleTimeout;\n    }\n\n    if (typeof classNames === \"undefined\") {\n      classNames = context.rippleClassNames;\n    }\n  }\n\n  var _b = useCSSTransition({\n    appear: true,\n    transitionIn: !exiting,\n    timeout: timeout,\n    className: cn(\"rmd-ripple\", className),\n    classNames: classNames,\n    onEntered: function () {\n      entered(ripple);\n    },\n    onExited: function () {\n      exited(ripple);\n    }\n  }),\n      elementProps = _b.elementProps,\n      rendered = _b.rendered;\n\n  if (!rendered) {\n    return null;\n  }\n\n  return _jsx(\"span\", __assign({}, elementProps, {\n    style: style\n  }));\n}","map":{"version":3,"mappings":";;;;;;;;;;;;;;;AACA,OAAOA,EAAP,MAAe,YAAf;AAKA,SAASC,gBAAT,QAAiC,sBAAjC;AAEA,SAASC,sBAAT,QAAuC,iBAAvC;AAYA,OAAM,SAAUC,MAAV,CAAiBC,EAAjB,EAOQ;MANZC,SAAS;MACGC,cAAc;MACjBC,WAAW;MACpBC,MAAM;MACNC,OAAO;MACPC,MAAM;EAEE,WAAO,GAAYF,MAAM,QAAzB;EAAA,IAASG,KAAK,GAAKH,MAAM,MAAzB;EAER,IAAII,OAAO,GAAGL,WAAd;EACA,IAAIM,UAAU,GAAGP,cAAjB;EACA,IAAMQ,OAAO,GAAGZ,sBAAsB,EAAtC;;EACA,IAAI,OAAOU,OAAP,KAAmB,WAAnB,IAAkC,OAAOC,UAAP,KAAsB,WAA5D,EAAyE;IACvE,IAAI,OAAOD,OAAP,KAAmB,WAAvB,EAAoC;MAClCA,OAAO,GAAGE,OAAO,CAACC,aAAlB;IACD;;IAED,IAAI,OAAOF,UAAP,KAAsB,WAA1B,EAAuC;MACrCA,UAAU,GAAGC,OAAO,CAACE,gBAArB;IACD;EACF;;EAEK,SAA6Bf,gBAAgB,CAAC;IAClDgB,MAAM,EAAE,IAD0C;IAElDC,YAAY,EAAE,CAACC,OAFmC;IAGlDP,OAAO,SAH2C;IAIlDP,SAAS,EAAEL,EAAE,CAAC,YAAD,EAAeK,SAAf,CAJqC;IAKlDQ,UAAU,YALwC;IAMlDO,SAAS;MACPX,OAAO,CAACD,MAAD,CAAP;IACD,CARiD;IASlDa,QAAQ;MACNX,MAAM,CAACF,MAAD,CAAN;IACD;EAXiD,CAAD,CAA7C;EAAA,IAAEc,YAAY,kBAAd;EAAA,IAAgBC,QAAQ,cAAxB;;EAcN,IAAI,CAACA,QAAL,EAAe;IACb,OAAO,IAAP;EACD;;EAED,OAAOC,0BAAUF,YAAV,EAAsB;IAAEX,KAAK,EAAEA;EAAT,CAAtB,EAAP;AACD","names":["cn","useCSSTransition","useStatesConfigContext","Ripple","_a","className","propClassNames","propTimeout","ripple","entered","exited","style","timeout","classNames","context","rippleTimeout","rippleClassNames","appear","transitionIn","exiting","onEntered","onExited","elementProps","rendered","_jsx"],"sources":["C:\\Users\\hungr\\Documents\\VS-CODE\\notes-react\\node_modules\\@react-md\\states\\src\\ripples\\Ripple.tsx"],"sourcesContent":["import type { ReactElement } from \"react\";\nimport cn from \"classnames\";\nimport type {\n  CSSTransitionClassNames,\n  TransitionTimeout,\n} from \"@react-md/transition\";\nimport { useCSSTransition } from \"@react-md/transition\";\n\nimport { useStatesConfigContext } from \"../StatesConfig\";\nimport type { RippleState } from \"./types\";\n\nexport interface RippleProps {\n  className?: string;\n  classNames?: CSSTransitionClassNames;\n  timeout?: TransitionTimeout;\n  entered: (ripple: RippleState) => void;\n  exited: (ripple: RippleState) => void;\n  ripple: RippleState;\n}\n\nexport function Ripple({\n  className,\n  classNames: propClassNames,\n  timeout: propTimeout,\n  ripple,\n  entered,\n  exited,\n}: RippleProps): ReactElement | null {\n  const { exiting, style } = ripple;\n\n  let timeout = propTimeout;\n  let classNames = propClassNames;\n  const context = useStatesConfigContext();\n  if (typeof timeout === \"undefined\" || typeof classNames === \"undefined\") {\n    if (typeof timeout === \"undefined\") {\n      timeout = context.rippleTimeout;\n    }\n\n    if (typeof classNames === \"undefined\") {\n      classNames = context.rippleClassNames;\n    }\n  }\n\n  const { elementProps, rendered } = useCSSTransition({\n    appear: true,\n    transitionIn: !exiting,\n    timeout,\n    className: cn(\"rmd-ripple\", className),\n    classNames,\n    onEntered() {\n      entered(ripple);\n    },\n    onExited() {\n      exited(ripple);\n    },\n  });\n\n  if (!rendered) {\n    return null;\n  }\n\n  return <span {...elementProps} style={style} />;\n}\n"]},"metadata":{},"sourceType":"module"}