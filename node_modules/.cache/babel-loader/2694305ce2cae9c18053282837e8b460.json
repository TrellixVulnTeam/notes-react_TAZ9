{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport { bem } from \"@react-md/utils\";\nvar block = bem(\"rmd-text-field-addon\");\n/**\n * This component is used to add an an icon before or after the text field with\n * correct styling.\n */\n\nexport var TextFieldAddon = forwardRef(function TextFieldAddon(_a, ref) {\n  var children = _a.children,\n      className = _a.className,\n      _b = _a.presentational,\n      presentational = _b === void 0 ? true : _b,\n      props = __rest(_a, [\"children\", \"className\", \"presentational\"]);\n\n  if (!children) {\n    return null;\n  }\n\n  return _jsx(\"span\", __assign({}, props, {\n    ref: ref,\n    className: cn(block({\n      presentational: presentational\n    }), className)\n  }, {\n    children: children\n  }));\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AACA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,SAASC,GAAT,QAAoB,iBAApB;AAUA,IAAMC,KAAK,GAAGD,GAAG,CAAC,sBAAD,CAAjB;AAEA;;;;;AAIA,OAAO,IAAME,cAAc,GAAGJ,UAAU,CACtC,SAASI,cAAT,CACEC,EADF,EAEEC,GAFF,EAEK;EADD,YAAQ,cAAR;EAAA,IAAUC,SAAS,eAAnB;EAAA,IAAqBC,sBAArB;EAAA,IAAqBC,cAAc,mBAAG,IAAH,GAAOD,EAA1C;EAAA,IAA+CE,KAAK,cAAtD,2CAAsD,CAApD;;EAGF,IAAI,CAACC,QAAL,EAAe;IACb,OAAO,IAAP;EACD;;EAED,OACEC,0BACMF,KADN,EACW;IACTJ,GAAG,EAAEA,GADI;IAETC,SAAS,EAAEN,EAAE,CAACE,KAAK,CAAC;MAAEM,cAAc;IAAhB,CAAD,CAAN,EAA4BF,SAA5B;EAFJ,CADX,EAGqD;IAAAI,UAElDA;EAFkD,CAHrD,EADF;AASD,CAlBqC,CAAjC","names":["forwardRef","cn","bem","block","TextFieldAddon","_a","ref","className","_b","presentational","props","children","_jsx"],"sources":["C:\\Users\\hungr\\Documents\\VS-CODE\\notes-react\\node_modules\\@react-md\\form\\src\\text-field\\TextFieldAddon.tsx"],"sourcesContent":["import type { HTMLAttributes } from \"react\";\nimport { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport { bem } from \"@react-md/utils\";\n\nexport interface TextFieldAddonProps extends HTMLAttributes<HTMLSpanElement> {\n  /**\n   * Boolean if the addon should be presentational only and prevent pointer\n   * events.\n   */\n  presentational?: boolean;\n}\n\nconst block = bem(\"rmd-text-field-addon\");\n\n/**\n * This component is used to add an an icon before or after the text field with\n * correct styling.\n */\nexport const TextFieldAddon = forwardRef<HTMLSpanElement, TextFieldAddonProps>(\n  function TextFieldAddon(\n    { children, className, presentational = true, ...props },\n    ref\n  ) {\n    if (!children) {\n      return null;\n    }\n\n    return (\n      <span\n        {...props}\n        ref={ref}\n        className={cn(block({ presentational }), className)}\n      >\n        {children}\n      </span>\n    );\n  }\n);\n"]},"metadata":{},"sourceType":"module"}