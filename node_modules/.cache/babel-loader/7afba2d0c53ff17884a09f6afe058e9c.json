{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport { useVerticalDividerHeight } from \"@react-md/divider\";\nimport { bem } from \"@react-md/utils\";\nimport { useMenuConfiguration } from \"./MenuConfigurationProvider\";\nvar styles = bem(\"rmd-divider\");\n/**\n * This component renders a `<li role=\"separator\">` with the divider styles. It\n * will also automatically render itself vertically instead of horizontally if\n * the menu is rendering horizontally.\n *\n * @remarks \\@since 5.0.0 Renders as an `<li>` instead of a `<div>` or `<hr />`.\n */\n\nexport var MenuItemSeparator = forwardRef(function MenuItemSeparator(_a, ref) {\n  var style = _a.style,\n      className = _a.className,\n      maxHeight = _a.maxHeight,\n      inset = _a.inset,\n      propVertical = _a.vertical,\n      children = _a.children,\n      props = __rest(_a, [\"style\", \"className\", \"maxHeight\", \"inset\", \"vertical\", \"children\"]);\n\n  var horizontal = useMenuConfiguration().horizontal;\n  var vertical = propVertical !== null && propVertical !== void 0 ? propVertical : horizontal;\n  var heightProps = useVerticalDividerHeight({\n    ref: ref,\n    style: style,\n    maxHeight: vertical ? maxHeight !== null && maxHeight !== void 0 ? maxHeight : 1 : 0\n  });\n  return _jsx(\"li\", __assign({}, props, heightProps, {\n    \"aria-orientation\": vertical ? \"vertical\" : undefined,\n    role: \"separator\",\n    className: cn(styles({\n      inset: inset && !vertical,\n      vertical: vertical\n    }), className)\n  }, {\n    children: children\n  }));\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AACA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,EAAP,MAAe,YAAf;AAEA,SAASC,wBAAT,QAAyC,mBAAzC;AACA,SAASC,GAAT,QAAoB,iBAApB;AAEA,SAASC,oBAAT,QAAqC,6BAArC;AAEA,IAAMC,MAAM,GAAGF,GAAG,CAAC,aAAD,CAAlB;AAQA;;;;;;;;AAOA,OAAO,IAAMG,iBAAiB,GAAGN,UAAU,CAGzC,SAASM,iBAAT,CACAC,EADA,EAUAC,GAVA,EAUG;EARD,SAAK,WAAL;EAAA,IACAC,SAAS,eADT;EAAA,IAEAC,SAAS,eAFT;EAAA,IAGAC,KAAK,WAHL;EAAA,IAIUC,YAAY,cAJtB;EAAA,IAKAC,QAAQ,cALR;EAAA,IAMGC,KAAK,cAPV,oEAOU,CANR;;EAUF,IAAMC,UAAU,GAAGX,oBAAoB,GAAGW,UAA1C;EACA,IAAMC,QAAQ,GAAGJ,YAAY,SAAZ,gBAAY,WAAZ,kBAAgBG,UAAjC;EACA,IAAME,WAAW,GAAGf,wBAAwB,CAAC;IAC3CM,GAAG,KADwC;IAE3CU,KAAK,OAFsC;IAG3CR,SAAS,EAAEM,QAAQ,GAAGN,SAAS,SAAT,aAAS,WAAT,eAAa,CAAhB,GAAoB;EAHI,CAAD,CAA5C;EAMA,OACES,wBACML,KADN,EAEMG,WAFN,EAEiB;IAAA,oBACGD,QAAQ,GAAG,UAAH,GAAgBI,SAD3B;IAEfC,IAAI,EAAC,WAFU;IAGfZ,SAAS,EAAER,EAAE,CAACI,MAAM,CAAC;MAAEM,KAAK,EAAEA,KAAK,IAAI,CAACK,QAAnB;MAA6BA,QAAQ;IAArC,CAAD,CAAP,EAAkDP,SAAlD;EAHE,CAFjB,EAK2E;IAAAI,UAExEA;EAFwE,CAL3E,EADF;AAWD,CAlC0C,CAApC","names":["forwardRef","cn","useVerticalDividerHeight","bem","useMenuConfiguration","styles","MenuItemSeparator","_a","ref","className","maxHeight","inset","propVertical","children","props","horizontal","vertical","heightProps","style","_jsx","undefined","role"],"sources":["C:\\Users\\hungr\\Documents\\VS-CODE\\notes-react\\node_modules\\@react-md\\menu\\src\\MenuItemSeparator.tsx"],"sourcesContent":["import type { HTMLAttributes } from \"react\";\nimport { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport type { DividerProps, VerticalDividerProps } from \"@react-md/divider\";\nimport { useVerticalDividerHeight } from \"@react-md/divider\";\nimport { bem } from \"@react-md/utils\";\n\nimport { useMenuConfiguration } from \"./MenuConfigurationProvider\";\n\nconst styles = bem(\"rmd-divider\");\n\n/** @remarks \\@since 5.0.0 */\nexport interface MenuItemSeparatorProps\n  extends HTMLAttributes<HTMLLIElement>,\n    Pick<DividerProps, \"inset\" | \"vertical\">,\n    Pick<VerticalDividerProps, \"maxHeight\"> {}\n\n/**\n * This component renders a `<li role=\"separator\">` with the divider styles. It\n * will also automatically render itself vertically instead of horizontally if\n * the menu is rendering horizontally.\n *\n * @remarks \\@since 5.0.0 Renders as an `<li>` instead of a `<div>` or `<hr />`.\n */\nexport const MenuItemSeparator = forwardRef<\n  HTMLLIElement,\n  MenuItemSeparatorProps\n>(function MenuItemSeparator(\n  {\n    style,\n    className,\n    maxHeight,\n    inset,\n    vertical: propVertical,\n    children,\n    ...props\n  },\n  ref\n) {\n  const horizontal = useMenuConfiguration().horizontal;\n  const vertical = propVertical ?? horizontal;\n  const heightProps = useVerticalDividerHeight({\n    ref,\n    style,\n    maxHeight: vertical ? maxHeight ?? 1 : 0,\n  });\n\n  return (\n    <li\n      {...props}\n      {...heightProps}\n      aria-orientation={vertical ? \"vertical\" : undefined}\n      role=\"separator\"\n      className={cn(styles({ inset: inset && !vertical, vertical }), className)}\n    >\n      {children}\n    </li>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}