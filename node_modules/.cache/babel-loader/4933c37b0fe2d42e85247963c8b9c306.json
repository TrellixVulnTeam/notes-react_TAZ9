{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport { bem } from \"@react-md/utils\";\nimport { InheritContext, ParentContext, useInheritContext, useParentContext } from \"./useInheritContext\";\nvar block = bem(\"rmd-app-bar\");\n/**\n * This component is used to create a top-level app bar in your application that\n * can be used to contain a navigation menu toggle button, the app's logo and/or\n * title, as well as any top-level actions that will be reused throughout your\n * app. When using this component with the `fixed` prop, it is recommended to\n * also use one of the \"offset class names\" so that your content will not be\n * converted by the app bar. You can also use any of the exposed mixins to add\n * these offsets as well.\n */\n\nexport var AppBar = forwardRef(function AppBar(_a, ref) {\n  var _b;\n\n  var className = _a.className,\n      children = _a.children,\n      _c = _a.theme,\n      propTheme = _c === void 0 ? \"primary\" : _c,\n      _d = _a.component,\n      propComponent = _d === void 0 ? \"header\" : _d,\n      _e = _a.height,\n      height = _e === void 0 ? \"normal\" : _e,\n      _f = _a.fixed,\n      fixed = _f === void 0 ? false : _f,\n      _g = _a.fixedPosition,\n      fixedPosition = _g === void 0 ? \"top\" : _g,\n      _h = _a.fixedElevation,\n      fixedElevation = _h === void 0 ? true : _h,\n      inheritColor = _a.inheritColor,\n      _j = _a.flexWrap,\n      flexWrap = _j === void 0 ? height === \"none\" || height === \"prominent\" || height === \"prominent-dense\" : _j,\n      remaining = __rest(_a, [\"className\", \"children\", \"theme\", \"component\", \"height\", \"fixed\", \"fixedPosition\", \"fixedElevation\", \"inheritColor\", \"flexWrap\"]);\n\n  var parentContext = useParentContext();\n  var inheritContext = useInheritContext(undefined);\n  var inherit;\n  var theme = propTheme;\n  var Component = propComponent;\n\n  if (typeof inheritColor === \"boolean\") {\n    inherit = inheritColor;\n  } else if (parentContext) {\n    inherit = inheritContext;\n    theme = \"clear\";\n    Component = \"div\";\n  } else {\n    inherit = theme !== \"clear\" && theme !== \"default\";\n  }\n\n  return _jsx(ParentContext.Provider, __assign({\n    value: true\n  }, {\n    children: _jsx(InheritContext.Provider, __assign({\n      value: inherit\n    }, {\n      children: _jsx(Component, __assign({}, remaining, {\n        className: cn(block((_b = {}, _b[theme] = theme !== \"clear\", _b[height] = height !== \"none\", _b.wrap = flexWrap, _b.fixed = fixed, _b[fixedPosition] = fixed, _b[\"fixed-elevation\"] = fixed && fixedElevation, _b)), className),\n        ref: ref\n      }, {\n        children: children\n      }))\n    }))\n  }));\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AACA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,SAASC,GAAT,QAAoB,iBAApB;AAEA,SACEC,cADF,EAEEC,aAFF,EAGEC,iBAHF,EAIEC,gBAJF,QAKO,qBALP;AA8FA,IAAMC,KAAK,GAAGL,GAAG,CAAC,aAAD,CAAjB;AAEA;;;;;;;;;;AASA,OAAO,IAAMM,MAAM,GAAGR,UAAU,CAA8B,SAASQ,MAAT,CAC5DC,EAD4D,EAgB5DC,GAhB4D,EAgBzD;;;EAdD,aAAS,eAAT;EAAA,IACAC,QAAQ,cADR;EAAA,IAEAC,aAFA;EAAA,IAEOC,SAAS,mBAAG,SAAH,GAAYD,EAF5B;EAAA,IAGAE,iBAHA;EAAA,IAGWC,aAAa,mBAAG,QAAH,GAAWD,EAHnC;EAAA,IAIAE,cAJA;EAAA,IAIAC,MAAM,mBAAG,QAAH,GAAWD,EAJjB;EAAA,IAKAE,aALA;EAAA,IAKAC,KAAK,mBAAG,KAAH,GAAQD,EALb;EAAA,IAMAE,qBANA;EAAA,IAMAC,aAAa,mBAAG,KAAH,GAAQD,EANrB;EAAA,IAOAE,sBAPA;EAAA,IAOAC,cAAc,mBAAG,IAAH,GAAOD,EAPrB;EAAA,IAQAE,YAAY,kBARZ;EAAA,IASAC,gBATA;EAAA,IASAC,QAAQ,mBAAGT,MAAM,KAAK,MAAX,IACTA,MAAM,KAAK,WADF,IAETA,MAAM,KAAK,iBAFL,GAEsBQ,EAX9B;EAAA,IAYGE,SAAS,cAbd,iIAac,CAZZ;;EAgBF,IAAMC,aAAa,GAAGtB,gBAAgB,EAAtC;EACA,IAAMuB,cAAc,GAAGxB,iBAAiB,CAACyB,SAAD,CAAxC;EAEA,IAAIC,OAAJ;EACA,IAAIC,KAAK,GAAGnB,SAAZ;EACA,IAAIoB,SAAS,GAAGlB,aAAhB;;EACA,IAAI,OAAOS,YAAP,KAAwB,SAA5B,EAAuC;IACrCO,OAAO,GAAGP,YAAV;EACD,CAFD,MAEO,IAAII,aAAJ,EAAmB;IACxBG,OAAO,GAAGF,cAAV;IACAG,KAAK,GAAG,OAAR;IACAC,SAAS,GAAG,KAAZ;EACD,CAJM,MAIA;IACLF,OAAO,GAAGC,KAAK,KAAK,OAAV,IAAqBA,KAAK,KAAK,SAAzC;EACD;;EAED,OACEE,KAAC9B,aAAa,CAAC+B,QAAf,EAAuBC;IAACC,KAAK;EAAN,GAAM;IAAA1B,UAC3BuB,KAAC/B,cAAc,CAACgC,QAAhB,EAAwBC;MAACC,KAAK,EAAEN;IAAR,GAAe;MAAApB,UACrCuB,KAACD,SAAD,EAAUG,aACJT,SADI,EACK;QACbW,SAAS,EAAErC,EAAE,CACXM,KAAK,WACHgC,GAACP,KAAD,IAASA,KAAK,KAAK,OADhB,EAEHO,GAACtB,MAAD,IAAUA,MAAM,KAAK,MAFlB,EAGHsB,UAAMb,QAHH,EAIHa,WAAKpB,KAJF,EAKHoB,GAAClB,aAAD,IAAiBF,KALd,EAMHoB,wBAAmBpB,KAAK,IAAII,cANzB,MADM,EASXe,SATW,CADA;QAYb5B,GAAG,EAAEA;MAZQ,CADL,EAaA;QAAAC,UAEPA;MAFO,CAbA,CAAV;IADqC,CAAf,CAAxB;EAD2B,CAAN,CAAvB,CADF;AAuBD,CAzD+B,CAAzB","names":["forwardRef","cn","bem","InheritContext","ParentContext","useInheritContext","useParentContext","block","AppBar","_a","ref","children","_c","propTheme","_d","propComponent","_e","height","_f","fixed","_g","fixedPosition","_h","fixedElevation","inheritColor","_j","flexWrap","remaining","parentContext","inheritContext","undefined","inherit","theme","Component","_jsx","Provider","__assign","value","className","_b"],"sources":["C:\\Users\\hungr\\Documents\\VS-CODE\\notes-react\\node_modules\\@react-md\\app-bar\\src\\AppBar.tsx"],"sourcesContent":["import type { ElementType, HTMLAttributes } from \"react\";\nimport { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport { bem } from \"@react-md/utils\";\n\nimport {\n  InheritContext,\n  ParentContext,\n  useInheritContext,\n  useParentContext,\n} from \"./useInheritContext\";\n\nexport type AppBarPosition = \"top\" | \"bottom\";\nexport type AppBarTheme = \"clear\" | \"primary\" | \"secondary\" | \"default\";\n\n/**\n * `AppBar`s have multiple heights available:\n *\n * - `\"none\"` - the height is derived by the `children` of the `AppBar`\n * - `\"normal\"` - the height is set to a static height of `$rmd-app-bar-height`\n * - `\"prominent\"` - the height is set to a static height of\n *   `$rmd-app-bar-prominent-height`\n * - `\"dense\"` - the height is set to a static height of\n *   `$rmd-app-bar-dense-height`.\n * - `\"prominent-dense\"` - the height is set to a static height of\n *   `$rmd-app-bar-prominent-dense-height`\n *\n * Note: The `\"dense\"` specs can automatically be enabled with the\n * `rmd-app-bar-dense-theme` mixin instead of changing this value\n *\n * You'll normally want to use the `\"normal\"` or `\"prominent\"` height values for\n * your app, but the `\"none\"` value is useful if you want to use the `AppBar`\n * for styling purposes only for other components like `Tabs`.\n */\nexport type AppBarHeight =\n  | \"none\"\n  | \"normal\"\n  | \"prominent\"\n  | \"dense\"\n  | \"prominent-dense\";\n\nexport interface AppBarProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * The component for the `AppBar` to render as. This should normally either\n   * just be the default `\"header\"` or a `\"div\"` component.\n   *\n   * It is generally recommended to not provide other React components for this\n   * prop even though it is possible since it leads to bad practice and props\n   * might not get passed as one would expect.\n   */\n  component?: ElementType;\n\n  /**\n   * Boolean if the `AppBar` should be fixed to the top or bottom of the page.\n   */\n  fixed?: boolean;\n\n  /**\n   * The position within the page to \"fix\" the `AppBar` when the `fixed` prop is\n   * enabled.\n   */\n  fixedPosition?: AppBarPosition;\n\n  /**\n   * Boolean if the fixed `AppBar` should gain elevation. This is recommended to\n   * stay enabled unless you manually apply a border to help separate the\n   * `AppBar` from other content.\n   */\n  fixedElevation?: boolean;\n\n  /**\n   * The height to use for the app bar. See the `AppBarHeight` type for more\n   * information.\n   */\n  height?: AppBarHeight;\n\n  /**\n   * The theme to apply to the `AppBar`.\n   */\n  theme?: AppBarTheme;\n\n  /**\n   * Boolean if the content of the `AppBar` should be allowed to wrap. When this\n   * is omitted, it will be considered true for `\"none\"`, `\"prominent\"` and\n   * `\"prominent-dense\"` heights\n   */\n  flexWrap?: boolean;\n\n  /**\n   * Boolean if the `AppBarNav`, `AppBarTitle`, and `AppBarActions` should\n   * inherit the color that for the provided `theme`. If this value is\n   * `undefined`, the color will only be inherited when the theme is set to\n   * `primary` or `secondary`. However if this value is a boolean, it will be\n   * used instead. So if you set this to `false` and set the `theme` to\n   * `\"primary\"`, the defined primary text color will not be inherited.\n   */\n  inheritColor?: boolean;\n}\n\nconst block = bem(\"rmd-app-bar\");\n\n/**\n * This component is used to create a top-level app bar in your application that\n * can be used to contain a navigation menu toggle button, the app's logo and/or\n * title, as well as any top-level actions that will be reused throughout your\n * app. When using this component with the `fixed` prop, it is recommended to\n * also use one of the \"offset class names\" so that your content will not be\n * converted by the app bar. You can also use any of the exposed mixins to add\n * these offsets as well.\n */\nexport const AppBar = forwardRef<HTMLDivElement, AppBarProps>(function AppBar(\n  {\n    className,\n    children,\n    theme: propTheme = \"primary\",\n    component: propComponent = \"header\",\n    height = \"normal\",\n    fixed = false,\n    fixedPosition = \"top\",\n    fixedElevation = true,\n    inheritColor,\n    flexWrap = height === \"none\" ||\n      height === \"prominent\" ||\n      height === \"prominent-dense\",\n    ...remaining\n  },\n  ref\n) {\n  const parentContext = useParentContext();\n  const inheritContext = useInheritContext(undefined);\n\n  let inherit: boolean;\n  let theme = propTheme;\n  let Component = propComponent;\n  if (typeof inheritColor === \"boolean\") {\n    inherit = inheritColor;\n  } else if (parentContext) {\n    inherit = inheritContext;\n    theme = \"clear\";\n    Component = \"div\";\n  } else {\n    inherit = theme !== \"clear\" && theme !== \"default\";\n  }\n\n  return (\n    <ParentContext.Provider value>\n      <InheritContext.Provider value={inherit}>\n        <Component\n          {...remaining}\n          className={cn(\n            block({\n              [theme]: theme !== \"clear\",\n              [height]: height !== \"none\",\n              wrap: flexWrap,\n              fixed,\n              [fixedPosition]: fixed,\n              \"fixed-elevation\": fixed && fixedElevation,\n            }),\n            className\n          )}\n          ref={ref}\n        >\n          {children}\n        </Component>\n      </InheritContext.Provider>\n    </ParentContext.Provider>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}