{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { forwardRef } from \"react\";\nimport { useIcon } from \"@react-md/icon\";\nimport { MenuItemInputToggle } from \"./MenuItemInputToggle\";\n/**\n * This is a simple wrapper for the {@link MenuItemInputToggle} component to\n * render it as a radio and pulling the radio icon from the\n * {@link IconProvider}.\n *\n * @remarks\n * If a menu or menubar contains more than one group of menuitemradio elements,\n * or if the menu contains one group and other, unrelated menu items, authors\n * SHOULD nest each set of related menuitemradio elements in an element using\n * the group role, and authors SHOULD delimit the group from other menu items\n * with an element using the separator role.\n * @see {@link https://www.w3.org/TR/wai-aria-1.1/#menuitemradio}\n *\n * @example\n * Only Radio Items\n * ```tsx\n * import { ReactElement, useState } from \"react\";\n * import { DropdownMenu } from \"@react-md/menu\";\n * import { MenuItemRadio } from \"@react-md/form\";\n *\n * function Example(): ReactElement {\n *   const [value, setValue] = useState(\"value1\");\n *\n *   return (\n *     <DropdownMenu id=\"dropdown-menu-id\" buttonChildren=\"Button\">\n *       <MenuItemRadio\n *         id=\"radio-1\"\n *         checked={value === \"value1\"}\n *         onCheckedChange={() => setValue(\"value1\")}\n *       >\n *          Radio 1\n *       </MenuItemRadio>\n *       <MenuItemRadio\n *         id=\"radio-2\"\n *         checked={value === \"value2\"}\n *         onCheckedChange={() => setValue(\"value2\")}\n *       >\n *         Radio 2\n *       </MenuItemRadio>\n *       <MenuItemRadio\n *         id=\"radio-3\"\n *         checked={value === \"value3\"}\n *         onCheckedChange={() => setValue(\"value3\")}\n *       >\n *         Radio 3\n *       </MenuItemRadio>\n *     </DropdownMenu>\n *   );\n * }\n * ```\n *\n * @example\n * With Other Items\n * ```tsx\n * import { ReactElement, useState } from \"react\";\n * import { DropdownMenu, MenuItemGroup, MenuItemSeparator } from \"@react-md/menu\";\n * import { MenuItemRadio, MenuItemSwitch } from \"@react-md/form\";\n *\n * function Example(): ReactElement {\n *   const [value, setValue] = useState(\"value1\");\n *\n *   return (\n *     <DropdownMenu id=\"dropdown-menu-id\" buttonChildren=\"Button\">\n *       <MenuItemSwitch\n *         id=\"switch-id\"\n *         checked={checked}\n *         onCheckedChange={nextChecked => setChecked(nextChecked)}\n *       >\n *         Light mode\n *       </MenuItemSwitch>\n *       <MenuItemSeparator />\n *       <MenuItemGroup aria-label=\"My Group Label\">\n *         <MenuItemRadio\n *           id=\"radio-1\"\n *           checked={value === \"value1\"}\n *           onCheckedChange={() => setValue(\"value1\")}\n *         >\n *           Radio 1\n *         </MenuItemRadio>\n *         <MenuItemRadio\n *           id=\"radio-2\"\n *           checked={value === \"value2\"}\n *           onCheckedChange={() => setValue(\"value2\")}\n *         >\n *           Radio 2\n *         </MenuItemRadio>\n *         <MenuItemRadio\n *           id=\"radio-3\"\n *           checked={value === \"value3\"}\n *           onCheckedChange={() => setValue(\"value3\")}\n *         >\n *           Radio 3\n *         </MenuItemRadio>\n *       </MenuItemGroup>\n *     </DropdownMenu>\n *   );\n * }\n * ```\n *\n * @remarks \\@since 2.8.0\n */\n\nexport var MenuItemRadio = forwardRef(function MenuItemRadio(_a, ref) {\n  var propIcon = _a.icon,\n      props = __rest(_a, [\"icon\"]);\n\n  var icon = useIcon(\"radio\", propIcon);\n  return _jsx(MenuItemInputToggle, __assign({}, props, {\n    ref: ref,\n    icon: icon,\n    type: \"radio\"\n  }));\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,OAAT,QAAwB,gBAAxB;AAEA,SAASC,mBAAT,QAAoC,uBAApC;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqGA,OAAO,IAAMC,aAAa,GAAGH,UAAU,CACrC,SAASG,aAAT,CAAuBC,EAAvB,EAAqDC,GAArD,EAAwD;EAA/B,IAAMC,QAAQ,UAAd;EAAA,IAAmBC,KAAK,cAA1B,QAA0B,CAAxB;;EACvB,IAAMC,IAAI,GAAGP,OAAO,CAAC,OAAD,EAAUK,QAAV,CAApB;EACA,OACEG,KAACP,mBAAD,EAAoBQ,aAAKH,KAAL,EAAU;IAAEF,GAAG,EAAEA,GAAP;IAAYG,IAAI,EAAEA,IAAlB;IAAwBG,IAAI,EAAC;EAA7B,CAAV,CAApB,CADF;AAGD,CANoC,CAAhC","names":["forwardRef","useIcon","MenuItemInputToggle","MenuItemRadio","_a","ref","propIcon","props","icon","_jsx","__assign","type"],"sources":["C:\\Users\\hungr\\Documents\\VS-CODE\\notes-react\\node_modules\\@react-md\\form\\src\\menu\\MenuItemRadio.tsx"],"sourcesContent":["import { forwardRef } from \"react\";\nimport { useIcon } from \"@react-md/icon\";\nimport type { BaseMenuItemInputToggleProps } from \"./MenuItemInputToggle\";\nimport { MenuItemInputToggle } from \"./MenuItemInputToggle\";\n\n/** @remarks \\@since 2.8.0 */\nexport type MenuItemRadioProps = BaseMenuItemInputToggleProps;\n\n/**\n * This is a simple wrapper for the {@link MenuItemInputToggle} component to\n * render it as a radio and pulling the radio icon from the\n * {@link IconProvider}.\n *\n * @remarks\n * If a menu or menubar contains more than one group of menuitemradio elements,\n * or if the menu contains one group and other, unrelated menu items, authors\n * SHOULD nest each set of related menuitemradio elements in an element using\n * the group role, and authors SHOULD delimit the group from other menu items\n * with an element using the separator role.\n * @see {@link https://www.w3.org/TR/wai-aria-1.1/#menuitemradio}\n *\n * @example\n * Only Radio Items\n * ```tsx\n * import { ReactElement, useState } from \"react\";\n * import { DropdownMenu } from \"@react-md/menu\";\n * import { MenuItemRadio } from \"@react-md/form\";\n *\n * function Example(): ReactElement {\n *   const [value, setValue] = useState(\"value1\");\n *\n *   return (\n *     <DropdownMenu id=\"dropdown-menu-id\" buttonChildren=\"Button\">\n *       <MenuItemRadio\n *         id=\"radio-1\"\n *         checked={value === \"value1\"}\n *         onCheckedChange={() => setValue(\"value1\")}\n *       >\n *          Radio 1\n *       </MenuItemRadio>\n *       <MenuItemRadio\n *         id=\"radio-2\"\n *         checked={value === \"value2\"}\n *         onCheckedChange={() => setValue(\"value2\")}\n *       >\n *         Radio 2\n *       </MenuItemRadio>\n *       <MenuItemRadio\n *         id=\"radio-3\"\n *         checked={value === \"value3\"}\n *         onCheckedChange={() => setValue(\"value3\")}\n *       >\n *         Radio 3\n *       </MenuItemRadio>\n *     </DropdownMenu>\n *   );\n * }\n * ```\n *\n * @example\n * With Other Items\n * ```tsx\n * import { ReactElement, useState } from \"react\";\n * import { DropdownMenu, MenuItemGroup, MenuItemSeparator } from \"@react-md/menu\";\n * import { MenuItemRadio, MenuItemSwitch } from \"@react-md/form\";\n *\n * function Example(): ReactElement {\n *   const [value, setValue] = useState(\"value1\");\n *\n *   return (\n *     <DropdownMenu id=\"dropdown-menu-id\" buttonChildren=\"Button\">\n *       <MenuItemSwitch\n *         id=\"switch-id\"\n *         checked={checked}\n *         onCheckedChange={nextChecked => setChecked(nextChecked)}\n *       >\n *         Light mode\n *       </MenuItemSwitch>\n *       <MenuItemSeparator />\n *       <MenuItemGroup aria-label=\"My Group Label\">\n *         <MenuItemRadio\n *           id=\"radio-1\"\n *           checked={value === \"value1\"}\n *           onCheckedChange={() => setValue(\"value1\")}\n *         >\n *           Radio 1\n *         </MenuItemRadio>\n *         <MenuItemRadio\n *           id=\"radio-2\"\n *           checked={value === \"value2\"}\n *           onCheckedChange={() => setValue(\"value2\")}\n *         >\n *           Radio 2\n *         </MenuItemRadio>\n *         <MenuItemRadio\n *           id=\"radio-3\"\n *           checked={value === \"value3\"}\n *           onCheckedChange={() => setValue(\"value3\")}\n *         >\n *           Radio 3\n *         </MenuItemRadio>\n *       </MenuItemGroup>\n *     </DropdownMenu>\n *   );\n * }\n * ```\n *\n * @remarks \\@since 2.8.0\n */\nexport const MenuItemRadio = forwardRef<HTMLLIElement, MenuItemRadioProps>(\n  function MenuItemRadio({ icon: propIcon, ...props }, ref) {\n    const icon = useIcon(\"radio\", propIcon);\n    return (\n      <MenuItemInputToggle {...props} ref={ref} icon={icon} type=\"radio\" />\n    );\n  }\n);\n"]},"metadata":{},"sourceType":"module"}