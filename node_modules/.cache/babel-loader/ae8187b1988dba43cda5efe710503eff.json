{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\n\nimport { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport { isListboxOptionProps, Option, TextField } from \"@react-md/form\";\nimport { List } from \"@react-md/list\";\nimport { ScaleTransition } from \"@react-md/transition\";\nimport { BELOW_CENTER_ANCHOR, bem, omit } from \"@react-md/utils\";\nimport { HighlightedResult } from \"./HighlightedResult\";\nimport { useAutoComplete } from \"./useAutoComplete\";\nimport { getResultId as DEFAULT_GET_RESULT_ID, getResultLabel as DEFAULT_GET_RESULT_LABEL, getResultValue as DEFAULT_GET_RESULT_VALUE } from \"./utils\";\nvar block = bem(\"rmd-autocomplate\");\nvar listbox = bem(\"rmd-listbox\");\nvar DEFAULT_FILTER_OPTIONS = {\n  trim: true,\n  ignoreWhitespace: true\n};\nvar EMPTY_LIST = [];\n/**\n * An AutoComplete is an accessible combobox widget that allows for real-time\n * suggestions as the user types.\n */\n\nexport var AutoComplete = forwardRef(function AutoComplete(_a, forwardedRef) {\n  var _b = _a.autoComplete,\n      autoComplete = _b === void 0 ? \"list\" : _b,\n      data = _a.data,\n      _c = _a.filter,\n      filter = _c === void 0 ? \"case-insensitive\" : _c,\n      _d = _a.filterOptions,\n      filterOptions = _d === void 0 ? DEFAULT_FILTER_OPTIONS : _d,\n      _e = _a.filterOnNoValue,\n      filterOnNoValue = _e === void 0 ? false : _e,\n      className = _a.className,\n      onBlur = _a.onBlur,\n      onFocus = _a.onFocus,\n      onClick = _a.onClick,\n      onKeyDown = _a.onKeyDown,\n      onChange = _a.onChange,\n      containerProps = _a.containerProps,\n      _f = _a.portal,\n      portal = _f === void 0 ? false : _f,\n      portalInto = _a.portalInto,\n      portalIntoId = _a.portalIntoId,\n      listboxStyle = _a.listboxStyle,\n      listboxClassName = _a.listboxClassName,\n      onAutoComplete = _a.onAutoComplete,\n      _g = _a.clearOnAutoComplete,\n      clearOnAutoComplete = _g === void 0 ? false : _g,\n      _h = _a.labelKey,\n      labelKey = _h === void 0 ? \"label\" : _h,\n      _j = _a.valueKey,\n      valueKey = _j === void 0 ? \"value\" : _j,\n      _k = _a.getResultId,\n      getResultId = _k === void 0 ? DEFAULT_GET_RESULT_ID : _k,\n      _l = _a.getResultLabel,\n      getResultLabel = _l === void 0 ? DEFAULT_GET_RESULT_LABEL : _l,\n      _m = _a.getResultValue,\n      getResultValue = _m === void 0 ? DEFAULT_GET_RESULT_VALUE : _m,\n      _o = _a.highlight,\n      highlight = _o === void 0 ? false : _o,\n      _p = _a.highlightReapeating,\n      highlightReapeating = _p === void 0 ? false : _p,\n      highlightStyle = _a.highlightStyle,\n      highlightClassName = _a.highlightClassName,\n      _q = _a.anchor,\n      anchor = _q === void 0 ? BELOW_CENTER_ANCHOR : _q,\n      _r = _a.listboxWidth,\n      listboxWidth = _r === void 0 ? \"equal\" : _r,\n      _s = _a.xMargin,\n      xMargin = _s === void 0 ? 0 : _s,\n      _t = _a.yMargin,\n      yMargin = _t === void 0 ? 0 : _t,\n      _u = _a.vwMargin,\n      vwMargin = _u === void 0 ? 16 : _u,\n      _v = _a.vhMargin,\n      vhMargin = _v === void 0 ? 16 : _v,\n      _w = _a.transformOrigin,\n      transformOrigin = _w === void 0 ? true : _w,\n      _x = _a.preventOverlap,\n      preventOverlap = _x === void 0 ? true : _x,\n      _y = _a.disableVHBounds,\n      disableVHBounds = _y === void 0 ? false : _y,\n      _z = _a.disableSwapping,\n      disableSwapping = _z === void 0 ? true : _z,\n      disableShowOnFocus = _a.disableShowOnFocus,\n      _0 = _a.closeOnResize,\n      closeOnResize = _0 === void 0 ? false : _0,\n      _1 = _a.closeOnScroll,\n      closeOnScroll = _1 === void 0 ? false : _1,\n      _2 = _a.omitKeys,\n      omitKeys = _2 === void 0 ? EMPTY_LIST : _2,\n      propValue = _a.value,\n      defaultValue = _a.defaultValue,\n      beforeResultsChildren = _a.beforeResultsChildren,\n      afterResultsChildren = _a.afterResultsChildren,\n      props = __rest(_a, [\"autoComplete\", \"data\", \"filter\", \"filterOptions\", \"filterOnNoValue\", \"className\", \"onBlur\", \"onFocus\", \"onClick\", \"onKeyDown\", \"onChange\", \"containerProps\", \"portal\", \"portalInto\", \"portalIntoId\", \"listboxStyle\", \"listboxClassName\", \"onAutoComplete\", \"clearOnAutoComplete\", \"labelKey\", \"valueKey\", \"getResultId\", \"getResultLabel\", \"getResultValue\", \"highlight\", \"highlightReapeating\", \"highlightStyle\", \"highlightClassName\", \"anchor\", \"listboxWidth\", \"xMargin\", \"yMargin\", \"vwMargin\", \"vhMargin\", \"transformOrigin\", \"preventOverlap\", \"disableVHBounds\", \"disableSwapping\", \"disableShowOnFocus\", \"closeOnResize\", \"closeOnScroll\", \"omitKeys\", \"value\", \"defaultValue\", \"beforeResultsChildren\", \"afterResultsChildren\"]);\n\n  var id = props.id;\n  var comboboxId = \"\".concat(id, \"-combobox\");\n  var suggestionsId = \"\".concat(id, \"-listbox\");\n  var isListAutocomplete = autoComplete === \"list\" || autoComplete === \"both\";\n  var isInlineAutocomplete = autoComplete === \"inline\" || autoComplete === \"both\";\n\n  var _3 = useAutoComplete({\n    suggestionsId: suggestionsId,\n    defaultValue: defaultValue,\n    data: data,\n    filter: filter,\n    filterOptions: filterOptions,\n    filterOnNoValue: filterOnNoValue,\n    valueKey: valueKey,\n    getResultId: getResultId,\n    getResultValue: getResultValue,\n    onBlur: onBlur,\n    onFocus: onFocus,\n    onClick: onClick,\n    onChange: onChange,\n    onKeyDown: onKeyDown,\n    forwardedRef: forwardedRef,\n    onAutoComplete: onAutoComplete,\n    clearOnAutoComplete: clearOnAutoComplete,\n    isListAutocomplete: isListAutocomplete,\n    isInlineAutocomplete: isInlineAutocomplete,\n    anchor: anchor,\n    xMargin: xMargin,\n    yMargin: yMargin,\n    vwMargin: vwMargin,\n    vhMargin: vhMargin,\n    transformOrigin: transformOrigin,\n    listboxWidth: listboxWidth,\n    listboxStyle: listboxStyle,\n    preventOverlap: preventOverlap,\n    disableSwapping: disableSwapping,\n    disableVHBounds: disableVHBounds,\n    closeOnResize: closeOnResize,\n    closeOnScroll: closeOnScroll,\n    disableShowOnFocus: disableShowOnFocus\n  }),\n      ref = _3.ref,\n      match = _3.match,\n      value = _3.value,\n      visible = _3.visible,\n      activeId = _3.activeId,\n      itemRefs = _3.itemRefs,\n      filteredData = _3.filteredData,\n      listboxRef = _3.listboxRef,\n      fixedStyle = _3.fixedStyle,\n      transitionHooks = _3.transitionHooks,\n      handleBlur = _3.handleBlur,\n      handleFocus = _3.handleFocus,\n      handleClick = _3.handleClick,\n      handleChange = _3.handleChange,\n      handleKeyDown = _3.handleKeyDown,\n      handleAutoComplete = _3.handleAutoComplete;\n\n  return _jsxs(_Fragment, {\n    children: [_jsx(TextField, __assign({}, props, {\n      \"aria-autocomplete\": autoComplete,\n      \"aria-controls\": comboboxId,\n      \"aria-activedescendant\": activeId,\n      autoComplete: \"off\",\n      value: propValue !== null && propValue !== void 0 ? propValue : match,\n      onBlur: handleBlur,\n      onFocus: handleFocus,\n      onClick: handleClick,\n      onKeyDown: handleKeyDown,\n      onChange: handleChange,\n      ref: ref,\n      className: cn(block(), className),\n      containerProps: __assign(__assign({}, containerProps), {\n        \"aria-haspopup\": \"listbox\",\n        \"aria-owns\": suggestionsId,\n        \"aria-expanded\": visible,\n        id: comboboxId,\n        role: \"combobox\"\n      })\n    })), _jsx(ScaleTransition, __assign({\n      nodeRef: listboxRef,\n      portal: portal,\n      portalInto: portalInto,\n      portalIntoId: portalIntoId,\n      vertical: true,\n      transitionIn: visible\n    }, transitionHooks, {\n      className: cn(listbox({\n        temporary: true\n      }), listboxClassName)\n    }, {\n      children: _jsxs(List, __assign({\n        id: suggestionsId,\n        role: \"listbox\",\n        style: fixedStyle\n      }, {\n        children: [beforeResultsChildren, filteredData.map(function (datum, i) {\n          var resultId = getResultId(suggestionsId, i);\n          var optionProps;\n\n          if (isListboxOptionProps(datum)) {\n            optionProps = omit(datum, __spreadArray([labelKey, valueKey], __read(omitKeys), false));\n          }\n\n          return _jsx(Option, __assign({}, optionProps, {\n            id: resultId,\n            selected: false,\n            focused: resultId === activeId,\n            ref: itemRefs[i],\n            onClick: function () {\n              return handleAutoComplete(i);\n            }\n          }, {\n            children: _jsx(HighlightedResult, __assign({\n              id: \"\".concat(resultId, \"-match\"),\n              style: highlightStyle,\n              className: highlightClassName,\n              value: propValue !== null && propValue !== void 0 ? propValue : value,\n              enabled: highlight,\n              repeatable: highlightReapeating\n            }, {\n              children: getResultLabel(datum, labelKey, value)\n            }))\n          }), resultId);\n        }), afterResultsChildren]\n      }))\n    }))]\n  });\n});","map":{"version":3,"mappings":"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","names":["forwardRef","cn","isListboxOptionProps","Option","TextField","List","ScaleTransition","BELOW_CENTER_ANCHOR","bem","omit","HighlightedResult","useAutoComplete","getResultId","DEFAULT_GET_RESULT_ID","getResultLabel","DEFAULT_GET_RESULT_LABEL","getResultValue","DEFAULT_GET_RESULT_VALUE","block","listbox","DEFAULT_FILTER_OPTIONS","trim","ignoreWhitespace","EMPTY_LIST","AutoComplete","_a","forwardedRef","_b","data","_c","filter","_d","filterOptions","_e","filterOnNoValue","className","onBlur","onFocus","onClick","onKeyDown","onChange","containerProps","_f","portal","portalInto","portalIntoId","listboxStyle","listboxClassName","onAutoComplete","_g","clearOnAutoComplete","_h","labelKey","_j","valueKey","_k","_l","_m","_o","highlight","_p","highlightReapeating","highlightStyle","highlightClassName","_q","anchor","_r","listboxWidth","_s","xMargin","_t","yMargin","_u","vwMargin","_v","vhMargin","_w","transformOrigin","_x","preventOverlap","_y","disableVHBounds","_z","disableSwapping","disableShowOnFocus","_0","closeOnResize","_1","closeOnScroll","_2","omitKeys","propValue","defaultValue","beforeResultsChildren","afterResultsChildren","props","comboboxId","id","suggestionsId","isListAutocomplete","autoComplete","isInlineAutocomplete","ref","match","value","visible","activeId","itemRefs","filteredData","listboxRef","fixedStyle","transitionHooks","handleBlur","handleFocus","handleClick","handleChange","handleKeyDown","handleAutoComplete","_jsxs","children","_jsx","__assign","role","nodeRef","vertical","transitionIn","temporary","style","map","datum","i","resultId","optionProps","__spreadArray","__read","selected","focused","enabled","repeatable"],"sources":["C:\\Users\\hungr\\Documents\\VS-CODE\\notes-react\\node_modules\\@react-md\\autocomplete\\src\\AutoComplete.tsx"],"sourcesContent":["import { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport type { ListboxOptionProps } from \"@react-md/form\";\nimport { isListboxOptionProps, Option, TextField } from \"@react-md/form\";\nimport { List } from \"@react-md/list\";\nimport { ScaleTransition } from \"@react-md/transition\";\nimport { BELOW_CENTER_ANCHOR, bem, omit } from \"@react-md/utils\";\n\nimport { HighlightedResult } from \"./HighlightedResult\";\nimport type { AutoCompleteProps } from \"./types\";\nimport { useAutoComplete } from \"./useAutoComplete\";\nimport {\n  getResultId as DEFAULT_GET_RESULT_ID,\n  getResultLabel as DEFAULT_GET_RESULT_LABEL,\n  getResultValue as DEFAULT_GET_RESULT_VALUE,\n} from \"./utils\";\n\nconst block = bem(\"rmd-autocomplate\");\nconst listbox = bem(\"rmd-listbox\");\n\nconst DEFAULT_FILTER_OPTIONS = {\n  trim: true,\n  ignoreWhitespace: true,\n};\n\nconst EMPTY_LIST: readonly string[] = [];\n\n/**\n * An AutoComplete is an accessible combobox widget that allows for real-time\n * suggestions as the user types.\n */\nexport const AutoComplete = forwardRef<HTMLInputElement, AutoCompleteProps>(\n  function AutoComplete(\n    {\n      autoComplete = \"list\",\n      data,\n      filter = \"case-insensitive\",\n      filterOptions = DEFAULT_FILTER_OPTIONS,\n      filterOnNoValue = false,\n      className,\n      onBlur,\n      onFocus,\n      onClick,\n      onKeyDown,\n      onChange,\n      containerProps,\n      portal = false,\n      portalInto,\n      portalIntoId,\n      listboxStyle,\n      listboxClassName,\n      onAutoComplete,\n      clearOnAutoComplete = false,\n      labelKey = \"label\",\n      valueKey = \"value\",\n      getResultId = DEFAULT_GET_RESULT_ID,\n      getResultLabel = DEFAULT_GET_RESULT_LABEL,\n      getResultValue = DEFAULT_GET_RESULT_VALUE,\n      highlight = false,\n      highlightReapeating = false,\n      highlightStyle,\n      highlightClassName,\n      anchor = BELOW_CENTER_ANCHOR,\n      listboxWidth = \"equal\",\n      xMargin = 0,\n      yMargin = 0,\n      vwMargin = 16,\n      vhMargin = 16,\n      transformOrigin = true,\n      preventOverlap = true,\n      disableVHBounds = false,\n      disableSwapping = true,\n      disableShowOnFocus,\n      closeOnResize = false,\n      closeOnScroll = false,\n      omitKeys = EMPTY_LIST,\n      value: propValue,\n      defaultValue,\n      beforeResultsChildren,\n      afterResultsChildren,\n      ...props\n    },\n    forwardedRef\n  ) {\n    const { id } = props;\n    const comboboxId = `${id}-combobox`;\n    const suggestionsId = `${id}-listbox`;\n    const isListAutocomplete =\n      autoComplete === \"list\" || autoComplete === \"both\";\n    const isInlineAutocomplete =\n      autoComplete === \"inline\" || autoComplete === \"both\";\n\n    const {\n      ref,\n      match,\n      value,\n      visible,\n      activeId,\n      itemRefs,\n      filteredData,\n      listboxRef,\n      fixedStyle,\n      transitionHooks,\n      handleBlur,\n      handleFocus,\n      handleClick,\n      handleChange,\n      handleKeyDown,\n      handleAutoComplete,\n    } = useAutoComplete({\n      suggestionsId,\n      defaultValue,\n      data,\n      filter,\n      filterOptions,\n      filterOnNoValue,\n      valueKey,\n      getResultId,\n      getResultValue,\n      onBlur,\n      onFocus,\n      onClick,\n      onChange,\n      onKeyDown,\n      forwardedRef,\n      onAutoComplete,\n      clearOnAutoComplete,\n      isListAutocomplete,\n      isInlineAutocomplete,\n      anchor,\n      xMargin,\n      yMargin,\n      vwMargin,\n      vhMargin,\n      transformOrigin,\n      listboxWidth,\n      listboxStyle,\n      preventOverlap,\n      disableSwapping,\n      disableVHBounds,\n      closeOnResize,\n      closeOnScroll,\n      disableShowOnFocus,\n    });\n\n    return (\n      <>\n        <TextField\n          {...props}\n          aria-autocomplete={autoComplete}\n          aria-controls={comboboxId}\n          aria-activedescendant={activeId}\n          autoComplete=\"off\"\n          value={propValue ?? match}\n          onBlur={handleBlur}\n          onFocus={handleFocus}\n          onClick={handleClick}\n          onKeyDown={handleKeyDown}\n          onChange={handleChange}\n          ref={ref}\n          className={cn(block(), className)}\n          containerProps={{\n            ...containerProps,\n            \"aria-haspopup\": \"listbox\",\n            \"aria-owns\": suggestionsId,\n            \"aria-expanded\": visible,\n            id: comboboxId,\n            role: \"combobox\",\n          }}\n        />\n        <ScaleTransition\n          nodeRef={listboxRef}\n          portal={portal}\n          portalInto={portalInto}\n          portalIntoId={portalIntoId}\n          vertical\n          transitionIn={visible}\n          {...transitionHooks}\n          className={cn(listbox({ temporary: true }), listboxClassName)}\n        >\n          <List id={suggestionsId} role=\"listbox\" style={fixedStyle}>\n            {beforeResultsChildren}\n            {filteredData.map((datum, i) => {\n              const resultId = getResultId(suggestionsId, i);\n              let optionProps: ListboxOptionProps | undefined;\n              if (isListboxOptionProps(datum)) {\n                optionProps = omit(datum, [labelKey, valueKey, ...omitKeys]);\n              }\n\n              return (\n                <Option\n                  key={resultId}\n                  {...optionProps}\n                  id={resultId}\n                  selected={false}\n                  focused={resultId === activeId}\n                  ref={itemRefs[i]}\n                  onClick={() => handleAutoComplete(i)}\n                >\n                  <HighlightedResult\n                    id={`${resultId}-match`}\n                    style={highlightStyle}\n                    className={highlightClassName}\n                    value={propValue ?? value}\n                    enabled={highlight}\n                    repeatable={highlightReapeating}\n                  >\n                    {getResultLabel(datum, labelKey, value)}\n                  </HighlightedResult>\n                </Option>\n              );\n            })}\n            {afterResultsChildren}\n          </List>\n        </ScaleTransition>\n      </>\n    );\n  }\n);\n"]},"metadata":{},"sourceType":"module"}