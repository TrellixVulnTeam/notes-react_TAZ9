{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { forwardRef } from \"react\";\nimport { useInteractionStates } from \"@react-md/states\";\nimport { getListItemHeight } from \"./getListItemHeight\";\nimport { ListItemChildren } from \"./ListItemChildren\";\nimport { SimpleListItem } from \"./SimpleListItem\";\n/**\n * The `ListItem` creates a clickable and focusable `<li>` within a `List` that\n * can optionally render addons to the left and right of the `children` or text.\n */\n\nexport var ListItem = forwardRef(function ListItem(_a, ref) {\n  var propClassName = _a.className,\n      textClassName = _a.textClassName,\n      secondaryTextClassName = _a.secondaryTextClassName,\n      _b = _a.textChildren,\n      textChildren = _b === void 0 ? true : _b,\n      primaryText = _a.primaryText,\n      secondaryText = _a.secondaryText,\n      children = _a.children,\n      leftAddon = _a.leftAddon,\n      _c = _a.leftAddonType,\n      leftAddonType = _c === void 0 ? \"icon\" : _c,\n      _d = _a.leftAddonPosition,\n      leftAddonPosition = _d === void 0 ? \"middle\" : _d,\n      rightAddon = _a.rightAddon,\n      _e = _a.rightAddonType,\n      rightAddonType = _e === void 0 ? \"icon\" : _e,\n      _f = _a.rightAddonPosition,\n      rightAddonPosition = _f === void 0 ? \"middle\" : _f,\n      forceAddonWrap = _a.forceAddonWrap,\n      _g = _a.height,\n      propHeight = _g === void 0 ? \"auto\" : _g,\n      _h = _a.disableSpacebarClick,\n      disableSpacebarClick = _h === void 0 ? false : _h,\n      _j = _a.disableRipple,\n      disableRipple = _j === void 0 ? false : _j,\n      _k = _a.disableProgrammaticRipple,\n      disableProgrammaticRipple = _k === void 0 ? false : _k,\n      _l = _a.disablePressedFallback,\n      disablePressedFallback = _l === void 0 ? false : _l,\n      disableEnterClick = _a.disableEnterClick,\n      rippleTimeout = _a.rippleTimeout,\n      rippleClassNames = _a.rippleClassNames,\n      rippleClassName = _a.rippleClassName,\n      rippleContainerClassName = _a.rippleContainerClassName,\n      _m = _a.role,\n      role = _m === void 0 ? \"button\" : _m,\n      _o = _a.disabled,\n      disabled = _o === void 0 ? false : _o,\n      _p = _a.tabIndex,\n      tabIndex = _p === void 0 ? disabled ? -1 : 0 : _p,\n      props = __rest(_a, [\"className\", \"textClassName\", \"secondaryTextClassName\", \"textChildren\", \"primaryText\", \"secondaryText\", \"children\", \"leftAddon\", \"leftAddonType\", \"leftAddonPosition\", \"rightAddon\", \"rightAddonType\", \"rightAddonPosition\", \"forceAddonWrap\", \"height\", \"disableSpacebarClick\", \"disableRipple\", \"disableProgrammaticRipple\", \"disablePressedFallback\", \"disableEnterClick\", \"rippleTimeout\", \"rippleClassNames\", \"rippleClassName\", \"rippleContainerClassName\", \"role\", \"disabled\", \"tabIndex\"]);\n\n  var _q = useInteractionStates({\n    className: propClassName,\n    handlers: props,\n    disabled: disabled,\n    disableRipple: disableRipple,\n    disableProgrammaticRipple: disableProgrammaticRipple,\n    rippleTimeout: rippleTimeout,\n    rippleClassNames: rippleClassNames,\n    rippleClassName: rippleClassName,\n    rippleContainerClassName: rippleContainerClassName,\n    disableSpacebarClick: disableSpacebarClick,\n    disablePressedFallback: disablePressedFallback,\n    disableEnterClick: disableEnterClick\n  }),\n      ripples = _q.ripples,\n      className = _q.className,\n      handlers = _q.handlers;\n\n  var height = getListItemHeight({\n    height: propHeight,\n    leftAddon: leftAddon,\n    leftAddonType: leftAddonType,\n    rightAddon: rightAddon,\n    rightAddonType: rightAddonType,\n    secondaryText: secondaryText\n  });\n  return _jsxs(SimpleListItem, __assign({}, props, handlers, {\n    ref: ref,\n    tabIndex: tabIndex,\n    disabled: disabled,\n    role: role,\n    className: className,\n    clickable: true,\n    height: height\n  }, {\n    children: [_jsx(ListItemChildren, __assign({\n      textClassName: textClassName,\n      secondaryTextClassName: secondaryTextClassName,\n      textChildren: textChildren,\n      primaryText: primaryText,\n      secondaryText: secondaryText,\n      leftAddon: leftAddon,\n      leftAddonType: leftAddonType,\n      leftAddonPosition: leftAddonPosition,\n      rightAddon: rightAddon,\n      rightAddonType: rightAddonType,\n      rightAddonPosition: rightAddonPosition,\n      forceAddonWrap: forceAddonWrap\n    }, {\n      children: children\n    })), ripples]\n  }));\n});","map":{"version":3,"mappings":"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","names":["forwardRef","useInteractionStates","getListItemHeight","ListItemChildren","SimpleListItem","ListItem","_a","ref","propClassName","textClassName","secondaryTextClassName","_b","textChildren","primaryText","secondaryText","children","leftAddon","_c","leftAddonType","_d","leftAddonPosition","rightAddon","_e","rightAddonType","_f","rightAddonPosition","forceAddonWrap","_g","propHeight","_h","disableSpacebarClick","_j","disableRipple","_k","disableProgrammaticRipple","_l","disablePressedFallback","disableEnterClick","rippleTimeout","rippleClassNames","rippleClassName","rippleContainerClassName","_m","role","_o","disabled","_p","tabIndex","props","className","handlers","ripples","height","_jsxs","__assign","clickable","_jsx"],"sources":["C:\\Users\\hungr\\Documents\\VS-CODE\\notes-react\\node_modules\\@react-md\\list\\src\\ListItem.tsx"],"sourcesContent":["import { forwardRef } from \"react\";\nimport type { InteractionStatesOptions } from \"@react-md/states\";\nimport { useInteractionStates } from \"@react-md/states\";\n\nimport type { SimpleListItemProps } from \"./getListItemHeight\";\nimport { getListItemHeight } from \"./getListItemHeight\";\nimport { ListItemChildren } from \"./ListItemChildren\";\nimport { SimpleListItem } from \"./SimpleListItem\";\n\nexport interface ListItemProps\n  extends SimpleListItemProps,\n    InteractionStatesOptions<HTMLLIElement> {\n  /**\n   * An optional `tabIndex` for the clickable and focusable item.\n   */\n  tabIndex?: number;\n}\n\n/**\n * The `ListItem` creates a clickable and focusable `<li>` within a `List` that\n * can optionally render addons to the left and right of the `children` or text.\n */\nexport const ListItem = forwardRef<HTMLLIElement, ListItemProps>(\n  function ListItem(\n    {\n      className: propClassName,\n      textClassName,\n      secondaryTextClassName,\n      textChildren = true,\n      primaryText,\n      secondaryText,\n      children,\n      leftAddon,\n      leftAddonType = \"icon\",\n      leftAddonPosition = \"middle\",\n      rightAddon,\n      rightAddonType = \"icon\",\n      rightAddonPosition = \"middle\",\n      forceAddonWrap,\n      height: propHeight = \"auto\",\n      disableSpacebarClick = false,\n      disableRipple = false,\n      disableProgrammaticRipple = false,\n      disablePressedFallback = false,\n      disableEnterClick,\n      rippleTimeout,\n      rippleClassNames,\n      rippleClassName,\n      rippleContainerClassName,\n      role = \"button\",\n      disabled = false,\n      tabIndex = disabled ? -1 : 0,\n      ...props\n    },\n    ref\n  ) {\n    const { ripples, className, handlers } = useInteractionStates({\n      className: propClassName,\n      handlers: props,\n      disabled,\n      disableRipple,\n      disableProgrammaticRipple,\n      rippleTimeout,\n      rippleClassNames,\n      rippleClassName,\n      rippleContainerClassName,\n      disableSpacebarClick,\n      disablePressedFallback,\n      disableEnterClick,\n    });\n\n    const height = getListItemHeight({\n      height: propHeight,\n      leftAddon,\n      leftAddonType,\n      rightAddon,\n      rightAddonType,\n      secondaryText,\n    });\n\n    return (\n      <SimpleListItem\n        {...props}\n        {...handlers}\n        ref={ref}\n        tabIndex={tabIndex}\n        disabled={disabled}\n        role={role}\n        className={className}\n        clickable\n        height={height}\n      >\n        <ListItemChildren\n          textClassName={textClassName}\n          secondaryTextClassName={secondaryTextClassName}\n          textChildren={textChildren}\n          primaryText={primaryText}\n          secondaryText={secondaryText}\n          leftAddon={leftAddon}\n          leftAddonType={leftAddonType}\n          leftAddonPosition={leftAddonPosition}\n          rightAddon={rightAddon}\n          rightAddonType={rightAddonType}\n          rightAddonPosition={rightAddonPosition}\n          forceAddonWrap={forceAddonWrap}\n        >\n          {children}\n        </ListItemChildren>\n        {ripples}\n      </SimpleListItem>\n    );\n  }\n);\n"]},"metadata":{},"sourceType":"module"}