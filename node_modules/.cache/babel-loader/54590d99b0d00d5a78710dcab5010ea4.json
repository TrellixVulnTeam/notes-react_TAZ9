{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport { useIcon } from \"@react-md/icon\";\nimport { bem } from \"@react-md/utils\";\nimport { useFormTheme } from \"../FormThemeProvider\";\nimport { FloatingLabel } from \"../label/FloatingLabel\";\nimport { TextFieldContainer } from \"../text-field/TextFieldContainer\";\nimport { useFieldStates } from \"../useFieldStates\";\nvar block = bem(\"rmd-native-select\");\nvar container = bem(\"rmd-native-select-container\");\n/**\n * This component is used to render a native `<select>` element with the text\n * field theme styles. This component is great to use for native behavior and\n * full accessibility.\n */\n\nexport var NativeSelect = forwardRef(function NativeSelect(_a, ref) {\n  var style = _a.style,\n      className = _a.className,\n      labelStyle = _a.labelStyle,\n      labelClassName = _a.labelClassName,\n      selectStyle = _a.selectStyle,\n      selectClassName = _a.selectClassName,\n      propIcon = _a.icon,\n      propTheme = _a.theme,\n      _b = _a.dense,\n      dense = _b === void 0 ? false : _b,\n      _c = _a.inline,\n      inline = _c === void 0 ? false : _c,\n      _d = _a.stretch,\n      stretch = _d === void 0 ? false : _d,\n      _e = _a.error,\n      error = _e === void 0 ? false : _e,\n      _f = _a.disabled,\n      disabled = _f === void 0 ? false : _f,\n      label = _a.label,\n      propOnBlur = _a.onBlur,\n      propOnFocus = _a.onFocus,\n      propOnChange = _a.onChange,\n      containerRef = _a.containerRef,\n      isLeftAddon = _a.isLeftAddon,\n      isRightAddon = _a.isRightAddon,\n      leftChildren = _a.leftChildren,\n      rightChildren = _a.rightChildren,\n      propUnderlineDirection = _a.underlineDirection,\n      children = _a.children,\n      props = __rest(_a, [\"style\", \"className\", \"labelStyle\", \"labelClassName\", \"selectStyle\", \"selectClassName\", \"icon\", \"theme\", \"dense\", \"inline\", \"stretch\", \"error\", \"disabled\", \"label\", \"onBlur\", \"onFocus\", \"onChange\", \"containerRef\", \"isLeftAddon\", \"isRightAddon\", \"leftChildren\", \"rightChildren\", \"underlineDirection\", \"children\"]);\n\n  var id = props.id,\n      value = props.value,\n      defaultValue = props.defaultValue,\n      multiple = props.multiple;\n\n  var _g = useFormTheme({\n    theme: propTheme,\n    underlineDirection: propUnderlineDirection\n  }),\n      theme = _g.theme,\n      underlineDirection = _g.underlineDirection;\n\n  var underline = theme === \"underline\" || theme === \"filled\";\n  var icon = useIcon(\"dropdown\", propIcon);\n\n  var _h = useFieldStates({\n    onBlur: propOnBlur,\n    onFocus: propOnFocus,\n    onChange: propOnChange,\n    value: value,\n    defaultValue: defaultValue\n  }),\n      valued = _h.valued,\n      focused = _h.focused,\n      onBlur = _h.onBlur,\n      onFocus = _h.onFocus,\n      onChange = _h.onChange;\n\n  return _jsxs(TextFieldContainer, __assign({\n    style: style,\n    className: cn(container({\n      multi: multiple,\n      padded: multiple && label\n    }), className),\n    ref: containerRef,\n    theme: theme,\n    error: error,\n    active: focused,\n    label: !!label,\n    dense: dense,\n    inline: inline,\n    stretch: stretch,\n    disabled: disabled,\n    isLeftAddon: isLeftAddon,\n    isRightAddon: isRightAddon,\n    leftChildren: leftChildren,\n    rightChildren: multiple && rightChildren,\n    underlineDirection: underlineDirection\n  }, {\n    children: [_jsx(FloatingLabel, __assign({\n      style: labelStyle,\n      className: cn(block(\"label\"), labelClassName),\n      htmlFor: id,\n      error: error,\n      active: valued && focused,\n      valued: valued,\n      floating: valued || multiple,\n      dense: dense,\n      disabled: disabled\n    }, {\n      children: label\n    })), _jsx(\"select\", __assign({}, props, {\n      ref: ref,\n      style: selectStyle,\n      className: cn(block({\n        icon: icon,\n        multi: multiple,\n        \"label-underline\": label && underline,\n        \"placeholder-underline\": !label && underline,\n        floating: label && theme !== \"none\"\n      }), selectClassName),\n      disabled: disabled,\n      onFocus: onFocus,\n      onBlur: onBlur,\n      onChange: onChange\n    }, {\n      children: children\n    })), !multiple && icon && _jsx(\"span\", __assign({\n      className: block(\"icon\")\n    }, {\n      children: icon\n    }))]\n  }));\n});","map":{"version":3,"mappings":"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","names":["forwardRef","cn","useIcon","bem","useFormTheme","FloatingLabel","TextFieldContainer","useFieldStates","block","container","NativeSelect","_a","ref","className","labelStyle","labelClassName","selectStyle","selectClassName","propIcon","propTheme","_b","dense","_c","inline","_d","stretch","_e","error","_f","disabled","label","propOnBlur","propOnFocus","propOnChange","containerRef","isLeftAddon","isRightAddon","leftChildren","rightChildren","propUnderlineDirection","children","props","value","defaultValue","multiple","theme","underlineDirection","underline","icon","onBlur","onFocus","onChange","valued","focused","_jsxs","__assign","style","multi","padded","active","_jsx","htmlFor","id","floating"],"sources":["C:\\Users\\hungr\\Documents\\VS-CODE\\notes-react\\node_modules\\@react-md\\form\\src\\select\\NativeSelect.tsx"],"sourcesContent":["import type {\n  CSSProperties,\n  ReactNode,\n  Ref,\n  SelectHTMLAttributes,\n} from \"react\";\nimport { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport { useIcon } from \"@react-md/icon\";\nimport { bem } from \"@react-md/utils\";\n\nimport { useFormTheme } from \"../FormThemeProvider\";\nimport { FloatingLabel } from \"../label/FloatingLabel\";\nimport type { TextFieldContainerOptions } from \"../text-field/TextFieldContainer\";\nimport { TextFieldContainer } from \"../text-field/TextFieldContainer\";\nimport { useFieldStates } from \"../useFieldStates\";\n\nexport interface NativeSelectProps\n  extends SelectHTMLAttributes<HTMLSelectElement>,\n    TextFieldContainerOptions {\n  /**\n   * The id for the select. This is required for accessibility.\n   */\n  id: string;\n\n  /**\n   * An optional ref to apply to the text field's container div element. The\n   * default ref is forwarded on to the `input` element.\n   */\n  containerRef?: Ref<HTMLDivElement>;\n\n  /**\n   * An optional icon to display to the right of the select. This should\n   * normally be a dropdown icon to replace the native select's dropdown icon.\n   * If this is set to `null`, the native select's dropdown icon will be\n   * displayed instead.\n   *\n   * This defaults to the `IconProvider`'s dropdown icon from the\n   * `@react-md/icon` package.\n   */\n  icon?: ReactNode;\n\n  /**\n   * An optional floating label to use for the text field. This should really\n   * only be used when the `theme` prop is not set to `\"none\"`. This will be\n   * wrapped in the `<Label>` component itself and automatically apply the\n   * `htmlFor` prop for this text field.\n   */\n  label?: ReactNode;\n\n  /**\n   * An optional style to apply to the label wrapper.\n   */\n  labelStyle?: CSSProperties;\n\n  /**\n   * An optional className to apply to the label wrapper.\n   */\n  labelClassName?: string;\n\n  /**\n   * An optional style to apply to the select itself. The `style` prop will be\n   * applied to the container `<div>` instead.\n   */\n  selectStyle?: CSSProperties;\n\n  /**\n   * An optional className to apply to the select itself. The `className` prop\n   * will be applied to the container `<div>` instead.\n   */\n  selectClassName?: string;\n\n  /**\n   * The value to use for the text field. This will make the component\n   * controlled and require the `onChange` prop to be provided as well otherwise\n   * this will act as a read only text field.\n   *\n   * If the `multiple` prop is enabled, this **must** be a list of strings.\n   */\n  value?: string | readonly string[];\n\n  /**\n   * The default value for the text field which will make it uncontrolled. If\n   * you manually change the `defaultValue` prop, the input's value **will not\n   * change** unless you provide a different `key` as well. Use the `value` prop\n   * instead for a controlled input.\n   *\n   * If the `multiple` prop is enabled, this **must** be a list of strings.\n   */\n  defaultValue?: string | readonly string[];\n}\n\nconst block = bem(\"rmd-native-select\");\nconst container = bem(\"rmd-native-select-container\");\n\n/**\n * This component is used to render a native `<select>` element with the text\n * field theme styles. This component is great to use for native behavior and\n * full accessibility.\n */\nexport const NativeSelect = forwardRef<HTMLSelectElement, NativeSelectProps>(\n  function NativeSelect(\n    {\n      style,\n      className,\n      labelStyle,\n      labelClassName,\n      selectStyle,\n      selectClassName,\n      icon: propIcon,\n      theme: propTheme,\n      dense = false,\n      inline = false,\n      stretch = false,\n      error = false,\n      disabled = false,\n      label,\n      onBlur: propOnBlur,\n      onFocus: propOnFocus,\n      onChange: propOnChange,\n      containerRef,\n      isLeftAddon,\n      isRightAddon,\n      leftChildren,\n      rightChildren,\n      underlineDirection: propUnderlineDirection,\n      children,\n      ...props\n    },\n    ref\n  ) {\n    const { id, value, defaultValue, multiple } = props;\n    const { theme, underlineDirection } = useFormTheme({\n      theme: propTheme,\n      underlineDirection: propUnderlineDirection,\n    });\n    const underline = theme === \"underline\" || theme === \"filled\";\n\n    const icon = useIcon(\"dropdown\", propIcon);\n    const { valued, focused, onBlur, onFocus, onChange } = useFieldStates({\n      onBlur: propOnBlur,\n      onFocus: propOnFocus,\n      onChange: propOnChange,\n      value,\n      defaultValue,\n    });\n\n    return (\n      <TextFieldContainer\n        style={style}\n        className={cn(\n          container({\n            multi: multiple,\n            padded: multiple && label,\n          }),\n          className\n        )}\n        ref={containerRef}\n        theme={theme}\n        error={error}\n        active={focused}\n        label={!!label}\n        dense={dense}\n        inline={inline}\n        stretch={stretch}\n        disabled={disabled}\n        isLeftAddon={isLeftAddon}\n        isRightAddon={isRightAddon}\n        leftChildren={leftChildren}\n        rightChildren={multiple && rightChildren}\n        underlineDirection={underlineDirection}\n      >\n        <FloatingLabel\n          style={labelStyle}\n          className={cn(block(\"label\"), labelClassName)}\n          htmlFor={id}\n          error={error}\n          active={valued && focused}\n          valued={valued}\n          floating={valued || multiple}\n          dense={dense}\n          disabled={disabled}\n        >\n          {label}\n        </FloatingLabel>\n        <select\n          {...props}\n          ref={ref}\n          style={selectStyle}\n          className={cn(\n            block({\n              icon,\n              multi: multiple,\n              \"label-underline\": label && underline,\n              \"placeholder-underline\": !label && underline,\n              floating: label && theme !== \"none\",\n            }),\n            selectClassName\n          )}\n          disabled={disabled}\n          onFocus={onFocus}\n          onBlur={onBlur}\n          onChange={onChange}\n        >\n          {children}\n        </select>\n        {!multiple && icon && <span className={block(\"icon\")}>{icon}</span>}\n      </TextFieldContainer>\n    );\n  }\n);\n"]},"metadata":{},"sourceType":"module"}