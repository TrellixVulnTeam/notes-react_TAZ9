{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Divider } from \"@react-md/divider\";\nimport { ListSubheader } from \"@react-md/list\";\nimport { defaultTreeItemRenderer } from \"@react-md/tree\";\n/**\n * This is the default navigation item renderer provided by the layout package\n * that has some reasonable defaults for creating a navigation tree. This is\n * just an extension of the base `defaultTreeItemRenderer` from the\n * `@react-md/tree` package that adds in some support for also rendering\n * dividers and subheader elements.\n */\n\nexport var defaultNavigationItemRenderer = function (itemProps, item, treeProps) {\n  var key = itemProps.key;\n  var divider = item.divider,\n      subheader = item.subheader;\n\n  if (divider) {\n    return _jsx(Divider, {}, key);\n  }\n\n  if (subheader) {\n    return _jsx(ListSubheader, __assign({\n      role: \"none\"\n    }, {\n      children: item.children\n    }), key);\n  }\n\n  return defaultTreeItemRenderer(itemProps, item, treeProps);\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;AAAA,SAASA,OAAT,QAAwB,mBAAxB;AACA,SAASC,aAAT,QAA8B,gBAA9B;AAEA,SAASC,uBAAT,QAAwC,gBAAxC;AAIA;;;;;;;;AAOA,OAAO,IAAMC,6BAA6B,GAEtC,UAACC,SAAD,EAAYC,IAAZ,EAAkBC,SAAlB,EAA2B;EACrB,OAAG,GAAKF,SAAS,IAAjB;EACA,WAAO,GAAgBC,IAAI,QAA3B;EAAA,IAASE,SAAS,GAAKF,IAAI,UAA3B;;EACR,IAAIG,OAAJ,EAAa;IACX,OAAOC,KAACT,OAAD,EAAQ,EAAR,EAAcU,GAAd,CAAP;EACD;;EAED,IAAIH,SAAJ,EAAe;IACb,OACEE,KAACR,aAAD,EAAcU;MAAWC,IAAI,EAAC;IAAhB,GAAsB;MAAAC,UACjCR,IAAI,CAACQ;IAD4B,CAAtB,CAAd,EAAoBH,GAApB,CADF;EAKD;;EAED,OAAOR,uBAAuB,CAACE,SAAD,EAAYC,IAAZ,EAAkBC,SAAlB,CAA9B;AACD,CAlBM","names":["Divider","ListSubheader","defaultTreeItemRenderer","defaultNavigationItemRenderer","itemProps","item","treeProps","subheader","divider","_jsx","key","__assign","role","children"],"sources":["C:\\Users\\hungr\\Documents\\VS-CODE\\notes-react\\node_modules\\@react-md\\layout\\src\\defaultNavigationItemRenderer.tsx"],"sourcesContent":["import { Divider } from \"@react-md/divider\";\nimport { ListSubheader } from \"@react-md/list\";\nimport type { TreeItemRenderer } from \"@react-md/tree\";\nimport { defaultTreeItemRenderer } from \"@react-md/tree\";\n\nimport type { LayoutNavigationItem } from \"./types\";\n\n/**\n * This is the default navigation item renderer provided by the layout package\n * that has some reasonable defaults for creating a navigation tree. This is\n * just an extension of the base `defaultTreeItemRenderer` from the\n * `@react-md/tree` package that adds in some support for also rendering\n * dividers and subheader elements.\n */\nexport const defaultNavigationItemRenderer: TreeItemRenderer<\n  LayoutNavigationItem\n> = (itemProps, item, treeProps) => {\n  const { key } = itemProps;\n  const { divider, subheader } = item;\n  if (divider) {\n    return <Divider key={key} />;\n  }\n\n  if (subheader) {\n    return (\n      <ListSubheader key={key} role=\"none\">\n        {item.children}\n      </ListSubheader>\n    );\n  }\n\n  return defaultTreeItemRenderer(itemProps, item, treeProps);\n};\n"]},"metadata":{},"sourceType":"module"}