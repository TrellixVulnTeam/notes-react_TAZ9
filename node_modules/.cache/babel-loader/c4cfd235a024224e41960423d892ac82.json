{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { forwardRef } from \"react\";\nimport { List } from \"@react-md/list\";\nimport { ConditionalPortal } from \"@react-md/portal\";\nimport { useScaleTransition } from \"@react-md/transition\";\nimport { MenuKeyboardFocusProvider } from \"./MenuKeyboardFocusProvider\";\nimport { MenuWidget } from \"./MenuWidget\";\n/**\n * This component conditionally renders the {@link MenuWidget} with the\n * {@link MenuKeyboardFocusProvider} based on the `visible` prop with a CSS\n * transition that can be configured.\n *\n * @remarks \\@since 5.0.0\n */\n\nexport var Menu = forwardRef(function Menu(_a, ref) {\n  var className = _a.className,\n      listStyle = _a.listStyle,\n      listClassName = _a.listClassName,\n      listProps = _a.listProps,\n      visible = _a.visible,\n      _b = _a.temporary,\n      temporary = _b === void 0 ? true : _b,\n      _c = _a.horizontal,\n      horizontal = _c === void 0 ? false : _c,\n      _d = _a.portal,\n      portal = _d === void 0 ? temporary : _d,\n      portalInto = _a.portalInto,\n      portalIntoId = _a.portalIntoId,\n      appear = _a.appear,\n      enter = _a.enter,\n      exit = _a.exit,\n      onEnter = _a.onEnter,\n      onEntering = _a.onEntering,\n      onEntered = _a.onEntered,\n      onExit = _a.onExit,\n      onExiting = _a.onExiting,\n      onExited = _a.onExited,\n      timeout = _a.timeout,\n      classNames = _a.classNames,\n      children = _a.children,\n      props = __rest(_a, [\"className\", \"listStyle\", \"listClassName\", \"listProps\", \"visible\", \"temporary\", \"horizontal\", \"portal\", \"portalInto\", \"portalIntoId\", \"appear\", \"enter\", \"exit\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"timeout\", \"classNames\", \"children\"]);\n\n  var _e = useScaleTransition({\n    nodeRef: ref,\n    className: className,\n    transitionIn: visible,\n    vertical: !horizontal,\n    temporary: temporary,\n    timeout: timeout,\n    classNames: classNames,\n    appear: appear,\n    enter: enter,\n    exit: exit,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExit: onExit,\n    onExiting: onExiting,\n    onExited: onExited\n  }),\n      elementProps = _e.elementProps,\n      rendered = _e.rendered,\n      stage = _e.stage;\n\n  return _jsx(ConditionalPortal, __assign({\n    portal: portal,\n    portalInto: portalInto,\n    portalIntoId: portalIntoId\n  }, {\n    children: rendered && _jsx(MenuKeyboardFocusProvider, __assign({\n      horizontal: horizontal\n    }, {\n      children: _jsx(MenuWidget, __assign({\n        hidden: !temporary && stage === \"exited\"\n      }, props, elementProps, {\n        horizontal: horizontal\n      }, {\n        children: _jsx(List, __assign({}, listProps, {\n          style: listStyle !== null && listStyle !== void 0 ? listStyle : listProps === null || listProps === void 0 ? void 0 : listProps.style,\n          className: listClassName !== null && listClassName !== void 0 ? listClassName : listProps === null || listProps === void 0 ? void 0 : listProps.className,\n          horizontal: horizontal,\n          onClick: function (event) {\n            var _a;\n\n            (_a = listProps === null || listProps === void 0 ? void 0 : listProps.onClick) === null || _a === void 0 ? void 0 : _a.call(listProps, event); // this makes it so you can click on the menu/list without\n            // closing the menu\n\n            if (event.target === event.currentTarget) {\n              event.stopPropagation();\n            }\n          }\n        }, {\n          children: children\n        }))\n      }))\n    }))\n  }));\n});","map":{"version":3,"mappings":"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","names":["forwardRef","List","ConditionalPortal","useScaleTransition","MenuKeyboardFocusProvider","MenuWidget","Menu","_a","ref","listStyle","listClassName","listProps","visible","_b","temporary","_c","horizontal","_d","portal","portalInto","portalIntoId","appear","enter","exit","onEnter","onEntering","onEntered","onExit","onExiting","onExited","timeout","classNames","children","props","nodeRef","className","transitionIn","vertical","elementProps","rendered","stage","_jsx","__assign","hidden","style","onClick","event","target","currentTarget","stopPropagation"],"sources":["C:\\Users\\hungr\\Documents\\VS-CODE\\notes-react\\node_modules\\@react-md\\menu\\src\\Menu.tsx"],"sourcesContent":["import { forwardRef } from \"react\";\nimport { List } from \"@react-md/list\";\nimport { ConditionalPortal } from \"@react-md/portal\";\nimport { useScaleTransition } from \"@react-md/transition\";\nimport type { LabelRequiredForA11y } from \"@react-md/utils\";\n\nimport { MenuKeyboardFocusProvider } from \"./MenuKeyboardFocusProvider\";\nimport { MenuWidget } from \"./MenuWidget\";\nimport type { MenuProps } from \"./types\";\n\n/**\n * This component conditionally renders the {@link MenuWidget} with the\n * {@link MenuKeyboardFocusProvider} based on the `visible` prop with a CSS\n * transition that can be configured.\n *\n * @remarks \\@since 5.0.0\n */\nexport const Menu = forwardRef<HTMLDivElement, LabelRequiredForA11y<MenuProps>>(\n  function Menu(\n    {\n      className,\n      listStyle,\n      listClassName,\n      listProps,\n      visible,\n      temporary = true,\n      horizontal = false,\n      portal = temporary,\n      portalInto,\n      portalIntoId,\n      appear,\n      enter,\n      exit,\n      onEnter,\n      onEntering,\n      onEntered,\n      onExit,\n      onExiting,\n      onExited,\n      timeout,\n      classNames,\n      children,\n      ...props\n    },\n    ref\n  ) {\n    const { elementProps, rendered, stage } = useScaleTransition({\n      nodeRef: ref,\n      className,\n      transitionIn: visible,\n      vertical: !horizontal,\n      temporary,\n      timeout,\n      classNames,\n      appear,\n      enter,\n      exit,\n      onEnter,\n      onEntering,\n      onEntered,\n      onExit,\n      onExiting,\n      onExited,\n    });\n\n    return (\n      <ConditionalPortal\n        portal={portal}\n        portalInto={portalInto}\n        portalIntoId={portalIntoId}\n      >\n        {rendered && (\n          <MenuKeyboardFocusProvider horizontal={horizontal}>\n            <MenuWidget\n              hidden={!temporary && stage === \"exited\"}\n              {...props}\n              {...elementProps}\n              horizontal={horizontal}\n            >\n              <List\n                {...listProps}\n                style={listStyle ?? listProps?.style}\n                className={listClassName ?? listProps?.className}\n                horizontal={horizontal}\n                onClick={(event) => {\n                  listProps?.onClick?.(event);\n\n                  // this makes it so you can click on the menu/list without\n                  // closing the menu\n                  if (event.target === event.currentTarget) {\n                    event.stopPropagation();\n                  }\n                }}\n              >\n                {children}\n              </List>\n            </MenuWidget>\n          </MenuKeyboardFocusProvider>\n        )}\n      </ConditionalPortal>\n    );\n  }\n);\n"]},"metadata":{},"sourceType":"module"}