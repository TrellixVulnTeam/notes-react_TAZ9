{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { forwardRef } from \"react\";\nimport { MenuItemInputToggle } from \"./MenuItemInputToggle\";\n/**\n * This is a simple wrapper for the {@link MenuItemInputToggle} component to\n * render it as a switch.\n *\n * @example\n * Simple Example\n * ```tsx\n * import { ReactElement, useState } from \"react\";\n * import { DropdownMenu } from \"@react-md/menu\";\n * import { MenuItemSwitch } from \"@react-md/form\";\n *\n * function Example(): ReactElement {\n *   const [checked, setChecked] = useState(false);\n *\n *   return (\n *     <DropdownMenu id=\"dropdown-menu-id\" buttonChildren=\"Button\">\n *       <MenuItemSwitch\n *         id=\"switch-1\"\n *         checked={checked}\n *         onCheckedChange={(nextChecked) => setChecked(nextChecked)}\n *       >\n *         Switch\n *      </MenuItemSwitch>\n *     </DropdownMenu>\n *   );\n * }\n * ```\n *\n * @remarks \\@since 2.8.0\n */\n\nexport var MenuItemSwitch = forwardRef(function MenuItemSwitch(props, ref) {\n  return _jsx(MenuItemInputToggle, __assign({}, props, {\n    ref: ref,\n    type: \"switch\"\n  }));\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AAGA,SAASC,mBAAT,QAAoC,uBAApC;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA,OAAO,IAAMC,cAAc,GAAGF,UAAU,CACtC,SAASE,cAAT,CAAwBC,KAAxB,EAA+BC,GAA/B,EAAkC;EAChC,OAAOC,KAACJ,mBAAD,EAAoBK,aAAKH,KAAL,EAAU;IAAEC,GAAG,EAAEA,GAAP;IAAYG,IAAI,EAAC;EAAjB,CAAV,CAApB,CAAP;AACD,CAHqC,CAAjC","names":["forwardRef","MenuItemInputToggle","MenuItemSwitch","props","ref","_jsx","__assign","type"],"sources":["C:\\Users\\hungr\\Documents\\VS-CODE\\notes-react\\node_modules\\@react-md\\form\\src\\menu\\MenuItemSwitch.tsx"],"sourcesContent":["import { forwardRef } from \"react\";\n\nimport type { BaseMenuItemInputToggleProps } from \"./MenuItemInputToggle\";\nimport { MenuItemInputToggle } from \"./MenuItemInputToggle\";\n\n/** @remarks \\@since 2.8.0 */\nexport type MenuItemSwitchProps = Omit<BaseMenuItemInputToggleProps, \"icon\">;\n\n/**\n * This is a simple wrapper for the {@link MenuItemInputToggle} component to\n * render it as a switch.\n *\n * @example\n * Simple Example\n * ```tsx\n * import { ReactElement, useState } from \"react\";\n * import { DropdownMenu } from \"@react-md/menu\";\n * import { MenuItemSwitch } from \"@react-md/form\";\n *\n * function Example(): ReactElement {\n *   const [checked, setChecked] = useState(false);\n *\n *   return (\n *     <DropdownMenu id=\"dropdown-menu-id\" buttonChildren=\"Button\">\n *       <MenuItemSwitch\n *         id=\"switch-1\"\n *         checked={checked}\n *         onCheckedChange={(nextChecked) => setChecked(nextChecked)}\n *       >\n *         Switch\n *      </MenuItemSwitch>\n *     </DropdownMenu>\n *   );\n * }\n * ```\n *\n * @remarks \\@since 2.8.0\n */\nexport const MenuItemSwitch = forwardRef<HTMLLIElement, MenuItemSwitchProps>(\n  function MenuItemSwitch(props, ref) {\n    return <MenuItemInputToggle {...props} ref={ref} type=\"switch\" />;\n  }\n);\n"]},"metadata":{},"sourceType":"module"}