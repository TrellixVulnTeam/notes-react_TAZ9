{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { getViewportSize } from \"@react-md/utils\";\n/**\n * @remarks \\@since 4.0.0\n * @internal\n */\n\nexport function getTransitionTimeout(_a) {\n  var _b;\n\n  var timeout = _a.timeout,\n      appear = _a.appear,\n      enter = _a.enter,\n      exit = _a.exit;\n\n  if (typeof timeout === \"number\") {\n    return {\n      appear: appear ? timeout : 0,\n      enter: enter ? timeout : 0,\n      exit: exit ? timeout : 0\n    };\n  }\n\n  return {\n    appear: appear && ((_b = timeout.appear) !== null && _b !== void 0 ? _b : timeout.enter) || 0,\n    enter: enter && timeout.enter || 0,\n    exit: exit && timeout.exit || 0\n  };\n}\n/**\n * A small util that will find the max-height, padding-top, and padding-bottom\n * for the provided element. This is really used to be able to transition the\n * max-height value since `max-height: auto` does not transition. The only way\n * to get transition is to change max-height values manually.\n *\n * @remarks \\@since 4.0.0\n * @internal\n */\n\nexport function getElementSizing(element) {\n  var maxHeight;\n  var paddingTop;\n  var paddingBottom;\n\n  if (element) {\n    maxHeight = element.scrollHeight; // clone the element (not deep) just to figure out it's padding without the\n    // inline styles applied\n\n    var cloned = element.cloneNode(false);\n    cloned.style.maxHeight = \"\";\n    cloned.style.padding = \"\";\n    cloned.style.paddingLeft = element.style.paddingLeft;\n    cloned.style.paddingRight = element.style.paddingRight;\n    cloned.style.visibility = \"hidden\";\n    var container = element.parentElement || document.body;\n    container.appendChild(cloned);\n    var style = window.getComputedStyle(cloned);\n\n    if (style.paddingTop) {\n      paddingTop = parseFloat(style.paddingTop);\n    }\n\n    if (style.paddingBottom) {\n      paddingBottom = parseFloat(style.paddingBottom);\n    }\n\n    container.removeChild(cloned);\n  }\n\n  return {\n    maxHeight: maxHeight,\n    paddingTop: paddingTop,\n    paddingBottom: paddingBottom\n  };\n}\n/**\n * @remarks \\@since 4.0.0\n * @internal\n */\n\nexport function getTransitionClassNames(_a) {\n  var classNames = _a.classNames,\n      timeoutOptions = __rest(_a, [\"classNames\"]);\n\n  var timeout = getTransitionTimeout(timeoutOptions);\n\n  if (typeof classNames === \"string\") {\n    var appear_1 = timeout.appear,\n        enter_1 = timeout.enter,\n        exit_1 = timeout.exit;\n    return {\n      appear: appear_1 ? \"\".concat(classNames, \"--appear\") : \"\",\n      appearActive: appear_1 ? \"\".concat(classNames, \"--appear-active\") : \"\",\n      appearDone: \"\",\n      enter: enter_1 ? \"\".concat(classNames, \"--enter\") : \"\",\n      enterActive: enter_1 ? \"\".concat(classNames, \"--enter-active\") : \"\",\n      enterDone: \"\",\n      exit: exit_1 ? \"\".concat(classNames, \"--exit\") : \"\",\n      exitActive: exit_1 ? \"\".concat(classNames, \"--exit-active\") : \"\",\n      exitDone: \"\"\n    };\n  }\n\n  var _b = classNames.enter,\n      enter = _b === void 0 ? \"\" : _b,\n      _c = classNames.enterActive,\n      enterActive = _c === void 0 ? \"\" : _c,\n      _d = classNames.enterDone,\n      enterDone = _d === void 0 ? \"\" : _d,\n      _e = classNames.exit,\n      exit = _e === void 0 ? \"\" : _e,\n      _f = classNames.exitActive,\n      exitActive = _f === void 0 ? \"\" : _f,\n      _g = classNames.exitDone,\n      exitDone = _g === void 0 ? \"\" : _g,\n      _h = classNames.appear,\n      appear = _h === void 0 ? timeout.appear && enter || \"\" : _h,\n      _j = classNames.appearActive,\n      appearActive = _j === void 0 ? timeout.appear && enterActive || \"\" : _j,\n      _k = classNames.appearDone,\n      appearDone = _k === void 0 ? timeout.appear && enterDone || \"\" : _k;\n  return {\n    appear: appear,\n    appearActive: appearActive,\n    appearDone: appearDone,\n    enter: enter,\n    enterActive: enterActive,\n    enterDone: enterDone,\n    exit: exit,\n    exitActive: exitActive,\n    exitDone: exitDone\n  };\n}\n/**\n * @remarks \\@since 4.0.0\n * @internal\n */\n\nexport function isWithinViewport(_a) {\n  var fixedElement = _a.fixedElement,\n      fixedToElement = _a.fixedToElement;\n  var fixedElementRect = fixedElement.getBoundingClientRect();\n  var fixedToElementRect = fixedToElement.getBoundingClientRect();\n  var vh = getViewportSize(\"height\");\n  var vw = getViewportSize(\"width\");\n  var top = Math.min(fixedElementRect.top, fixedToElementRect.top);\n  var right = Math.max(fixedElementRect.right, fixedToElementRect.right);\n  var bottom = Math.max(fixedElementRect.bottom, fixedToElementRect.bottom);\n  var left = Math.min(fixedElementRect.left, fixedToElementRect.left);\n  return bottom >= 0 && top <= vh && right >= 0 && left <= vw;\n}","map":{"version":3,"mappings":"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","names":["getViewportSize","getTransitionTimeout","_a","timeout","appear","enter","exit","_b","getElementSizing","element","maxHeight","paddingTop","paddingBottom","scrollHeight","cloned","cloneNode","style","padding","paddingLeft","paddingRight","visibility","container","parentElement","document","body","appendChild","window","getComputedStyle","parseFloat","removeChild","getTransitionClassNames","timeoutOptions","classNames","enter_1","exit_1","appear_1","appearActive","appearDone","enterActive","enterDone","exitActive","exitDone","_c","_d","_e","_f","_g","_h","_j","_k","isWithinViewport","fixedElement","fixedToElement","fixedElementRect","getBoundingClientRect","fixedToElementRect","vh","vw","top","Math","min","right","max","bottom","left"],"sources":["C:\\Users\\hungr\\Documents\\VS-CODE\\notes-react\\node_modules\\@react-md\\transition\\src\\utils.ts"],"sourcesContent":["import { getViewportSize } from \"@react-md/utils\";\nimport type {\n  CSSTransitionClassNames,\n  CSSTransitionClassNamesObject,\n  TransitionActions,\n  TransitionTimeout,\n  TransitionTimeoutObject,\n} from \"./types\";\n\n/**\n * @remarks \\@since 4.0.0\n * @internal\n */\nexport interface TransitionTimeoutOptions extends Required<TransitionActions> {\n  timeout: TransitionTimeout;\n}\n\n/**\n * @remarks \\@since 4.0.0\n * @internal\n */\nexport function getTransitionTimeout({\n  timeout,\n  appear,\n  enter,\n  exit,\n}: Readonly<TransitionTimeoutOptions>): Readonly<\n  Required<TransitionTimeoutObject>\n> {\n  if (typeof timeout === \"number\") {\n    return {\n      appear: appear ? timeout : 0,\n      enter: enter ? timeout : 0,\n      exit: exit ? timeout : 0,\n    };\n  }\n\n  return {\n    appear: (appear && (timeout.appear ?? timeout.enter)) || 0,\n    enter: (enter && timeout.enter) || 0,\n    exit: (exit && timeout.exit) || 0,\n  };\n}\n\n/**\n * @remarks \\@since 4.0.0\n * @internal\n */\nexport interface CollapseSizing {\n  maxHeight?: number;\n  paddingTop?: number;\n  paddingBottom?: number;\n}\n\n/**\n * A small util that will find the max-height, padding-top, and padding-bottom\n * for the provided element. This is really used to be able to transition the\n * max-height value since `max-height: auto` does not transition. The only way\n * to get transition is to change max-height values manually.\n *\n * @remarks \\@since 4.0.0\n * @internal\n */\nexport function getElementSizing(element: HTMLElement | null): CollapseSizing {\n  let maxHeight;\n  let paddingTop;\n  let paddingBottom;\n  if (element) {\n    maxHeight = element.scrollHeight;\n\n    // clone the element (not deep) just to figure out it's padding without the\n    // inline styles applied\n    const cloned = element.cloneNode(false) as HTMLElement;\n    cloned.style.maxHeight = \"\";\n    cloned.style.padding = \"\";\n    cloned.style.paddingLeft = element.style.paddingLeft;\n    cloned.style.paddingRight = element.style.paddingRight;\n    cloned.style.visibility = \"hidden\";\n\n    const container = element.parentElement || document.body;\n    container.appendChild(cloned);\n    const style = window.getComputedStyle(cloned);\n    if (style.paddingTop) {\n      paddingTop = parseFloat(style.paddingTop);\n    }\n\n    if (style.paddingBottom) {\n      paddingBottom = parseFloat(style.paddingBottom);\n    }\n    container.removeChild(cloned);\n  }\n\n  return { maxHeight, paddingTop, paddingBottom };\n}\n\n/**\n * @remarks \\@since 4.0.0\n * @internal\n */\nexport interface TransitionClassNamesOptions extends TransitionTimeoutOptions {\n  classNames: CSSTransitionClassNames;\n}\n\n/**\n * @remarks \\@since 4.0.0\n * @internal\n */\nexport function getTransitionClassNames({\n  classNames,\n  ...timeoutOptions\n}: TransitionClassNamesOptions): Readonly<\n  Required<CSSTransitionClassNamesObject>\n> {\n  const timeout = getTransitionTimeout(timeoutOptions);\n\n  if (typeof classNames === \"string\") {\n    const { appear, enter, exit } = timeout;\n    return {\n      appear: appear ? `${classNames}--appear` : \"\",\n      appearActive: appear ? `${classNames}--appear-active` : \"\",\n      appearDone: \"\",\n      enter: enter ? `${classNames}--enter` : \"\",\n      enterActive: enter ? `${classNames}--enter-active` : \"\",\n      enterDone: \"\",\n      exit: exit ? `${classNames}--exit` : \"\",\n      exitActive: exit ? `${classNames}--exit-active` : \"\",\n      exitDone: \"\",\n    };\n  }\n\n  const {\n    enter = \"\",\n    enterActive = \"\",\n    enterDone = \"\",\n    exit = \"\",\n    exitActive = \"\",\n    exitDone = \"\",\n    appear = (timeout.appear && enter) || \"\",\n    appearActive = (timeout.appear && enterActive) || \"\",\n    appearDone = (timeout.appear && enterDone) || \"\",\n  } = classNames;\n\n  return {\n    appear,\n    appearActive,\n    appearDone,\n    enter,\n    enterActive,\n    enterDone,\n    exit,\n    exitActive,\n    exitDone,\n  };\n}\n\n/**\n * @remarks \\@since 4.0.0\n * @internal\n */\ninterface IsWithinViewportOptions {\n  fixedElement: HTMLElement;\n  fixedToElement: HTMLElement;\n}\n\n/**\n * @remarks \\@since 4.0.0\n * @internal\n */\nexport function isWithinViewport({\n  fixedElement,\n  fixedToElement,\n}: IsWithinViewportOptions): boolean {\n  const fixedElementRect = fixedElement.getBoundingClientRect();\n  const fixedToElementRect = fixedToElement.getBoundingClientRect();\n  const vh = getViewportSize(\"height\");\n  const vw = getViewportSize(\"width\");\n  const top = Math.min(fixedElementRect.top, fixedToElementRect.top);\n  const right = Math.max(fixedElementRect.right, fixedToElementRect.right);\n  const bottom = Math.max(fixedElementRect.bottom, fixedToElementRect.bottom);\n  const left = Math.min(fixedElementRect.left, fixedToElementRect.left);\n\n  return bottom >= 0 && top <= vh && right >= 0 && left <= vw;\n}\n"]},"metadata":{},"sourceType":"module"}