{"ast":null,"code":"/**\n * Rounds a number to the nearest step within a min/max range.\n *\n * @see https://stackoverflow.com/a/13635455\n * @param value - The value to round to the nearest step\n * @param min - The min value allowed\n * @param max - The max value allowed\n * @param steps - The number of steps in the min/max range\n * @param range - The range allowed for the value that defaults to `max - min`\n * @returns the value rounded to the nearest step in the min/max range\n * @remarks \\@since 2.5.0 - Added the `range` param\n */\nexport function nearest(value, min, max, steps, range) {\n  if (range === void 0) {\n    range = max - min;\n  }\n\n  var rounded = Math.round((value - min) * steps / range) / steps;\n  var zeroToOne = Math.min(Math.max(rounded, 0), 1); // have to calculate the number of allowed decimal places since decimal\n  // precision gets weird:\n  // 0.28 * 100 === 28.000000000000004\n\n  var step = range / steps;\n  var decimals = Number.isInteger(step) ? range % steps : step.toString().split(\".\")[1].length;\n  return Math.min(max, Math.max(min, parseFloat((zeroToOne * range + min).toFixed(decimals))));\n}","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;AAYA,OAAM,SAAUA,OAAV,CACJC,KADI,EAEJC,GAFI,EAGJC,GAHI,EAIJC,KAJI,EAKJC,KALI,EAKa;EAAjB;IAAAA,QAAQF,GAAG,GAAGD,GAAd;EAAiB;;EAEjB,IAAMI,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAY,CAACP,KAAK,GAAGC,GAAT,IAAgBE,KAAjB,GAA0BC,KAArC,IAA8CD,KAA9D;EACA,IAAMK,SAAS,GAAGF,IAAI,CAACL,GAAL,CAASK,IAAI,CAACJ,GAAL,CAASG,OAAT,EAAkB,CAAlB,CAAT,EAA+B,CAA/B,CAAlB,CAHiB,CAKjB;EACA;EACA;;EACA,IAAMI,IAAI,GAAGL,KAAK,GAAGD,KAArB;EACA,IAAMO,QAAQ,GAAGC,MAAM,CAACC,SAAP,CAAiBH,IAAjB,IACbL,KAAK,GAAGD,KADK,GAEbM,IAAI,CAACI,QAAL,GAAgBC,KAAhB,CAAsB,GAAtB,EAA2B,CAA3B,EAA8BC,MAFlC;EAIA,OAAOT,IAAI,CAACL,GAAL,CACLC,GADK,EAELI,IAAI,CAACJ,GAAL,CAASD,GAAT,EAAce,UAAU,CAAC,CAACR,SAAS,GAAGJ,KAAZ,GAAoBH,GAArB,EAA0BgB,OAA1B,CAAkCP,QAAlC,CAAD,CAAxB,CAFK,CAAP;AAID","names":["nearest","value","min","max","steps","range","rounded","Math","round","zeroToOne","step","decimals","Number","isInteger","toString","split","length","parseFloat","toFixed"],"sources":["C:\\Users\\hungr\\Documents\\VS-CODE\\notes-react\\node_modules\\@react-md\\utils\\src\\nearest.ts"],"sourcesContent":["/**\n * Rounds a number to the nearest step within a min/max range.\n *\n * @see https://stackoverflow.com/a/13635455\n * @param value - The value to round to the nearest step\n * @param min - The min value allowed\n * @param max - The max value allowed\n * @param steps - The number of steps in the min/max range\n * @param range - The range allowed for the value that defaults to `max - min`\n * @returns the value rounded to the nearest step in the min/max range\n * @remarks \\@since 2.5.0 - Added the `range` param\n */\nexport function nearest(\n  value: number,\n  min: number,\n  max: number,\n  steps: number,\n  range = max - min\n): number {\n  const rounded = Math.round(((value - min) * steps) / range) / steps;\n  const zeroToOne = Math.min(Math.max(rounded, 0), 1);\n\n  // have to calculate the number of allowed decimal places since decimal\n  // precision gets weird:\n  // 0.28 * 100 === 28.000000000000004\n  const step = range / steps;\n  const decimals = Number.isInteger(step)\n    ? range % steps\n    : step.toString().split(\".\")[1].length;\n\n  return Math.min(\n    max,\n    Math.max(min, parseFloat((zeroToOne * range + min).toFixed(decimals)))\n  );\n}\n"]},"metadata":{},"sourceType":"module"}