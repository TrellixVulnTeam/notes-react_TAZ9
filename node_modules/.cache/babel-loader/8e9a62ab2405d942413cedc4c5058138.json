{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { forwardRef, useCallback } from \"react\";\nimport cn from \"classnames\";\nimport { useIcon } from \"@react-md/icon\";\nimport { ListItemChildren } from \"@react-md/list\";\nimport { useInteractionStates } from \"@react-md/states\";\nimport { bem } from \"@react-md/utils\";\nimport { TreeGroup } from \"./TreeGroup\";\nimport { TreeItemExpanderIcon } from \"./TreeItemExpanderIcon\";\nvar block = bem(\"rmd-tree-item\");\n/**\n * This component renders an item within a tree with optional child items. This\n * should almost always be used from the `itemRenderer` prop from the `Tree`\n * component as it provides a lot of the required a11y props for you.\n */\n\nexport var TreeItem = forwardRef(function TreeItem(_a, ref) {\n  var _b;\n\n  var id = _a.id,\n      propClassName = _a.className,\n      liStyle = _a.liStyle,\n      liClassName = _a.liClassName,\n      liRef = _a.liRef,\n      depth = _a.depth,\n      listSize = _a.listSize,\n      itemIndex = _a.itemIndex,\n      renderChildItems = _a.renderChildItems,\n      expanded = _a.expanded,\n      selected = _a.selected,\n      focused = _a.focused,\n      propExpanderIcon = _a.expanderIcon,\n      _c = _a.expanderLeft,\n      expanderLeft = _c === void 0 ? false : _c,\n      textClassName = _a.textClassName,\n      secondaryTextClassName = _a.secondaryTextClassName,\n      _d = _a.textChildren,\n      textChildren = _d === void 0 ? true : _d,\n      primaryText = _a.primaryText,\n      secondaryText = _a.secondaryText,\n      propLeftAddon = _a.leftAddon,\n      _e = _a.leftAddonType,\n      leftAddonType = _e === void 0 ? \"icon\" : _e,\n      _f = _a.leftAddonPosition,\n      leftAddonPosition = _f === void 0 ? \"middle\" : _f,\n      propRightAddon = _a.rightAddon,\n      _g = _a.rightAddonType,\n      rightAddonType = _g === void 0 ? \"icon\" : _g,\n      _h = _a.rightAddonPosition,\n      rightAddonPosition = _h === void 0 ? \"middle\" : _h,\n      forceAddonWrap = _a.forceAddonWrap,\n      _j = _a.height,\n      height = _j === void 0 ? \"auto\" : _j,\n      _k = _a.threeLines,\n      threeLines = _k === void 0 ? false : _k,\n      children = _a.children,\n      _l = _a.contentComponent,\n      Content = _l === void 0 ? \"span\" : _l,\n      propIsLink = _a.isLink,\n      _m = _a.disabled,\n      disabled = _m === void 0 ? false : _m,\n      readOnly = _a.readOnly,\n      onFocus = _a.onFocus,\n      onKeyUp = _a.onKeyUp,\n      onKeyDown = _a.onKeyDown,\n      onClick = _a.onClick,\n      onMouseUp = _a.onMouseUp,\n      onMouseDown = _a.onMouseDown,\n      onMouseLeave = _a.onMouseLeave,\n      onTouchMove = _a.onTouchMove,\n      onTouchEnd = _a.onTouchEnd,\n      onTouchStart = _a.onTouchStart,\n      props = __rest(_a, [\"id\", \"className\", \"liStyle\", \"liClassName\", \"liRef\", \"depth\", \"listSize\", \"itemIndex\", \"renderChildItems\", \"expanded\", \"selected\", \"focused\", \"expanderIcon\", \"expanderLeft\", \"textClassName\", \"secondaryTextClassName\", \"textChildren\", \"primaryText\", \"secondaryText\", \"leftAddon\", \"leftAddonType\", \"leftAddonPosition\", \"rightAddon\", \"rightAddonType\", \"rightAddonPosition\", \"forceAddonWrap\", \"height\", \"threeLines\", \"children\", \"contentComponent\", \"isLink\", \"disabled\", \"readOnly\", \"onFocus\", \"onKeyUp\", \"onKeyDown\", \"onClick\", \"onMouseUp\", \"onMouseDown\", \"onMouseLeave\", \"onTouchMove\", \"onTouchEnd\", \"onTouchStart\"]);\n\n  var expanderIcon = useIcon(\"expander\", propExpanderIcon);\n  var isLink = typeof propIsLink === \"boolean\" ? propIsLink : typeof Content !== \"string\" || Content === \"a\";\n\n  var _o = useInteractionStates({\n    disabled: disabled,\n    className: propClassName,\n    handlers: {\n      onKeyUp: onKeyUp,\n      onKeyDown: onKeyDown,\n      onClick: onClick,\n      onMouseUp: onMouseUp,\n      onMouseDown: onMouseDown,\n      onMouseLeave: onMouseLeave,\n      onTouchMove: onTouchMove,\n      onTouchEnd: onTouchEnd,\n      onTouchStart: onTouchStart\n    },\n    disableSpacebarClick: isLink\n  }),\n      ripples = _o.ripples,\n      className = _o.className,\n      handlers = _o.handlers;\n\n  var group;\n  var leftAddon = propLeftAddon;\n  var rightAddon = propRightAddon;\n\n  if (renderChildItems) {\n    var icon = _jsx(TreeItemExpanderIcon, __assign({\n      rotated: expanded\n    }, {\n      children: expanderIcon\n    }));\n\n    if (expanderLeft) {\n      leftAddon = icon;\n    } else {\n      rightAddon = icon;\n    }\n\n    group = _jsx(TreeGroup, __assign({\n      collapsed: !expanded\n    }, {\n      children: renderChildItems()\n    }));\n  }\n\n  var handleFocus = useCallback(function (event) {\n    var _a;\n\n    if (onFocus) {\n      onFocus(event);\n    }\n\n    event.preventDefault();\n    (_a = event.currentTarget.closest('[role=\"tree\"]')) === null || _a === void 0 ? void 0 : _a.focus();\n  }, [onFocus]);\n\n  var a11y = __assign(__assign({\n    \"aria-expanded\": renderChildItems ? expanded : undefined,\n    \"aria-selected\": selected,\n    \"aria-level\": depth + 1,\n    \"aria-setsize\": listSize,\n    \"aria-posinset\": itemIndex + 1,\n    \"aria-disabled\": disabled || undefined,\n    id: id,\n    role: \"treeitem\",\n    tabIndex: -1\n  }, handlers), {\n    onFocus: handleFocus\n  });\n\n  var noA11y = {\n    role: \"none\"\n  };\n  return _jsxs(\"li\", __assign({}, isLink ? noA11y : a11y, {\n    ref: liRef,\n    style: liStyle,\n    className: cn(block(), liClassName)\n  }, {\n    children: [_jsxs(Content, __assign({}, props, isLink ? a11y : undefined, {\n      ref: ref,\n      className: cn(block(\"content\", (_b = {\n        link: isLink,\n        clickable: !disabled && !readOnly\n      }, _b[height] = height !== \"auto\" && height !== \"normal\", _b[\"three-lines\"] = !!secondaryText && threeLines, _b.selected = selected, _b.focused = focused, _b)), className)\n    }, {\n      children: [_jsx(ListItemChildren, __assign({\n        textClassName: textClassName,\n        secondaryTextClassName: secondaryTextClassName,\n        textChildren: textChildren,\n        primaryText: primaryText,\n        secondaryText: secondaryText,\n        leftAddon: leftAddon,\n        leftAddonType: leftAddonType,\n        leftAddonPosition: leftAddonPosition,\n        rightAddon: rightAddon,\n        rightAddonType: rightAddonType,\n        rightAddonPosition: rightAddonPosition,\n        forceAddonWrap: forceAddonWrap\n      }, {\n        children: children\n      })), ripples]\n    })), group]\n  }));\n});","map":{"version":3,"mappings":"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","names":["forwardRef","useCallback","cn","useIcon","ListItemChildren","useInteractionStates","bem","TreeGroup","TreeItemExpanderIcon","block","TreeItem","_a","ref","propClassName","liStyle","liClassName","liRef","depth","listSize","itemIndex","renderChildItems","expanded","selected","focused","propExpanderIcon","_c","expanderLeft","textClassName","secondaryTextClassName","_d","textChildren","primaryText","secondaryText","propLeftAddon","_e","leftAddonType","_f","leftAddonPosition","propRightAddon","_g","rightAddonType","_h","rightAddonPosition","forceAddonWrap","_j","height","_k","threeLines","children","_l","Content","propIsLink","_m","disabled","readOnly","onFocus","onKeyUp","onKeyDown","onClick","onMouseUp","onMouseDown","onMouseLeave","onTouchMove","onTouchEnd","onTouchStart","props","expanderIcon","isLink","className","handlers","disableSpacebarClick","ripples","group","leftAddon","rightAddon","icon","_jsx","__assign","rotated","collapsed","handleFocus","event","preventDefault","currentTarget","closest","focus","a11y","undefined","id","role","tabIndex","noA11y","_jsxs","style","_b","link","clickable"],"sources":["C:\\Users\\hungr\\Documents\\VS-CODE\\notes-react\\node_modules\\@react-md\\tree\\src\\TreeItem.tsx"],"sourcesContent":["import { forwardRef, useCallback } from \"react\";\nimport cn from \"classnames\";\nimport { useIcon } from \"@react-md/icon\";\nimport type { ListElement } from \"@react-md/list\";\nimport { ListItemChildren } from \"@react-md/list\";\nimport { useInteractionStates } from \"@react-md/states\";\nimport { bem } from \"@react-md/utils\";\n\nimport { TreeGroup } from \"./TreeGroup\";\nimport { TreeItemExpanderIcon } from \"./TreeItemExpanderIcon\";\nimport type { TreeItemProps, TreeItemWithContentComponentProps } from \"./types\";\n\nconst block = bem(\"rmd-tree-item\");\n\n/**\n * This component renders an item within a tree with optional child items. This\n * should almost always be used from the `itemRenderer` prop from the `Tree`\n * component as it provides a lot of the required a11y props for you.\n */\nexport const TreeItem = forwardRef<\n  HTMLLIElement,\n  TreeItemProps | TreeItemWithContentComponentProps\n>(function TreeItem(\n  {\n    id,\n    className: propClassName,\n    liStyle,\n    liClassName,\n    liRef,\n    depth,\n    listSize,\n    itemIndex,\n    renderChildItems,\n    expanded,\n    selected,\n    focused,\n    expanderIcon: propExpanderIcon,\n    expanderLeft = false,\n    textClassName,\n    secondaryTextClassName,\n    textChildren = true,\n    primaryText,\n    secondaryText,\n    leftAddon: propLeftAddon,\n    leftAddonType = \"icon\",\n    leftAddonPosition = \"middle\",\n    rightAddon: propRightAddon,\n    rightAddonType = \"icon\",\n    rightAddonPosition = \"middle\",\n    forceAddonWrap,\n    height = \"auto\",\n    threeLines = false,\n    children,\n    contentComponent: Content = \"span\",\n    isLink: propIsLink,\n    disabled = false,\n    readOnly,\n    onFocus,\n    onKeyUp,\n    onKeyDown,\n    onClick,\n    onMouseUp,\n    onMouseDown,\n    onMouseLeave,\n    onTouchMove,\n    onTouchEnd,\n    onTouchStart,\n    ...props\n  },\n  ref\n) {\n  const expanderIcon = useIcon(\"expander\", propExpanderIcon);\n\n  const isLink =\n    typeof propIsLink === \"boolean\"\n      ? propIsLink\n      : typeof Content !== \"string\" || Content === \"a\";\n\n  const { ripples, className, handlers } = useInteractionStates({\n    disabled,\n    className: propClassName,\n    handlers: {\n      onKeyUp,\n      onKeyDown,\n      onClick,\n      onMouseUp,\n      onMouseDown,\n      onMouseLeave,\n      onTouchMove,\n      onTouchEnd,\n      onTouchStart,\n    },\n    disableSpacebarClick: isLink,\n  });\n\n  let group;\n  let leftAddon = propLeftAddon;\n  let rightAddon = propRightAddon;\n  if (renderChildItems) {\n    const icon = (\n      <TreeItemExpanderIcon rotated={expanded}>\n        {expanderIcon}\n      </TreeItemExpanderIcon>\n    );\n    if (expanderLeft) {\n      leftAddon = icon;\n    } else {\n      rightAddon = icon;\n    }\n\n    group = <TreeGroup collapsed={!expanded}>{renderChildItems()}</TreeGroup>;\n  }\n\n  const handleFocus = useCallback(\n    (event: React.FocusEvent<HTMLLIElement>) => {\n      if (onFocus) {\n        onFocus(event);\n      }\n\n      event.preventDefault();\n      event.currentTarget.closest<ListElement>('[role=\"tree\"]')?.focus();\n    },\n    [onFocus]\n  );\n\n  const a11y = {\n    \"aria-expanded\": renderChildItems ? expanded : undefined,\n    \"aria-selected\": selected,\n    \"aria-level\": depth + 1,\n    \"aria-setsize\": listSize,\n    \"aria-posinset\": itemIndex + 1,\n    \"aria-disabled\": disabled || undefined,\n    id,\n    role: \"treeitem\",\n    tabIndex: -1,\n    ...handlers,\n    onFocus: handleFocus,\n  } as const;\n  const noA11y = { role: \"none\" } as const;\n\n  return (\n    <li\n      {...(isLink ? noA11y : a11y)}\n      ref={liRef}\n      style={liStyle}\n      className={cn(block(), liClassName)}\n    >\n      <Content\n        {...props}\n        {...(isLink ? a11y : undefined)}\n        ref={ref}\n        className={cn(\n          block(\"content\", {\n            link: isLink,\n            clickable: !disabled && !readOnly,\n            [height]: height !== \"auto\" && height !== \"normal\",\n            \"three-lines\": !!secondaryText && threeLines,\n            selected,\n            focused,\n          }),\n          className\n        )}\n      >\n        <ListItemChildren\n          textClassName={textClassName}\n          secondaryTextClassName={secondaryTextClassName}\n          textChildren={textChildren}\n          primaryText={primaryText}\n          secondaryText={secondaryText}\n          leftAddon={leftAddon}\n          leftAddonType={leftAddonType}\n          leftAddonPosition={leftAddonPosition}\n          rightAddon={rightAddon}\n          rightAddonType={rightAddonType}\n          rightAddonPosition={rightAddonPosition}\n          forceAddonWrap={forceAddonWrap}\n        >\n          {children}\n        </ListItemChildren>\n        {ripples}\n      </Content>\n      {group}\n    </li>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}