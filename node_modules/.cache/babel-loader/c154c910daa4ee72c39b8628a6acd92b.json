{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport { useFixedPositioning } from \"@react-md/transition\";\nimport { TOP_INNER_RIGHT_ANCHOR } from \"@react-md/utils\";\nimport { Dialog } from \"./Dialog\";\nvar DEFAULT_CLASSNAMES = {\n  appear: \"rmd-dialog--fixed-enter\",\n  appearActive: \"rmd-dialog--fixed-enter-active\",\n  enter: \"rmd-dialog--fixed-enter\",\n  enterActive: \"rmd-dialog--fixed-enter-active\",\n  exit: \"rmd-dialog--fixed-exit\",\n  exitActive: \"rmd-dialog--fixed-exit-active\"\n};\n/**\n * The `FixedDialog` is a wrapper for the `Dialog` component that can be used to\n * be fix itself to another element. Another term for this component might be a\n * \"Pop out Dialog\".\n */\n\nexport var FixedDialog = forwardRef(function FixedDialog(_a, nodeRef) {\n  var fixedTo = _a.fixedTo,\n      propStyle = _a.style,\n      _b = _a.anchor,\n      anchor = _b === void 0 ? TOP_INNER_RIGHT_ANCHOR : _b,\n      options = _a.options,\n      getOptions = _a.getOptions,\n      children = _a.children,\n      className = _a.className,\n      _c = _a.classNames,\n      classNames = _c === void 0 ? DEFAULT_CLASSNAMES : _c,\n      _d = _a.overlayHidden,\n      overlayHidden = _d === void 0 ? true : _d,\n      _e = _a.disableScrollLock,\n      disableScrollLock = _e === void 0 ? true : _e,\n      onEnter = _a.onEnter,\n      onEntering = _a.onEntering,\n      onEntered = _a.onEntered,\n      onExited = _a.onExited,\n      props = __rest(_a, [\"fixedTo\", \"style\", \"anchor\", \"options\", \"getOptions\", \"children\", \"className\", \"classNames\", \"overlayHidden\", \"disableScrollLock\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExited\"]);\n\n  var onRequestClose = props.onRequestClose;\n\n  var _f = useFixedPositioning(__assign(__assign({\n    nodeRef: nodeRef,\n    style: propStyle,\n    transformOrigin: true,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExited: onExited,\n    anchor: anchor,\n    fixedTo: fixedTo,\n    onScroll:\n    /* istanbul ignore next */\n    function (_event, _a) {\n      var visible = _a.visible;\n\n      if (!visible) {\n        onRequestClose();\n      }\n    }\n  }, options), {\n    getFixedPositionOptions: getOptions\n  })),\n      ref = _f.ref,\n      style = _f.style,\n      callbacks = _f.callbacks;\n\n  return _jsx(Dialog, __assign({}, props, callbacks, {\n    ref: ref,\n    type: \"custom\",\n    style: style,\n    className: cn(\"rmd-dialog--fixed\", className),\n    classNames: classNames,\n    overlayHidden: overlayHidden,\n    disableScrollLock: disableScrollLock\n  }, {\n    children: children\n  }));\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AACA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,EAAP,MAAe,YAAf;AAEA,SAASC,mBAAT,QAAoC,sBAApC;AAKA,SAASC,sBAAT,QAAuC,iBAAvC;AAGA,SAASC,MAAT,QAAuB,UAAvB;AA4BA,IAAMC,kBAAkB,GAA4B;EAClDC,MAAM,EAAE,yBAD0C;EAElDC,YAAY,EAAE,gCAFoC;EAGlDC,KAAK,EAAE,yBAH2C;EAIlDC,WAAW,EAAE,gCAJqC;EAKlDC,IAAI,EAAE,wBAL4C;EAMlDC,UAAU,EAAE;AANsC,CAApD;AASA;;;;;;AAKA,OAAO,IAAMC,WAAW,GAAGZ,UAAU,CACnC,SAASY,WAAT,CACEC,EADF,EAkBEC,OAlBF,EAkBS;EAhBL,WAAO,aAAP;EAAA,IACOC,SAAS,WADhB;EAAA,IAEAC,cAFA;EAAA,IAEAC,MAAM,mBAAGd,sBAAH,GAAyBa,EAF/B;EAAA,IAGAE,OAAO,aAHP;EAAA,IAIAC,UAAU,gBAJV;EAAA,IAKAC,QAAQ,cALR;EAAA,IAMAC,SAAS,eANT;EAAA,IAOAC,kBAPA;EAAA,IAOAC,UAAU,mBAAGlB,kBAAH,GAAqBiB,EAP/B;EAAA,IAQAE,qBARA;EAAA,IAQAC,aAAa,mBAAG,IAAH,GAAOD,EARpB;EAAA,IASAE,yBATA;EAAA,IASAC,iBAAiB,mBAAG,IAAH,GAAOD,EATxB;EAAA,IAUAE,OAAO,aAVP;EAAA,IAWAC,UAAU,gBAXV;EAAA,IAYAC,SAAS,eAZT;EAAA,IAaAC,QAAQ,cAbR;EAAA,IAcGC,KAAK,cAfV,sLAeU,CAdR;;EAkBM,kBAAc,GAAKA,KAAK,eAAxB;;EAEF,SAA4B9B,mBAAmB;IACnDY,OAAO,SAD4C;IAEnDmB,KAAK,EAAElB,SAF4C;IAGnDmB,eAAe,EAAE,IAHkC;IAInDN,OAAO,SAJ4C;IAKnDC,UAAU,YALyC;IAMnDC,SAAS,WAN0C;IAOnDC,QAAQ,UAP2C;IAQnDd,MAAM,QAR6C;IASnDkB,OAAO,SAT4C;IAUnDC,QAAQ;IAAE;IAA2B,UAACC,MAAD,EAASxB,EAAT,EAAoB;UAATyB,OAAO;;MACrD,IAAI,CAACA,OAAL,EAAc;QACZC,cAAc;MACf;IACF;EAdkD,GAehDrB,OAfgD,GAezC;IACVsB,uBAAuB,EAAErB;EADf,CAfyC,EAA/C;EAAA,IAAEsB,GAAG,SAAL;EAAA,IAAOR,KAAK,WAAZ;EAAA,IAAcS,SAAS,eAAvB;;EAmBN,OACEC,KAACvC,MAAD,EAAOwC,aACDZ,KADC,EAEDU,SAFC,EAEQ;IACbD,GAAG,EAAEA,GADQ;IAEbI,IAAI,EAAC,QAFQ;IAGbZ,KAAK,EAAEA,KAHM;IAIbZ,SAAS,EAAEpB,EAAE,CAAC,mBAAD,EAAsBoB,SAAtB,CAJA;IAKbE,UAAU,EAAEA,UALC;IAMbE,aAAa,EAAEA,aANF;IAObE,iBAAiB,EAAEA;EAPN,CAFR,EAS+B;IAAAP,UAEnCA;EAFmC,CAT/B,CAAP,CADF;AAeD,CAzDkC,CAA9B","names":["forwardRef","cn","useFixedPositioning","TOP_INNER_RIGHT_ANCHOR","Dialog","DEFAULT_CLASSNAMES","appear","appearActive","enter","enterActive","exit","exitActive","FixedDialog","_a","nodeRef","propStyle","_b","anchor","options","getOptions","children","className","_c","classNames","_d","overlayHidden","_e","disableScrollLock","onEnter","onEntering","onEntered","onExited","props","style","transformOrigin","fixedTo","onScroll","_event","visible","onRequestClose","getFixedPositionOptions","ref","callbacks","_jsx","__assign","type"],"sources":["C:\\Users\\hungr\\Documents\\VS-CODE\\notes-react\\node_modules\\@react-md\\dialog\\src\\FixedDialog.tsx"],"sourcesContent":["import type { RefObject } from \"react\";\nimport { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport type { CSSTransitionClassNames } from \"@react-md/transition\";\nimport { useFixedPositioning } from \"@react-md/transition\";\nimport type {\n  CalculateFixedPositionOptions,\n  LabelRequiredForA11y,\n} from \"@react-md/utils\";\nimport { TOP_INNER_RIGHT_ANCHOR } from \"@react-md/utils\";\n\nimport type { BaseDialogProps } from \"./Dialog\";\nimport { Dialog } from \"./Dialog\";\n\nexport interface BaseFixedDialogProps\n  extends Omit<BaseDialogProps, \"type\">,\n    Pick<CalculateFixedPositionOptions, \"anchor\"> {\n  /**\n   * The element the dialog should be fixed to. This can either be:\n   * - a query selector string to get an element\n   * - an HTMLElement (normally a ref.current)\n   * - a function that returns an HTMLElement or null\n   * - null\n   */\n  fixedTo: RefObject<HTMLElement>;\n\n  /**\n   * Any additional options to apply to the fixed positioning logic. The\n   * `transformOrigin` option will be enabled by default.\n   */\n  options?: CalculateFixedPositionOptions;\n\n  /**\n   * An optional function to call to get the fixed positioning options.\n   */\n  getOptions?(): CalculateFixedPositionOptions;\n}\n\nexport type FixedDialogProps = LabelRequiredForA11y<BaseFixedDialogProps>;\n\nconst DEFAULT_CLASSNAMES: CSSTransitionClassNames = {\n  appear: \"rmd-dialog--fixed-enter\",\n  appearActive: \"rmd-dialog--fixed-enter-active\",\n  enter: \"rmd-dialog--fixed-enter\",\n  enterActive: \"rmd-dialog--fixed-enter-active\",\n  exit: \"rmd-dialog--fixed-exit\",\n  exitActive: \"rmd-dialog--fixed-exit-active\",\n};\n\n/**\n * The `FixedDialog` is a wrapper for the `Dialog` component that can be used to\n * be fix itself to another element. Another term for this component might be a\n * \"Pop out Dialog\".\n */\nexport const FixedDialog = forwardRef<HTMLDivElement, FixedDialogProps>(\n  function FixedDialog(\n    {\n      fixedTo,\n      style: propStyle,\n      anchor = TOP_INNER_RIGHT_ANCHOR,\n      options,\n      getOptions,\n      children,\n      className,\n      classNames = DEFAULT_CLASSNAMES,\n      overlayHidden = true,\n      disableScrollLock = true,\n      onEnter,\n      onEntering,\n      onEntered,\n      onExited,\n      ...props\n    },\n    nodeRef\n  ) {\n    const { onRequestClose } = props;\n\n    const { ref, style, callbacks } = useFixedPositioning({\n      nodeRef,\n      style: propStyle,\n      transformOrigin: true,\n      onEnter,\n      onEntering,\n      onEntered,\n      onExited,\n      anchor,\n      fixedTo,\n      onScroll: /* istanbul ignore next */ (_event, { visible }) => {\n        if (!visible) {\n          onRequestClose();\n        }\n      },\n      ...options,\n      getFixedPositionOptions: getOptions,\n    });\n\n    return (\n      <Dialog\n        {...props}\n        {...callbacks}\n        ref={ref}\n        type=\"custom\"\n        style={style}\n        className={cn(\"rmd-dialog--fixed\", className)}\n        classNames={classNames}\n        overlayHidden={overlayHidden}\n        disableScrollLock={disableScrollLock}\n      >\n        {children}\n      </Dialog>\n    );\n  }\n);\n"]},"metadata":{},"sourceType":"module"}