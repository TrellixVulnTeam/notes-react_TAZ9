{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hungr\\\\Documents\\\\VS-CODE\\\\notes-react\\\\src\\\\components\\\\AddNote.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable no-lone-blocks */\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n{\n  /*this component is for adding new note in our notes application*/\n}\n\nfunction AddNote(_ref) {\n  _s();\n\n  let {\n    handleAddNote\n  } = _ref;\n  {\n    /*this noteText is the value for adding Note input*/\n  }\n  const [noteText, setNoteText] = useState(\"\"); // here this is an limit for the note\n\n  const charLimit = 10000;\n  {\n    /*this function is defined for the onChange event of out adding note input*/\n  }\n\n  const handleChange = event => {\n    {\n      /*with typing the character limit will change with the input text's length*/\n    }\n\n    if (charLimit - event.target.value.length >= 0) {\n      setNoteText(event.target.value);\n    }\n  };\n\n  {\n    /*this is for saving the new note*/\n  }\n\n  const handelSaveClick = () => {\n    {\n      /*if there's no character in input , then we will not save the note*/\n    }\n\n    if (noteText.trim().length > 0) {\n      handleAddNote(noteText);\n      setNoteText(\"\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note new\",\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      cols: \"10\",\n      rows: \"8\",\n      placeholder: \"Type your note here...\",\n      onChange: handleChange,\n      value: noteText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-footer\",\n      children: /*#__PURE__*/_jsxDEV(\"small\", {\n        children: charLimit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddNote, \"xEk+5A/0jLEwq6N0fIYddCVDzao=\");\n\n_c = AddNote;\nexport default AddNote;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddNote\");","map":{"version":3,"names":["React","useState","AddNote","handleAddNote","noteText","setNoteText","charLimit","handleChange","event","target","value","length","handelSaveClick","trim"],"sources":["C:/Users/hungr/Documents/VS-CODE/notes-react/src/components/AddNote.js"],"sourcesContent":["/* eslint-disable no-lone-blocks */\r\nimport React, { useState } from \"react\";\r\n{\r\n  /*this component is for adding new note in our notes application*/\r\n}\r\nfunction AddNote({ handleAddNote }) {\r\n  {\r\n    /*this noteText is the value for adding Note input*/\r\n  }\r\n  const [noteText, setNoteText] = useState(\"\");\r\n  // here this is an limit for the note\r\n  const charLimit = 10000;\r\n  {\r\n    /*this function is defined for the onChange event of out adding note input*/\r\n  }\r\n  const handleChange = (event) => {\r\n    {\r\n      /*with typing the character limit will change with the input text's length*/\r\n    }\r\n    if (charLimit - event.target.value.length >= 0) {\r\n      setNoteText(event.target.value);\r\n    }\r\n  };\r\n\r\n  {\r\n    /*this is for saving the new note*/\r\n  }\r\n  const handelSaveClick = () => {\r\n    {\r\n      /*if there's no character in input , then we will not save the note*/\r\n    }\r\n    if (noteText.trim().length > 0) {\r\n      handleAddNote(noteText);\r\n      setNoteText(\"\");\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"note new\">\r\n      {/* the text area for our input */}\r\n      <textarea\r\n        cols=\"10\"\r\n        rows=\"8\"\r\n        placeholder=\"Type your note here...\"\r\n        onChange={handleChange}\r\n        value={noteText}\r\n      ></textarea>\r\n\r\n      <div className=\"note-footer\">\r\n      <small>\r\n        {charLimit}\r\n      </small>\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddNote;\r\n"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AACA;EACE;AACD;;AACD,SAASC,OAAT,OAAoC;EAAA;;EAAA,IAAnB;IAAEC;EAAF,CAAmB;EAClC;IACE;EACD;EACD,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,EAAD,CAAxC,CAJkC,CAKlC;;EACA,MAAMK,SAAS,GAAG,KAAlB;EACA;IACE;EACD;;EACD,MAAMC,YAAY,GAAIC,KAAD,IAAW;IAC9B;MACE;IACD;;IACD,IAAIF,SAAS,GAAGE,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmBC,MAA/B,IAAyC,CAA7C,EAAgD;MAC9CN,WAAW,CAACG,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAX;IACD;EACF,CAPD;;EASA;IACE;EACD;;EACD,MAAME,eAAe,GAAG,MAAM;IAC5B;MACE;IACD;;IACD,IAAIR,QAAQ,CAACS,IAAT,GAAgBF,MAAhB,GAAyB,CAA7B,EAAgC;MAC9BR,aAAa,CAACC,QAAD,CAAb;MACAC,WAAW,CAAC,EAAD,CAAX;IACD;EACF,CARD;;EASA,oBACE;IAAK,SAAS,EAAC,UAAf;IAAA,wBAEE;MACE,IAAI,EAAC,IADP;MAEE,IAAI,EAAC,GAFP;MAGE,WAAW,EAAC,wBAHd;MAIE,QAAQ,EAAEE,YAJZ;MAKE,KAAK,EAAEH;IALT;MAAA;MAAA;MAAA;IAAA,QAFF,eAUE;MAAK,SAAS,EAAC,aAAf;MAAA,uBACA;QAAA,UACGE;MADH;QAAA;QAAA;QAAA;MAAA;IADA;MAAA;MAAA;MAAA;IAAA,QAVF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAmBD;;GAlDQJ,O;;KAAAA,O;AAoDT,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}