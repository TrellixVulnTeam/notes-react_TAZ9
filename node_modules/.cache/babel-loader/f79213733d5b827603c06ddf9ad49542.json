{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { forwardRef } from \"react\";\n/**\n * This component is honestly not very helpful since it does not apply any\n * styles. It is a simple wrapper for a `<div>` that updates the props to\n * require the `children` and `onKeyDown` props.\n */\n\nexport var ExpansionList = forwardRef(function ExpansionList(_a, ref) {\n  var children = _a.children,\n      props = __rest(_a, [\"children\"]);\n\n  return _jsx(\"div\", __assign({}, props, {\n    ref: ref\n  }, {\n    children: children\n  }));\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AACA,SAASA,UAAT,QAA2B,OAA3B;AAgBA;;;;;;AAKA,OAAO,IAAMC,aAAa,GAAGD,UAAU,CACrC,SAASC,aAAT,CAAuBC,EAAvB,EAA+CC,GAA/C,EAAkD;EAAzB,YAAQ,cAAR;EAAA,IAAaC,KAAK,cAApB,YAAoB,CAAlB;;EACvB,OACEC,yBAASD,KAAT,EAAc;IAAED,GAAG,EAAEA;EAAP,CAAd,EAAwB;IAAAG,UACrBA;EADqB,CAAxB,EADF;AAKD,CAPoC,CAAhC","names":["forwardRef","ExpansionList","_a","ref","props","_jsx","children"],"sources":["C:\\Users\\hungr\\Documents\\VS-CODE\\notes-react\\node_modules\\@react-md\\expansion-panel\\src\\ExpansionList.tsx"],"sourcesContent":["import type { HTMLAttributes, KeyboardEventHandler, ReactNode } from \"react\";\nimport { forwardRef } from \"react\";\n\nexport interface ExpansionListProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * This should be 2 or more expansion panel components.\n   */\n  children: ReactNode;\n\n  /**\n   * The keydown event handler that allows for focusing the next/previous panel\n   * as well as the first/last with keyboard shortcuts. This is provided by the\n   * `usePanels` hook automatically.\n   */\n  onKeyDown: KeyboardEventHandler<HTMLDivElement>;\n}\n\n/**\n * This component is honestly not very helpful since it does not apply any\n * styles. It is a simple wrapper for a `<div>` that updates the props to\n * require the `children` and `onKeyDown` props.\n */\nexport const ExpansionList = forwardRef<HTMLDivElement, ExpansionListProps>(\n  function ExpansionList({ children, ...props }, ref) {\n    return (\n      <div {...props} ref={ref}>\n        {children}\n      </div>\n    );\n  }\n);\n"]},"metadata":{},"sourceType":"module"}