{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport { bem } from \"@react-md/utils\";\nvar block = bem(\"rmd-dialog\");\n/**\n * This component doesn't do anything to complex. It really just applies custom\n * styles so that when the `DialogContent` component is used, the header will be\n * \"fixed\" to the top of the dialog while the content scrolls. It also applies\n * some minimal padding.\n */\n\nexport var DialogHeader = forwardRef(function DialogHeader(_a, ref) {\n  var children = _a.children,\n      className = _a.className,\n      props = __rest(_a, [\"children\", \"className\"]);\n\n  return _jsx(\"header\", __assign({}, props, {\n    ref: ref,\n    className: cn(block(\"header\"), className)\n  }, {\n    children: children\n  }));\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AACA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,SAASC,GAAT,QAAoB,iBAApB;AAIA,IAAMC,KAAK,GAAGD,GAAG,CAAC,YAAD,CAAjB;AAEA;;;;;;;AAMA,OAAO,IAAME,YAAY,GAAGJ,UAAU,CACpC,SAASI,YAAT,CAAsBC,EAAtB,EAAyDC,GAAzD,EAA4D;EAApC,YAAQ,cAAR;EAAA,IAAUC,SAAS,eAAnB;EAAA,IAAwBC,KAAK,cAA/B,yBAA+B,CAA7B;;EACtB,OACEC,4BAAYD,KAAZ,EAAiB;IAAEF,GAAG,EAAEA,GAAP;IAAYC,SAAS,EAAEN,EAAE,CAACE,KAAK,CAAC,QAAD,CAAN,EAAkBI,SAAlB;EAAzB,CAAjB,EAAsE;IAAAG,UACnEA;EADmE,CAAtE,EADF;AAKD,CAPmC,CAA/B","names":["forwardRef","cn","bem","block","DialogHeader","_a","ref","className","props","_jsx","children"],"sources":["C:\\Users\\hungr\\Documents\\VS-CODE\\notes-react\\node_modules\\@react-md\\dialog\\src\\DialogHeader.tsx"],"sourcesContent":["import type { HTMLAttributes } from \"react\";\nimport { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport { bem } from \"@react-md/utils\";\n\nexport type DialogHeaderProps = HTMLAttributes<HTMLDivElement>;\n\nconst block = bem(\"rmd-dialog\");\n\n/**\n * This component doesn't do anything to complex. It really just applies custom\n * styles so that when the `DialogContent` component is used, the header will be\n * \"fixed\" to the top of the dialog while the content scrolls. It also applies\n * some minimal padding.\n */\nexport const DialogHeader = forwardRef<HTMLDivElement, DialogHeaderProps>(\n  function DialogHeader({ children, className, ...props }, ref) {\n    return (\n      <header {...props} ref={ref} className={cn(block(\"header\"), className)}>\n        {children}\n      </header>\n    );\n  }\n);\n"]},"metadata":{},"sourceType":"module"}