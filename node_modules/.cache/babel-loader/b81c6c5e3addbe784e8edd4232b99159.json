{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useState } from \"react\";\nimport { useUserInteractionMode } from \"@react-md/utils\";\nimport { useMenuBarContext } from \"./MenuBarProvider\";\nimport { MenuButton } from \"./MenuButton\";\nimport { useMenuConfiguration } from \"./MenuConfigurationProvider\";\nimport { MenuItemButton } from \"./MenuItemButton\";\nimport { MenuRenderer } from \"./MenuRenderer\";\nimport { MenuVisibilityProvider } from \"./MenuVisibilityProvider\";\nimport { useMenu } from \"./useMenu\";\n/**\n * This component is a preset for creating dropdown menus using the\n * {@link useMenu} hook which provides the visibility behavior and other\n * functionality for menus. This will render as a `<Button>` by default but can\n * be rendered as a `<MenuItem>` by existing as a child of another\n * `DropdownMenu`.\n *\n * Most of the top-level props will be passed directly to the `Button` or\n * `MenuItem` components with the exception for the `children`. The children for\n * the `Button` or `MenuItem` can be set with the `buttonChildren` prop since\n * the main `children` should be the `Menu`'s children.\n *\n * @example\n * Simple Example\n * ```tsx\n * import type { ReactElement } from \"react\";\n * import { DropdownMenu, MenuItem } from \"@react-md/menu\";\n *\n * function Example() {\n *   return (\n *     <DropdownMenu id=\"example-dropdown-menu\" buttonChildren=\"Dropdown\">\n *       <MenuItem onClick={() => console.log('Clicked Item 1')}>\n *         Item 1\n *       </MenuItem>\n *       <MenuItem onClick={() => console.log('Clicked Item 2')}>\n *         Item 2\n *       </MenuItem>\n *     </DropdownMenu>\n *   );\n * }\n * ```\n *\n * @example\n * Nested Dropdown Menus\n * ```tsx\n * import type { ReactElement } from \"react\";\n * import { DropdownMenu, MenuItem } from \"@react-md/menu\";\n *\n * function Example() {\n *   return (\n *     <DropdownMenu id=\"example-dropdown-menu\" buttonChildren=\"Dropdown\">\n *       <MenuItem onClick={() => console.log('Clicked Item 1')}>\n *         Item 1\n *       </MenuItem>\n *       <MenuItem onClick={() => console.log('Clicked Item 2')}>\n *         Item 2\n *       </MenuItem>\n *       <DropdownMenu\n *         id=\"nested-dropdown-menu\"\n *         buttonChildren=\"Nested Dropdown\"\n *       >\n *         <MenuItem onClick={() => console.log('Clicked Item 1')}>\n *           Nested Item 1\n *         </MenuItem>\n *         <MenuItem onClick={() => console.log('Clicked Item 2')}>\n *           Nested Item 2\n *         </MenuItem>\n *       </DropdownMenu>\n *     </DropdownMenu>\n *   );\n * }\n * ```\n *\n * @remarks \\@since 5.0.0\n */\n\nexport function DropdownMenu(_a) {\n  var _b;\n\n  var id = _a.id,\n      onClick = _a.onClick,\n      onKeyDown = _a.onKeyDown,\n      onMouseEnter = _a.onMouseEnter,\n      onMouseLeave = _a.onMouseLeave,\n      menuLabel = _a.menuLabel,\n      propMenuProps = _a.menuProps,\n      menuStyle = _a.menuStyle,\n      menuClassName = _a.menuClassName,\n      sheetProps = _a.sheetProps,\n      sheetMenuProps = _a.sheetMenuProps,\n      sheetStyle = _a.sheetStyle,\n      sheetClassName = _a.sheetClassName,\n      propSheetHeader = _a.sheetHeader,\n      propSheetFooter = _a.sheetFooter,\n      propRenderAsSheet = _a.renderAsSheet,\n      propSheetPosition = _a.sheetPosition,\n      propSheetVerticalSize = _a.sheetVerticalSize,\n      listStyle = _a.listStyle,\n      listClassName = _a.listClassName,\n      listProps = _a.listProps,\n      appear = _a.appear,\n      enter = _a.enter,\n      exit = _a.exit,\n      propTimeout = _a.timeout,\n      classNames = _a.classNames,\n      anchor = _a.anchor,\n      fixedPositionOptions = _a.fixedPositionOptions,\n      getFixedPositionOptions = _a.getFixedPositionOptions,\n      temporary = _a.temporary,\n      portal = _a.portal,\n      portalInto = _a.portalInto,\n      portalIntoId = _a.portalIntoId,\n      onEnter = _a.onEnter,\n      onEntering = _a.onEntering,\n      onEntered = _a.onEntered,\n      onExit = _a.onExit,\n      onExiting = _a.onExiting,\n      onExited = _a.onExited,\n      propHorizontal = _a.horizontal,\n      children = _a.children,\n      preventScroll = _a.preventScroll,\n      closeOnResize = _a.closeOnResize,\n      closeOnScroll = _a.closeOnScroll,\n      propIconRotatorProps = _a.iconRotatorProps,\n      propDisableFocusOnMount = _a.disableFocusOnMount,\n      propDisableFocusOnUnmount = _a.disableFocusOnUnmount,\n      props = __rest(_a, [\"id\", \"onClick\", \"onKeyDown\", \"onMouseEnter\", \"onMouseLeave\", \"menuLabel\", \"menuProps\", \"menuStyle\", \"menuClassName\", \"sheetProps\", \"sheetMenuProps\", \"sheetStyle\", \"sheetClassName\", \"sheetHeader\", \"sheetFooter\", \"renderAsSheet\", \"sheetPosition\", \"sheetVerticalSize\", \"listStyle\", \"listClassName\", \"listProps\", \"appear\", \"enter\", \"exit\", \"timeout\", \"classNames\", \"anchor\", \"fixedPositionOptions\", \"getFixedPositionOptions\", \"temporary\", \"portal\", \"portalInto\", \"portalIntoId\", \"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"horizontal\", \"children\", \"preventScroll\", \"closeOnResize\", \"closeOnScroll\", \"iconRotatorProps\", \"disableFocusOnMount\", \"disableFocusOnUnmount\"]);\n\n  var disabled = props.disabled;\n\n  var _c = useMenuConfiguration({\n    horizontal: propHorizontal,\n    sheetFooter: propSheetFooter,\n    sheetHeader: propSheetHeader,\n    renderAsSheet: propRenderAsSheet,\n    sheetPosition: propSheetPosition,\n    sheetVerticalSize: propSheetVerticalSize\n  }),\n      horizontal = _c.horizontal,\n      sheetHeader = _c.sheetHeader,\n      sheetFooter = _c.sheetFooter,\n      renderAsSheet = _c.renderAsSheet,\n      sheetPosition = _c.sheetPosition,\n      sheetVerticalSize = _c.sheetVerticalSize;\n\n  var mode = useUserInteractionMode();\n  var mouse = mode === \"mouse\";\n  var keyboard = mode === \"keyboard\";\n\n  var _d = useMenuBarContext(),\n      root = _d.root,\n      menubar = _d.menubar,\n      menuitem = _d.menuitem,\n      activeId = _d.activeId,\n      animatedOnce = _d.animatedOnce;\n\n  var disableTransition = animatedOnce && menubar && !!activeId && (mouse || keyboard);\n  var timeout = propTimeout !== null && propTimeout !== void 0 ? propTimeout : disableTransition ? 0 : undefined;\n  var disableFocusOnMount = propDisableFocusOnMount !== null && propDisableFocusOnMount !== void 0 ? propDisableFocusOnMount : mouse && timeout === 0;\n  var disableFocusOnUnmount = propDisableFocusOnUnmount !== null && propDisableFocusOnUnmount !== void 0 ? propDisableFocusOnUnmount : mouse && timeout === 0;\n  var iconRotatorProps = propIconRotatorProps;\n\n  if (disableTransition) {\n    iconRotatorProps = __assign({\n      animate: false\n    }, propIconRotatorProps);\n  }\n\n  var floating = null;\n\n  if (!menuitem) {\n    _b = props.floating, floating = _b === void 0 ? null : _b;\n  }\n\n  var _e = __read(useState(false), 2),\n      visible = _e[0],\n      setVisible = _e[1];\n\n  var _f = useMenu({\n    baseId: id,\n    visible: visible,\n    setVisible: setVisible,\n    disabled: disabled,\n    menuLabel: menuLabel,\n    horizontal: horizontal,\n    onToggleClick: onClick,\n    onToggleKeyDown: onKeyDown,\n    onToggleMouseEnter: onMouseEnter,\n    onToggleMouseLeave: onMouseLeave,\n    onMenuClick: propMenuProps === null || propMenuProps === void 0 ? void 0 : propMenuProps.onClick,\n    onMenuKeyDown: propMenuProps === null || propMenuProps === void 0 ? void 0 : propMenuProps.onKeyDown,\n    floating: floating,\n    onEnter: onEnter,\n    onEntering: onEntering,\n    onEntered: onEntered,\n    onExited: onExited,\n    anchor: anchor,\n    style: menuStyle,\n    fixedPositionOptions: fixedPositionOptions,\n    getFixedPositionOptions: getFixedPositionOptions,\n    menuitem: !root && menuitem,\n    preventScroll: preventScroll,\n    closeOnResize: closeOnResize,\n    closeOnScroll: closeOnScroll,\n    disableFocusOnMount: disableFocusOnMount,\n    disableFocusOnUnmount: disableFocusOnUnmount\n  }),\n      menuRef = _f.menuRef,\n      menuProps = _f.menuProps,\n      toggleRef = _f.toggleRef,\n      toggleProps = _f.toggleProps;\n\n  var toggle;\n\n  if (menuitem) {\n    // see `DropdownMenuProps` about this typecast\n    var _g = props,\n        buttonChildren = _g.buttonChildren,\n        itemProps = __rest(_g, [\"buttonChildren\"]);\n\n    toggle = _jsx(MenuItemButton, __assign({}, itemProps, {\n      iconRotatorProps: iconRotatorProps\n    }, toggleProps, {\n      ref: toggleRef,\n      visible: visible\n    }, {\n      children: buttonChildren\n    }));\n  } else {\n    // see `DropdownMenuProps` about this typecast\n    var _h = props,\n        buttonChildren = _h.buttonChildren,\n        buttonProps = __rest(_h, [\"buttonChildren\"]);\n\n    toggle = _jsx(MenuButton, __assign({}, buttonProps, {\n      iconRotatorProps: iconRotatorProps\n    }, toggleProps, {\n      ref: toggleRef,\n      visible: visible\n    }, {\n      children: buttonChildren\n    }));\n  }\n\n  return _jsxs(MenuVisibilityProvider, __assign({\n    visible: visible,\n    setVisible: setVisible\n  }, {\n    children: [toggle, _jsx(MenuRenderer, __assign({}, menuProps, {\n      menuRef: menuRef,\n      menuProps: propMenuProps,\n      menuStyle: menuProps.style,\n      menuClassName: menuClassName,\n      sheetProps: sheetProps,\n      sheetStyle: sheetStyle,\n      sheetClassName: sheetClassName,\n      sheetMenuProps: sheetMenuProps,\n      sheetHeader: sheetHeader,\n      sheetFooter: sheetFooter,\n      sheetPosition: sheetPosition,\n      sheetVerticalSize: sheetVerticalSize,\n      listStyle: listStyle,\n      listClassName: listClassName,\n      listProps: listProps,\n      onRequestClose: function () {\n        return setVisible(false);\n      },\n      horizontal: horizontal,\n      renderAsSheet: renderAsSheet,\n      temporary: temporary,\n      portal: portal,\n      portalInto: portalInto,\n      portalIntoId: portalIntoId,\n      appear: appear,\n      enter: enter,\n      exit: exit,\n      onExit: onExit,\n      onExiting: onExiting,\n      timeout: timeout,\n      classNames: classNames\n    }, {\n      children: children\n    }))]\n  }));\n}","map":{"version":3,"mappings":"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","names":["useState","useUserInteractionMode","useMenuBarContext","MenuButton","useMenuConfiguration","MenuItemButton","MenuRenderer","MenuVisibilityProvider","useMenu","DropdownMenu","_a","onClick","onKeyDown","onMouseEnter","onMouseLeave","menuLabel","propMenuProps","menuStyle","menuClassName","sheetProps","sheetMenuProps","sheetStyle","sheetClassName","propSheetHeader","propSheetFooter","propRenderAsSheet","propSheetPosition","propSheetVerticalSize","listStyle","listClassName","listProps","appear","enter","exit","propTimeout","classNames","anchor","fixedPositionOptions","getFixedPositionOptions","temporary","portal","portalInto","portalIntoId","onEnter","onEntering","onEntered","onExit","onExiting","onExited","propHorizontal","children","preventScroll","closeOnResize","closeOnScroll","propIconRotatorProps","propDisableFocusOnMount","propDisableFocusOnUnmount","props","horizontal","sheetFooter","sheetHeader","renderAsSheet","sheetPosition","sheetVerticalSize","mode","mouse","keyboard","root","menubar","menuitem","activeId","animatedOnce","disableTransition","timeout","undefined","disableFocusOnMount","disableFocusOnUnmount","iconRotatorProps","animate","floating","_b","visible","setVisible","baseId","id","disabled","onToggleClick","onToggleKeyDown","onToggleMouseEnter","onToggleMouseLeave","onMenuClick","onMenuKeyDown","style","menuRef","menuProps","toggleRef","toggleProps","toggle","_g","buttonChildren","itemProps","_jsx","__assign","ref","_h","buttonProps","_jsxs","onRequestClose"],"sources":["C:\\Users\\hungr\\Documents\\VS-CODE\\notes-react\\node_modules\\@react-md\\menu\\src\\DropdownMenu.tsx"],"sourcesContent":["import type { ReactElement, RefObject } from \"react\";\nimport { useState } from \"react\";\nimport type { FABPosition } from \"@react-md/button\";\nimport { useUserInteractionMode } from \"@react-md/utils\";\n\nimport { useMenuBarContext } from \"./MenuBarProvider\";\nimport { MenuButton } from \"./MenuButton\";\nimport { useMenuConfiguration } from \"./MenuConfigurationProvider\";\nimport { MenuItemButton } from \"./MenuItemButton\";\nimport { MenuRenderer } from \"./MenuRenderer\";\nimport { MenuVisibilityProvider } from \"./MenuVisibilityProvider\";\nimport type {\n  DropdownMenuButtonProps,\n  DropdownMenuItemProps,\n  DropdownMenuProps,\n} from \"./types\";\nimport { useMenu } from \"./useMenu\";\n\n/**\n * This component is a preset for creating dropdown menus using the\n * {@link useMenu} hook which provides the visibility behavior and other\n * functionality for menus. This will render as a `<Button>` by default but can\n * be rendered as a `<MenuItem>` by existing as a child of another\n * `DropdownMenu`.\n *\n * Most of the top-level props will be passed directly to the `Button` or\n * `MenuItem` components with the exception for the `children`. The children for\n * the `Button` or `MenuItem` can be set with the `buttonChildren` prop since\n * the main `children` should be the `Menu`'s children.\n *\n * @example\n * Simple Example\n * ```tsx\n * import type { ReactElement } from \"react\";\n * import { DropdownMenu, MenuItem } from \"@react-md/menu\";\n *\n * function Example() {\n *   return (\n *     <DropdownMenu id=\"example-dropdown-menu\" buttonChildren=\"Dropdown\">\n *       <MenuItem onClick={() => console.log('Clicked Item 1')}>\n *         Item 1\n *       </MenuItem>\n *       <MenuItem onClick={() => console.log('Clicked Item 2')}>\n *         Item 2\n *       </MenuItem>\n *     </DropdownMenu>\n *   );\n * }\n * ```\n *\n * @example\n * Nested Dropdown Menus\n * ```tsx\n * import type { ReactElement } from \"react\";\n * import { DropdownMenu, MenuItem } from \"@react-md/menu\";\n *\n * function Example() {\n *   return (\n *     <DropdownMenu id=\"example-dropdown-menu\" buttonChildren=\"Dropdown\">\n *       <MenuItem onClick={() => console.log('Clicked Item 1')}>\n *         Item 1\n *       </MenuItem>\n *       <MenuItem onClick={() => console.log('Clicked Item 2')}>\n *         Item 2\n *       </MenuItem>\n *       <DropdownMenu\n *         id=\"nested-dropdown-menu\"\n *         buttonChildren=\"Nested Dropdown\"\n *       >\n *         <MenuItem onClick={() => console.log('Clicked Item 1')}>\n *           Nested Item 1\n *         </MenuItem>\n *         <MenuItem onClick={() => console.log('Clicked Item 2')}>\n *           Nested Item 2\n *         </MenuItem>\n *       </DropdownMenu>\n *     </DropdownMenu>\n *   );\n * }\n * ```\n *\n * @remarks \\@since 5.0.0\n */\nexport function DropdownMenu({\n  id,\n  onClick,\n  onKeyDown,\n  onMouseEnter,\n  onMouseLeave,\n  menuLabel,\n  menuProps: propMenuProps,\n  menuStyle,\n  menuClassName,\n  sheetProps,\n  sheetMenuProps,\n  sheetStyle,\n  sheetClassName,\n  sheetHeader: propSheetHeader,\n  sheetFooter: propSheetFooter,\n  renderAsSheet: propRenderAsSheet,\n  sheetPosition: propSheetPosition,\n  sheetVerticalSize: propSheetVerticalSize,\n  listStyle,\n  listClassName,\n  listProps,\n  appear,\n  enter,\n  exit,\n  timeout: propTimeout,\n  classNames,\n  anchor,\n  fixedPositionOptions,\n  getFixedPositionOptions,\n  temporary,\n  portal,\n  portalInto,\n  portalIntoId,\n  onEnter,\n  onEntering,\n  onEntered,\n  onExit,\n  onExiting,\n  onExited,\n  horizontal: propHorizontal,\n  children,\n  preventScroll,\n  closeOnResize,\n  closeOnScroll,\n  iconRotatorProps: propIconRotatorProps,\n  disableFocusOnMount: propDisableFocusOnMount,\n  disableFocusOnUnmount: propDisableFocusOnUnmount,\n  ...props\n}: DropdownMenuProps): ReactElement {\n  const { disabled } = props;\n  const {\n    horizontal,\n    sheetHeader,\n    sheetFooter,\n    renderAsSheet,\n    sheetPosition,\n    sheetVerticalSize,\n  } = useMenuConfiguration({\n    horizontal: propHorizontal,\n    sheetFooter: propSheetFooter,\n    sheetHeader: propSheetHeader,\n    renderAsSheet: propRenderAsSheet,\n    sheetPosition: propSheetPosition,\n    sheetVerticalSize: propSheetVerticalSize,\n  });\n\n  const mode = useUserInteractionMode();\n  const mouse = mode === \"mouse\";\n  const keyboard = mode === \"keyboard\";\n  const { root, menubar, menuitem, activeId, animatedOnce } =\n    useMenuBarContext();\n\n  const disableTransition =\n    animatedOnce && menubar && !!activeId && (mouse || keyboard);\n  const timeout = propTimeout ?? (disableTransition ? 0 : undefined);\n  const disableFocusOnMount =\n    propDisableFocusOnMount ?? (mouse && timeout === 0);\n  const disableFocusOnUnmount =\n    propDisableFocusOnUnmount ?? (mouse && timeout === 0);\n\n  let iconRotatorProps = propIconRotatorProps;\n  if (disableTransition) {\n    iconRotatorProps = {\n      animate: false,\n      ...propIconRotatorProps,\n    };\n  }\n\n  let floating: FABPosition = null;\n  if (!menuitem) {\n    ({ floating = null } = props as DropdownMenuButtonProps);\n  }\n\n  const [visible, setVisible] = useState(false);\n  const { menuRef, menuProps, toggleRef, toggleProps } = useMenu<\n    HTMLButtonElement | HTMLLIElement\n  >({\n    baseId: id,\n    visible,\n    setVisible,\n    disabled,\n    menuLabel,\n    horizontal,\n    onToggleClick: onClick,\n    onToggleKeyDown: onKeyDown,\n    onToggleMouseEnter: onMouseEnter,\n    onToggleMouseLeave: onMouseLeave,\n    onMenuClick: propMenuProps?.onClick,\n    onMenuKeyDown: propMenuProps?.onKeyDown,\n    floating,\n    onEnter,\n    onEntering,\n    onEntered,\n    onExited,\n    anchor,\n    style: menuStyle,\n    fixedPositionOptions,\n    getFixedPositionOptions,\n    menuitem: !root && menuitem,\n    preventScroll,\n    closeOnResize,\n    closeOnScroll,\n    disableFocusOnMount,\n    disableFocusOnUnmount,\n  });\n\n  let toggle: ReactElement;\n  if (menuitem) {\n    // see `DropdownMenuProps` about this typecast\n    const { buttonChildren, ...itemProps } = props as DropdownMenuItemProps;\n    toggle = (\n      <MenuItemButton\n        {...itemProps}\n        iconRotatorProps={iconRotatorProps}\n        {...toggleProps}\n        ref={toggleRef as RefObject<HTMLLIElement>}\n        visible={visible}\n      >\n        {buttonChildren}\n      </MenuItemButton>\n    );\n  } else {\n    // see `DropdownMenuProps` about this typecast\n    const { buttonChildren, ...buttonProps } = props as DropdownMenuButtonProps;\n    toggle = (\n      <MenuButton\n        {...buttonProps}\n        iconRotatorProps={iconRotatorProps}\n        {...toggleProps}\n        ref={toggleRef as RefObject<HTMLButtonElement>}\n        visible={visible}\n      >\n        {buttonChildren}\n      </MenuButton>\n    );\n  }\n\n  return (\n    <MenuVisibilityProvider visible={visible} setVisible={setVisible}>\n      {toggle}\n      <MenuRenderer\n        {...menuProps}\n        menuRef={menuRef}\n        menuProps={propMenuProps}\n        menuStyle={menuProps.style}\n        menuClassName={menuClassName}\n        sheetProps={sheetProps}\n        sheetStyle={sheetStyle}\n        sheetClassName={sheetClassName}\n        sheetMenuProps={sheetMenuProps}\n        sheetHeader={sheetHeader}\n        sheetFooter={sheetFooter}\n        sheetPosition={sheetPosition}\n        sheetVerticalSize={sheetVerticalSize}\n        listStyle={listStyle}\n        listClassName={listClassName}\n        listProps={listProps}\n        onRequestClose={() => setVisible(false)}\n        horizontal={horizontal}\n        renderAsSheet={renderAsSheet}\n        temporary={temporary}\n        portal={portal}\n        portalInto={portalInto}\n        portalIntoId={portalIntoId}\n        appear={appear}\n        enter={enter}\n        exit={exit}\n        onExit={onExit}\n        onExiting={onExiting}\n        timeout={timeout}\n        classNames={classNames}\n      >\n        {children}\n      </MenuRenderer>\n    </MenuVisibilityProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}