{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport { bem } from \"@react-md/utils\";\nvar block = bem(\"rmd-card\");\n/**\n * The main content for the `Card`. This adds some additional padding and removes\n * margin from `<p>` tags by default.\n */\n\nexport var CardContent = forwardRef(function CardContent(_a, ref) {\n  var _b = _a.disablePadding,\n      disablePadding = _b === void 0 ? false : _b,\n      _c = _a.disableExtraPadding,\n      disableExtraPadding = _c === void 0 ? false : _c,\n      _d = _a.disableSecondaryColor,\n      disableSecondaryColor = _d === void 0 ? false : _d,\n      _e = _a.disableParagraphMargin,\n      disableParagraphMargin = _e === void 0 ? false : _e,\n      className = _a.className,\n      children = _a.children,\n      props = __rest(_a, [\"disablePadding\", \"disableExtraPadding\", \"disableSecondaryColor\", \"disableParagraphMargin\", \"className\", \"children\"]);\n\n  return _jsx(\"div\", __assign({}, props, {\n    ref: ref,\n    className: cn(block(\"content\", {\n      padded: !disablePadding,\n      \"extra-padding\": !disablePadding && !disableExtraPadding,\n      \"remove-margin\": !disableParagraphMargin,\n      secondary: !disableSecondaryColor\n    }), className)\n  }, {\n    children: children\n  }));\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AACA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,SAASC,GAAT,QAAoB,iBAApB;AAgCA,IAAMC,KAAK,GAAGD,GAAG,CAAC,UAAD,CAAjB;AAEA;;;;;AAIA,OAAO,IAAME,WAAW,GAAGJ,UAAU,CACnC,SAASI,WAAT,CACEC,EADF,EAUEC,GAVF,EAUK;EARD;EAAA,kBAAc,mBAAG,KAAH,GAAQC,EAAtB;EAAA,IACAC,2BADA;EAAA,IACAC,mBAAmB,mBAAG,KAAH,GAAQD,EAD3B;EAAA,IAEAE,6BAFA;EAAA,IAEAC,qBAAqB,mBAAG,KAAH,GAAQD,EAF7B;EAAA,IAGAE,8BAHA;EAAA,IAGAC,sBAAsB,mBAAG,KAAH,GAAQD,EAH9B;EAAA,IAIAE,SAAS,eAJT;EAAA,IAKAC,QAAQ,cALR;EAAA,IAMGC,KAAK,cAPV,qHAOU,CANR;;EAUF,OACEC,yBACMD,KADN,EACW;IACTV,GAAG,EAAEA,GADI;IAETQ,SAAS,EAAEb,EAAE,CACXE,KAAK,CAAC,SAAD,EAAY;MACfe,MAAM,EAAE,CAACC,cADM;MAEf,iBAAiB,CAACA,cAAD,IAAmB,CAACV,mBAFtB;MAGf,iBAAiB,CAACI,sBAHH;MAIfO,SAAS,EAAE,CAACT;IAJG,CAAZ,CADM,EAOXG,SAPW;EAFJ,CADX,EAWG;IAAAC,UAEAA;EAFA,CAXH,EADF;AAiBD,CA9BkC,CAA9B","names":["forwardRef","cn","bem","block","CardContent","_a","ref","_b","_c","disableExtraPadding","_d","disableSecondaryColor","_e","disableParagraphMargin","className","children","props","_jsx","padded","disablePadding","secondary"],"sources":["C:\\Users\\hungr\\Documents\\VS-CODE\\notes-react\\node_modules\\@react-md\\card\\src\\CardContent.tsx"],"sourcesContent":["import type { HTMLAttributes } from \"react\";\nimport { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport { bem } from \"@react-md/utils\";\n\nexport interface CardContentProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * Boolean if the padding should be removed from the content. This is really\n   * only useful if your child elements have their own padding.\n   */\n  disablePadding?: boolean;\n\n  /**\n   * Boolean if the extra `padding-bottom` that gets applied when the\n   * `CardContent` is the last component within the `Card`. If the\n   * `disablePadding` prop is enabled, this prop will be ignored and the extra\n   * padding will not be applied.\n   */\n  disableExtraPadding?: boolean;\n\n  /**\n   * Boolean if the current secondary text color should be disabled from the\n   * content.\n   */\n  disableSecondaryColor?: boolean;\n\n  /**\n   * Boolean if any `<p>` tags that appear as children of this component should\n   * no longer have their `margin-top` and `margin-bottom` removed. The default\n   * behavior is to remove all `margin-top` and remove the `margin-bottom` if\n   * the `<p>` is the last child.\n   */\n  disableParagraphMargin?: boolean;\n}\n\nconst block = bem(\"rmd-card\");\n\n/**\n * The main content for the `Card`. This adds some additional padding and removes\n * margin from `<p>` tags by default.\n */\nexport const CardContent = forwardRef<HTMLDivElement, CardContentProps>(\n  function CardContent(\n    {\n      disablePadding = false,\n      disableExtraPadding = false,\n      disableSecondaryColor = false,\n      disableParagraphMargin = false,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) {\n    return (\n      <div\n        {...props}\n        ref={ref}\n        className={cn(\n          block(\"content\", {\n            padded: !disablePadding,\n            \"extra-padding\": !disablePadding && !disableExtraPadding,\n            \"remove-margin\": !disableParagraphMargin,\n            secondary: !disableSecondaryColor,\n          }),\n          className\n        )}\n      >\n        {children}\n      </div>\n    );\n  }\n);\n"]},"metadata":{},"sourceType":"module"}