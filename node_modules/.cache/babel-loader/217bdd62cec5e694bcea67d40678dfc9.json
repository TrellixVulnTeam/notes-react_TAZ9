{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport { bem } from \"@react-md/utils\";\nimport { DEFAULT_SLIDER_ANIMATION_TIME, DEFAULT_SLIDER_GET_VALUE_TEXT, DEFAULT_SLIDER_MAX, DEFAULT_SLIDER_MIN } from \"./constants\";\nimport { SliderValue } from \"./SliderValue\";\nimport { useDiscreteValueVisibility } from \"./useDiscreteValueVisibility\";\nvar styles = bem(\"rmd-slider-thumb\");\n/**\n * The slider thumb implements the `role=\"slider\"` for the `Slider` and\n * `RangeSlider` components.\n *\n * @remarks \\@since 2.5.0\n */\n\nexport var SliderThumb = forwardRef(function SliderThumb(_a, ref) {\n  var propId = _a.id,\n      baseId = _a.baseId,\n      className = _a.className,\n      _b = _a.min,\n      min = _b === void 0 ? DEFAULT_SLIDER_MIN : _b,\n      _c = _a.max,\n      max = _c === void 0 ? DEFAULT_SLIDER_MAX : _c,\n      _d = _a.animationDuration,\n      animationDuration = _d === void 0 ? DEFAULT_SLIDER_ANIMATION_TIME : _d,\n      _e = _a.getValueText,\n      getValueText = _e === void 0 ? DEFAULT_SLIDER_GET_VALUE_TEXT : _e,\n      name = _a.name,\n      value = _a.value,\n      index = _a.index,\n      _f = _a.active,\n      active = _f === void 0 ? false : _f,\n      _g = _a.animate,\n      animate = _g === void 0 ? false : _g,\n      _h = _a.discrete,\n      discrete = _h === void 0 ? false : _h,\n      _j = _a.disabled,\n      disabled = _j === void 0 ? false : _j,\n      _k = _a.vertical,\n      vertical = _k === void 0 ? false : _k,\n      _l = _a.tabIndex,\n      tabIndex = _l === void 0 ? disabled ? -1 : 0 : _l,\n      propOnBlur = _a.onBlur,\n      propOnFocus = _a.onFocus,\n      props = __rest(_a, [\"id\", \"baseId\", \"className\", \"min\", \"max\", \"animationDuration\", \"getValueText\", \"name\", \"value\", \"index\", \"active\", \"animate\", \"discrete\", \"disabled\", \"vertical\", \"tabIndex\", \"onBlur\", \"onFocus\"]);\n\n  var id = propId || \"\".concat(baseId, \"-thumb-\").concat(index + 1);\n  var isFirst = index === 0;\n\n  var _m = useDiscreteValueVisibility({\n    active: active,\n    animate: animate,\n    discrete: discrete,\n    disabled: disabled,\n    onBlur: propOnBlur,\n    onFocus: propOnFocus,\n    animationDuration: animationDuration\n  }),\n      onBlur = _m.onBlur,\n      onFocus = _m.onFocus,\n      animateValue = _m.animateValue,\n      visible = _m.visible;\n\n  var styleOptions = {\n    h: !vertical,\n    h1: !vertical && isFirst,\n    h2: !vertical && !isFirst,\n    v: vertical,\n    v1: vertical && isFirst,\n    v2: vertical && !isFirst,\n    active: active,\n    animate: animate,\n    disabled: disabled\n  };\n  return _jsxs(_Fragment, {\n    children: [disabled && _jsx(\"span\", {\n      className: cn(styles(__assign(__assign({}, styleOptions), {\n        mask: true,\n        \"mask-h\": !vertical,\n        \"mask-v\": vertical\n      })), className)\n    }), _jsx(\"span\", __assign({}, props, {\n      id: id,\n      ref: ref,\n      role: \"slider\",\n      \"aria-valuemin\": min,\n      \"aria-valuemax\": max,\n      \"aria-valuenow\": value,\n      \"aria-valuetext\": getValueText(value) || undefined,\n      \"aria-disabled\": disabled || undefined,\n      \"aria-orientation\": vertical && \"vertical\" || undefined,\n      tabIndex: tabIndex,\n      onBlur: onBlur,\n      onFocus: onFocus,\n      className: cn(styles(__assign(__assign({}, styleOptions), {\n        \"disabled-h\": disabled && !vertical,\n        \"disabled-v\": disabled && vertical\n      })), className)\n    })), _jsx(\"input\", {\n      id: \"\".concat(id, \"-value\"),\n      type: \"hidden\",\n      name: name,\n      value: value\n    }), _jsx(SliderValue, __assign({\n      id: \"\".concat(id, \"-value\"),\n      visible: visible,\n      index: index,\n      animate: animateValue,\n      discrete: discrete,\n      vertical: vertical\n    }, {\n      children: value\n    }))]\n  });\n});","map":{"version":3,"mappings":"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","names":["forwardRef","cn","bem","DEFAULT_SLIDER_ANIMATION_TIME","DEFAULT_SLIDER_GET_VALUE_TEXT","DEFAULT_SLIDER_MAX","DEFAULT_SLIDER_MIN","SliderValue","useDiscreteValueVisibility","styles","SliderThumb","_a","ref","propId","baseId","className","_b","min","_c","max","_d","animationDuration","_e","getValueText","name","value","index","_f","active","_g","animate","_h","discrete","_j","disabled","_k","vertical","_l","tabIndex","propOnBlur","propOnFocus","props","id","concat","isFirst","onBlur","onFocus","animateValue","visible","styleOptions","h","h1","h2","v","v1","v2","_jsxs","children","_jsx","mask","role","undefined","type","__assign"],"sources":["C:\\Users\\hungr\\Documents\\VS-CODE\\notes-react\\node_modules\\@react-md\\form\\src\\slider\\SliderThumb.tsx"],"sourcesContent":["import type { HTMLAttributes } from \"react\";\nimport { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport type { LabelRequiredForA11y } from \"@react-md/utils\";\nimport { bem } from \"@react-md/utils\";\n\nimport {\n  DEFAULT_SLIDER_ANIMATION_TIME,\n  DEFAULT_SLIDER_GET_VALUE_TEXT,\n  DEFAULT_SLIDER_MAX,\n  DEFAULT_SLIDER_MIN,\n} from \"./constants\";\nimport { SliderValue } from \"./SliderValue\";\nimport type { SliderThumbOptions, ThumbIndex } from \"./types\";\nimport { useDiscreteValueVisibility } from \"./useDiscreteValueVisibility\";\n\nconst styles = bem(\"rmd-slider-thumb\");\n\n/**\n * @remarks \\@since 2.5.0\n */\nexport interface BaseThumbProps\n  extends HTMLAttributes<HTMLSpanElement>,\n    SliderThumbOptions {\n  /**\n   * The index of the thumb which is used for some additional styling\n   * behavior.\n   */\n  index: ThumbIndex;\n\n  /**\n   * The current value for the slider.\n   */\n  value: number;\n\n  /**\n   * An optional name to apply to the hidden input field representing the value\n   * of the slider.\n   */\n  name?: string;\n\n  /**\n   * The prefix to use for the id of the thumb. When the `id` prop is omitted,\n   * the `id` for this component will be created by `${baseId}-thumb-${index + 1}`.\n   *\n   * Either the `id` or `baseId` props are required for a11y.\n   */\n  baseId?: string;\n\n  /**\n   * Boolean if the thumb is currently in an active state which will add a\n   * \"bubble\" around the thumb.\n   */\n  active?: boolean;\n\n  /**\n   * Boolean if the thumb should animate between positions when the `value`\n   * changes. This should normally be set to `false` while dragging the thumb\n   * since it'll make it look like the thumb is lagging behind the mouse cursor\n   * or user's finger.\n   */\n  animate?: boolean;\n}\n\n/**\n * @remarks \\@since 2.5.0\n */\nexport type SliderThumbProps = LabelRequiredForA11y<BaseThumbProps>;\n\n/**\n * The slider thumb implements the `role=\"slider\"` for the `Slider` and\n * `RangeSlider` components.\n *\n * @remarks \\@since 2.5.0\n */\nexport const SliderThumb = forwardRef<HTMLSpanElement, SliderThumbProps>(\n  function SliderThumb(\n    {\n      id: propId,\n      baseId,\n      className,\n      min = DEFAULT_SLIDER_MIN,\n      max = DEFAULT_SLIDER_MAX,\n      animationDuration = DEFAULT_SLIDER_ANIMATION_TIME,\n      getValueText = DEFAULT_SLIDER_GET_VALUE_TEXT,\n      name,\n      value,\n      index,\n      active = false,\n      animate = false,\n      discrete = false,\n      disabled = false,\n      vertical = false,\n      tabIndex = disabled ? -1 : 0,\n      onBlur: propOnBlur,\n      onFocus: propOnFocus,\n      ...props\n    },\n    ref\n  ) {\n    const id = propId || `${baseId}-thumb-${index + 1}`;\n    const isFirst = index === 0;\n    const { onBlur, onFocus, animateValue, visible } =\n      useDiscreteValueVisibility({\n        active,\n        animate,\n        discrete,\n        disabled,\n        onBlur: propOnBlur,\n        onFocus: propOnFocus,\n        animationDuration,\n      });\n\n    const styleOptions = {\n      h: !vertical,\n      h1: !vertical && isFirst,\n      h2: !vertical && !isFirst,\n      v: vertical,\n      v1: vertical && isFirst,\n      v2: vertical && !isFirst,\n      active,\n      animate,\n      disabled,\n    };\n\n    return (\n      <>\n        {/* this mask adds the spacing on the track when disabled */}\n        {disabled && (\n          <span\n            className={cn(\n              styles({\n                ...styleOptions,\n                mask: true,\n                \"mask-h\": !vertical,\n                \"mask-v\": vertical,\n              }),\n              className\n            )}\n          />\n        )}\n        <span\n          {...props}\n          id={id}\n          ref={ref}\n          role=\"slider\"\n          aria-valuemin={min}\n          aria-valuemax={max}\n          aria-valuenow={value}\n          aria-valuetext={getValueText(value) || undefined}\n          aria-disabled={disabled || undefined}\n          aria-orientation={(vertical && \"vertical\") || undefined}\n          tabIndex={tabIndex}\n          onBlur={onBlur}\n          onFocus={onFocus}\n          className={cn(\n            styles({\n              ...styleOptions,\n              \"disabled-h\": disabled && !vertical,\n              \"disabled-v\": disabled && vertical,\n            }),\n            className\n          )}\n        />\n        <input id={`${id}-value`} type=\"hidden\" name={name} value={value} />\n        <SliderValue\n          id={`${id}-value`}\n          visible={visible}\n          index={index}\n          animate={animateValue}\n          discrete={discrete}\n          vertical={vertical}\n        >\n          {value}\n        </SliderValue>\n      </>\n    );\n  }\n);\n"]},"metadata":{},"sourceType":"module"}