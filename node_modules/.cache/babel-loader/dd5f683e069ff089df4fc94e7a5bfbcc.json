{"ast":null,"code":"var warnedOnce = false;\n/**\n * A \"reasonable\" default implementation for the getItemValue prop on a tree\n * that will warn about items that are not keyboard searchable in non-production\n * environments.\n *\n * @internal\n */\n\nexport function defaultGetItemValue(item, valueKey) {\n  var result = item[valueKey];\n\n  if (process.env.NODE_ENV !== \"production\") {\n    var type = typeof result;\n\n    if (!warnedOnce && type !== \"string\" && type !== \"number\") {\n      warnedOnce = true;\n      /* eslint-disable no-console */\n\n      console.warn(\"Unable to extract a string or number from an item within the tree for the item:\");\n      console.warn(item);\n      console.warn(\"\");\n      console.warn(\"This will make the item unable to be searched by typing within the tree and should be fixed before pushing to production.\");\n      console.warn(new Error().stack);\n    }\n  }\n\n  return \"\".concat(result);\n}","map":{"version":3,"mappings":"AAEA,IAAIA,UAAU,GAAG,KAAjB;AAEA;;;;;;;;AAOA,OAAM,SAAUC,mBAAV,CACJC,IADI,EAEJC,QAFI,EAEY;EAEhB,IAAMC,MAAM,GAAGF,IAAI,CAACC,QAAD,CAAnB;;EACA,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;IACzC,IAAMC,IAAI,GAAG,OAAOJ,MAApB;;IACA,IAAI,CAACJ,UAAD,IAAeQ,IAAI,KAAK,QAAxB,IAAoCA,IAAI,KAAK,QAAjD,EAA2D;MACzDR,UAAU,GAAG,IAAb;MACA;;MACAS,OAAO,CAACC,IAAR,CACE,iFADF;MAGAD,OAAO,CAACC,IAAR,CAAaR,IAAb;MACAO,OAAO,CAACC,IAAR,CAAa,EAAb;MACAD,OAAO,CAACC,IAAR,CACE,2HADF;MAGAD,OAAO,CAACC,IAAR,CAAa,IAAIC,KAAJ,GAAYC,KAAzB;IACD;EACF;;EAED,OAAO,UAAGR,MAAH,CAAP;AACD","names":["warnedOnce","defaultGetItemValue","item","valueKey","result","process","env","NODE_ENV","type","console","warn","Error","stack"],"sources":["C:\\Users\\hungr\\Documents\\VS-CODE\\notes-react\\node_modules\\@react-md\\tree\\src\\defaultGetItemValue.ts"],"sourcesContent":["import type { UnknownTreeItem } from \"./types\";\n\nlet warnedOnce = false;\n\n/**\n * A \"reasonable\" default implementation for the getItemValue prop on a tree\n * that will warn about items that are not keyboard searchable in non-production\n * environments.\n *\n * @internal\n */\nexport function defaultGetItemValue(\n  item: UnknownTreeItem,\n  valueKey: string\n): string {\n  const result = item[valueKey];\n  if (process.env.NODE_ENV !== \"production\") {\n    const type = typeof result;\n    if (!warnedOnce && type !== \"string\" && type !== \"number\") {\n      warnedOnce = true;\n      /* eslint-disable no-console */\n      console.warn(\n        \"Unable to extract a string or number from an item within the tree for the item:\"\n      );\n      console.warn(item);\n      console.warn(\"\");\n      console.warn(\n        \"This will make the item unable to be searched by typing within the tree and should be fixed before pushing to production.\"\n      );\n      console.warn(new Error().stack);\n    }\n  }\n\n  return `${result}`;\n}\n"]},"metadata":{},"sourceType":"module"}