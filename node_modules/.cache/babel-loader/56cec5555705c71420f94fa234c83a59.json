{"ast":null,"code":"import { createContext, useContext } from \"react\";\n/**\n * @remarks \\@since 5.0.0\n * @internal\n */\n\nvar noop = function () {\n  if (process.env.NODE_ENV !== \"production\") {\n    throw new Error(\"KeyboardMovementProvider must be a parent component.\");\n  }\n};\n/**\n * Most custom keyboard functionality use these keys.\n *\n * @remarks \\@since 5.0.0\n * @internal\n */\n\n\nexport var DEFAULT_KEYBOARD_MOVEMENT = {\n  incrementKeys: [\"ArrowDown\"],\n  decrementKeys: [\"ArrowUp\"],\n  jumpToFirstKeys: [\"Home\"],\n  jumpToLastKeys: [\"End\"]\n};\n/**\n * @remarks \\@since 5.1.2\n * @internal\n */\n\nexport var DEFAULT_LTR_KEYBOARD_MOVEMENT = {\n  incrementKeys: [\"ArrowRight\"],\n  decrementKeys: [\"ArrowLeft\"],\n  jumpToFirstKeys: [\"Home\"],\n  jumpToLastKeys: [\"End\"]\n};\n/**\n * @remarks \\@since 5.1.2\n * @internal\n */\n\nexport var DEFAULT_RTL_KEYBOARD_MOVEMENT = {\n  incrementKeys: [\"ArrowLeft\"],\n  decrementKeys: [\"ArrowRight\"],\n  jumpToFirstKeys: [\"Home\"],\n  jumpToLastKeys: [\"End\"]\n};\n/**\n * @remarks \\@since 5.0.0\n * @internal\n */\n\nvar context = createContext({\n  attach: noop,\n  detach: noop,\n  watching: {\n    current: []\n  },\n  loopable: false,\n  searchable: false,\n  horizontal: false,\n  includeDisabled: false,\n  config: {\n    current: DEFAULT_KEYBOARD_MOVEMENT\n  }\n});\ncontext.displayName = \"KeyboardMovement\";\n/**\n * @remarks \\@since 5.0.0\n * @internal\n */\n\nexport var KeyboardMovementContextProvider = context.Provider;\n/**\n * @remarks \\@since 5.0.0\n * @internal\n */\n\nexport function useKeyboardFocusContext() {\n  return useContext(context);\n}","map":{"version":3,"mappings":"AAAA,SAASA,aAAT,EAAwBC,UAAxB,QAA0C,OAA1C;AAIA;;;;;AAIA,IAAMC,IAAI,GAAG;EACX,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;IACzC,MAAM,IAAIC,KAAJ,CAAU,sDAAV,CAAN;EACD;AACF,CAJD;AAMA;;;;;;;;AAMA,OAAO,IAAMC,yBAAyB,GAAqC;EACzEC,aAAa,EAAE,CAAC,WAAD,CAD0D;EAEzEC,aAAa,EAAE,CAAC,SAAD,CAF0D;EAGzEC,eAAe,EAAE,CAAC,MAAD,CAHwD;EAIzEC,cAAc,EAAE,CAAC,KAAD;AAJyD,CAApE;AAOP;;;;;AAIA,OAAO,IAAMC,6BAA6B,GAAqC;EAC7EJ,aAAa,EAAE,CAAC,YAAD,CAD8D;EAE7EC,aAAa,EAAE,CAAC,WAAD,CAF8D;EAG7EC,eAAe,EAAE,CAAC,MAAD,CAH4D;EAI7EC,cAAc,EAAE,CAAC,KAAD;AAJ6D,CAAxE;AAOP;;;;;AAIA,OAAO,IAAME,6BAA6B,GAAqC;EAC7EL,aAAa,EAAE,CAAC,WAAD,CAD8D;EAE7EC,aAAa,EAAE,CAAC,YAAD,CAF8D;EAG7EC,eAAe,EAAE,CAAC,MAAD,CAH4D;EAI7EC,cAAc,EAAE,CAAC,KAAD;AAJ6D,CAAxE;AAOP;;;;;AAIA,IAAMG,OAAO,GAAGd,aAAa,CAAuB;EAClDe,MAAM,EAAEb,IAD0C;EAElDc,MAAM,EAAEd,IAF0C;EAGlDe,QAAQ,EAAE;IAAEC,OAAO,EAAE;EAAX,CAHwC;EAIlDC,QAAQ,EAAE,KAJwC;EAKlDC,UAAU,EAAE,KALsC;EAMlDC,UAAU,EAAE,KANsC;EAOlDC,eAAe,EAAE,KAPiC;EAQlDC,MAAM,EAAE;IAAEL,OAAO,EAAEX;EAAX;AAR0C,CAAvB,CAA7B;AAUAO,OAAO,CAACU,WAAR,GAAsB,kBAAtB;AAEA;;;;;AAIA,OAAe,IAAUC,+BAA+B,GAAKX,OAAO,SAArD;AAEf;;;;;AAIA,OAAM,SAAUY,uBAAV,GAAiC;EACrC,OAAOzB,UAAU,CAACa,OAAD,CAAjB;AACD","names":["createContext","useContext","noop","process","env","NODE_ENV","Error","DEFAULT_KEYBOARD_MOVEMENT","incrementKeys","decrementKeys","jumpToFirstKeys","jumpToLastKeys","DEFAULT_LTR_KEYBOARD_MOVEMENT","DEFAULT_RTL_KEYBOARD_MOVEMENT","context","attach","detach","watching","current","loopable","searchable","horizontal","includeDisabled","config","displayName","KeyboardMovementContextProvider","useKeyboardFocusContext"],"sources":["C:\\Users\\hungr\\Documents\\VS-CODE\\notes-react\\node_modules\\@react-md\\utils\\src\\keyboardMovement\\movementContext.ts"],"sourcesContent":["import { createContext, useContext } from \"react\";\n\nimport type { KeyboardFocusContext, KeyboardMovementConfig } from \"./types\";\n\n/**\n * @remarks \\@since 5.0.0\n * @internal\n */\nconst noop = (): void => {\n  if (process.env.NODE_ENV !== \"production\") {\n    throw new Error(\"KeyboardMovementProvider must be a parent component.\");\n  }\n};\n\n/**\n * Most custom keyboard functionality use these keys.\n *\n * @remarks \\@since 5.0.0\n * @internal\n */\nexport const DEFAULT_KEYBOARD_MOVEMENT: Readonly<KeyboardMovementConfig> = {\n  incrementKeys: [\"ArrowDown\"],\n  decrementKeys: [\"ArrowUp\"],\n  jumpToFirstKeys: [\"Home\"],\n  jumpToLastKeys: [\"End\"],\n};\n\n/**\n * @remarks \\@since 5.1.2\n * @internal\n */\nexport const DEFAULT_LTR_KEYBOARD_MOVEMENT: Readonly<KeyboardMovementConfig> = {\n  incrementKeys: [\"ArrowRight\"],\n  decrementKeys: [\"ArrowLeft\"],\n  jumpToFirstKeys: [\"Home\"],\n  jumpToLastKeys: [\"End\"],\n};\n\n/**\n * @remarks \\@since 5.1.2\n * @internal\n */\nexport const DEFAULT_RTL_KEYBOARD_MOVEMENT: Readonly<KeyboardMovementConfig> = {\n  incrementKeys: [\"ArrowLeft\"],\n  decrementKeys: [\"ArrowRight\"],\n  jumpToFirstKeys: [\"Home\"],\n  jumpToLastKeys: [\"End\"],\n};\n\n/**\n * @remarks \\@since 5.0.0\n * @internal\n */\nconst context = createContext<KeyboardFocusContext>({\n  attach: noop,\n  detach: noop,\n  watching: { current: [] },\n  loopable: false,\n  searchable: false,\n  horizontal: false,\n  includeDisabled: false,\n  config: { current: DEFAULT_KEYBOARD_MOVEMENT },\n});\ncontext.displayName = \"KeyboardMovement\";\n\n/**\n * @remarks \\@since 5.0.0\n * @internal\n */\nexport const { Provider: KeyboardMovementContextProvider } = context;\n\n/**\n * @remarks \\@since 5.0.0\n * @internal\n */\nexport function useKeyboardFocusContext(): Readonly<KeyboardFocusContext> {\n  return useContext(context);\n}\n"]},"metadata":{},"sourceType":"module"}