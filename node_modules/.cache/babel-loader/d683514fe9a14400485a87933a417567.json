{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useRippleTransition } from \"./reducer\";\nimport { RippleContainer } from \"./RippleContainer\";\nimport { useRippleHandlers } from \"./useRippleHandlers\";\n/**\n * A hook that will return an object containing the ripples element\n * and an object of event handlers to apply to an element to trigger\n * the ripple effects.\n */\n\nexport function useRipples(_a) {\n  var rippleTimeout = _a.rippleTimeout,\n      rippleClassNames = _a.rippleClassNames,\n      rippleContainerClassName = _a.rippleContainerClassName,\n      rippleClassName = _a.rippleClassName,\n      disableRipple = _a.disableRipple,\n      disableSpacebarClick = _a.disableSpacebarClick,\n      options = __rest(_a, [\"rippleTimeout\", \"rippleClassNames\", \"rippleContainerClassName\", \"rippleClassName\", \"disableRipple\", \"disableSpacebarClick\"]);\n\n  var _b = useRippleTransition(disableSpacebarClick),\n      create = _b.create,\n      state = _b.state,\n      release = _b.release,\n      entered = _b.entered,\n      remove = _b.remove,\n      cancel = _b.cancel;\n\n  var handlers = useRippleHandlers(__assign({\n    create: create,\n    release: release,\n    cancel: cancel,\n    disableRipple: disableRipple\n  }, options));\n  return {\n    handlers: handlers,\n    ripples: disableRipple ? null : _jsx(RippleContainer, {\n      ripples: state,\n      className: rippleContainerClassName,\n      rippleClassName: rippleClassName,\n      timeout: rippleTimeout,\n      classNames: rippleClassNames,\n      entered: entered,\n      exited: remove\n    }, \"ripples\")\n  };\n}","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,SAASA,mBAAT,QAAoC,WAApC;AACA,SAASC,eAAT,QAAgC,mBAAhC;AAEA,SAASC,iBAAT,QAAkC,qBAAlC;AAOA;;;;;;AAKA,OAAM,SAAUC,UAAV,CAA0DC,EAA1D,EAQc;EAPlB,iBAAa,mBAAb;EAAA,IACAC,gBAAgB,sBADhB;EAAA,IAEAC,wBAAwB,8BAFxB;EAAA,IAGAC,eAAe,qBAHf;EAAA,IAIAC,aAAa,mBAJb;EAAA,IAKAC,oBAAoB,0BALpB;EAAA,IAMGC,OAAO,cAPoD,6HAOpD,CANV;;EAQM,SACJV,mBAAmB,CAACS,oBAAD,CADf;EAAA,IAAEE,MAAM,YAAR;EAAA,IAAUC,KAAK,WAAf;EAAA,IAAiBC,OAAO,aAAxB;EAAA,IAA0BC,OAAO,aAAjC;EAAA,IAAmCC,MAAM,YAAzC;EAAA,IAA2CC,MAAM,YAAjD;;EAEN,IAAMC,QAAQ,GAAGf,iBAAiB;IAChCS,MAAM,QAD0B;IAEhCE,OAAO,SAFyB;IAGhCG,MAAM,QAH0B;IAIhCR,aAAa;EAJmB,GAK7BE,OAL6B,EAAlC;EAQA,OAAO;IACLO,QAAQ,UADH;IAELC,OAAO,EAAEV,aAAa,GAAG,IAAH,GACpBW,KAAClB,eAAD,EAAgB;MAEdiB,OAAO,EAAEN,KAFK;MAGdQ,SAAS,EAAEd,wBAHG;MAIdC,eAAe,EAAEA,eAJH;MAKdc,OAAO,EAAEC,aALK;MAMdC,UAAU,EAAElB,gBANE;MAOdS,OAAO,EAAEA,OAPK;MAQdU,MAAM,EAAET;IARM,CAAhB,EACM,SADN;EAHG,CAAP;AAeD","names":["useRippleTransition","RippleContainer","useRippleHandlers","useRipples","_a","rippleClassNames","rippleContainerClassName","rippleClassName","disableRipple","disableSpacebarClick","options","create","state","release","entered","remove","cancel","handlers","ripples","_jsx","className","timeout","rippleTimeout","classNames","exited"],"sources":["C:\\Users\\hungr\\Documents\\VS-CODE\\notes-react\\node_modules\\@react-md\\states\\src\\ripples\\useRipples.tsx"],"sourcesContent":["import type { ReactNode } from \"react\";\n\nimport { useRippleTransition } from \"./reducer\";\nimport { RippleContainer } from \"./RippleContainer\";\nimport type { MergableRippleHandlers, RipplesOptions } from \"./types\";\nimport { useRippleHandlers } from \"./useRippleHandlers\";\n\ninterface ReturnValue<E extends HTMLElement> {\n  handlers: MergableRippleHandlers<E>;\n  ripples: ReactNode;\n}\n\n/**\n * A hook that will return an object containing the ripples element\n * and an object of event handlers to apply to an element to trigger\n * the ripple effects.\n */\nexport function useRipples<E extends HTMLElement = HTMLElement>({\n  rippleTimeout,\n  rippleClassNames,\n  rippleContainerClassName,\n  rippleClassName,\n  disableRipple,\n  disableSpacebarClick,\n  ...options\n}: RipplesOptions<E>): ReturnValue<E> {\n  const { create, state, release, entered, remove, cancel } =\n    useRippleTransition(disableSpacebarClick);\n  const handlers = useRippleHandlers({\n    create,\n    release,\n    cancel,\n    disableRipple,\n    ...options,\n  });\n\n  return {\n    handlers,\n    ripples: disableRipple ? null : (\n      <RippleContainer\n        key=\"ripples\"\n        ripples={state}\n        className={rippleContainerClassName}\n        rippleClassName={rippleClassName}\n        timeout={rippleTimeout}\n        classNames={rippleClassNames}\n        entered={entered}\n        exited={remove}\n      />\n    ),\n  };\n}\n"]},"metadata":{},"sourceType":"module"}