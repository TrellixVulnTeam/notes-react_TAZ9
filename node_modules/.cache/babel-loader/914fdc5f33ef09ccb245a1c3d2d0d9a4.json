{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { createContext, useContext, useState } from \"react\";\nimport { List } from \"@react-md/list\";\nimport { useKeyboardFocus } from \"@react-md/utils\";\nimport { useMenuBarContext } from \"./MenuBarProvider\";\n/**\n * This context is used to implement the \"roving tab index\" behavior\n *\n * @internal\n * @remarks \\@since 5.0.0\n */\n\nvar context = createContext(\"\");\ncontext.displayName = \"MenuBarWidgetFocusId\";\nvar Provider = context.Provider;\n/** @remarks \\@since 5.0.0 */\n\nexport function useMenuBarWidgetFocusId() {\n  return useContext(context);\n}\n/**\n * This component implements the keyboard focus behavior for the `MenuBar`\n * component and probably shouldn't be used externally.\n *\n * @remarks \\@since 5.0.0\n */\n\nexport function MenuBarWidget(_a) {\n  var children = _a.children,\n      tabIndex = _a.tabIndex,\n      propOnFocus = _a.onFocus,\n      propOnKeyDown = _a.onKeyDown,\n      props = __rest(_a, [\"children\", \"tabIndex\", \"onFocus\", \"onKeyDown\"]);\n\n  var setActiveId = useMenuBarContext().setActiveId;\n\n  var _b = __read(useState(\"\"), 2),\n      focusId = _b[0],\n      setFocusId = _b[1];\n\n  var _c = useKeyboardFocus({\n    onFocus: propOnFocus,\n    onKeyDown: propOnKeyDown,\n    onFocusChange: function (element) {\n      element.focus();\n      setFocusId(element.id);\n      setActiveId(function (prevActiveId) {\n        return prevActiveId ? element.id : \"\";\n      });\n    }\n  }),\n      onFocus = _c.onFocus,\n      onKeyDown = _c.onKeyDown;\n\n  return _jsx(Provider, __assign({\n    value: focusId\n  }, {\n    children: _jsx(List, __assign({}, props, {\n      role: \"menubar\",\n      horizontal: true,\n      tabIndex: tabIndex !== null && tabIndex !== void 0 ? tabIndex : focusId ? -1 : 0,\n      onFocus: onFocus,\n      onKeyDown: onKeyDown\n    }, {\n      children: children\n    }))\n  }));\n}","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,QAApC,QAAoD,OAApD;AAEA,SAASC,IAAT,QAAqB,gBAArB;AAEA,SAASC,gBAAT,QAAiC,iBAAjC;AAEA,SAASC,iBAAT,QAAkC,mBAAlC;AAEA;;;;;;;AAMA,IAAMC,OAAO,GAAGN,aAAa,CAAC,EAAD,CAA7B;AACAM,OAAO,CAACC,WAAR,GAAsB,sBAAtB;AACQ,YAAQ,GAAKD,OAAO,SAApB;AAER;;AACA,OAAM,SAAUE,uBAAV,GAAiC;EACrC,OAAOP,UAAU,CAACK,OAAD,CAAjB;AACD;AAQD;;;;;;;AAMA,OAAM,SAAUG,aAAV,CAAwBC,EAAxB,EAMe;EALnB,YAAQ,cAAR;EAAA,IACAC,QAAQ,cADR;EAAA,IAESC,WAAW,aAFpB;EAAA,IAGWC,aAAa,eAHxB;EAAA,IAIGC,KAAK,cALoB,gDAKpB,CAJR;;EAMQ,eAAW,GAAKT,iBAAiB,GAAEU,WAAnC;;EACF,gBAAwBb,QAAQ,CAAC,EAAD,CAAhC,EAAoC,CAApC;EAAA,IAACc,OAAO,QAAR;EAAA,IAAUC,UAAU,QAApB;;EACA,SAAyBb,gBAAgB,CAAC;IAC9Cc,OAAO,EAAEN,WADqC;IAE9CO,SAAS,EAAEN,aAFmC;IAG9CO,aAAa,YAACC,OAAD,EAAQ;MACnBA,OAAO,CAACC,KAAR;MACAL,UAAU,CAACI,OAAO,CAACE,EAAT,CAAV;MACAR,WAAW,CAAC,UAACS,YAAD,EAAa;QAAK,OAACA,YAAY,GAAGH,OAAO,CAACE,EAAX,GAAgB,EAA7B;MAAgC,CAAnD,CAAX;IACD;EAP6C,CAAD,CAAzC;EAAA,IAAEL,OAAO,aAAT;EAAA,IAAWC,SAAS,eAApB;;EAUN,OACEM,KAACC,QAAD,EAASC;IAACC,KAAK,EAAEZ;EAAR,GAAe;IAAAa,UACtBJ,KAACtB,IAAD,EAAKwB,aACCb,KADD,EACM;MACTgB,IAAI,EAAC,SADI;MAETC,UAAU,MAFD;MAGTpB,QAAQ,EAAEA,QAAQ,SAAR,YAAQ,WAAR,cAAaK,OAAO,GAAG,CAAC,CAAJ,GAAQ,CAH7B;MAITE,OAAO,EAAEA,OAJA;MAKTC,SAAS,EAAEA;IALF,CADN,EAMiB;MAAAU,UAEnBA;IAFmB,CANjB,CAAL;EADsB,CAAf,CAAT,CADF;AAcD","names":["createContext","useContext","useState","List","useKeyboardFocus","useMenuBarContext","context","displayName","useMenuBarWidgetFocusId","MenuBarWidget","_a","tabIndex","propOnFocus","propOnKeyDown","props","setActiveId","focusId","setFocusId","onFocus","onKeyDown","onFocusChange","element","focus","id","prevActiveId","_jsx","Provider","__assign","value","children","role","horizontal"],"sources":["C:\\Users\\hungr\\Documents\\VS-CODE\\notes-react\\node_modules\\@react-md\\menu\\src\\MenuBarWidget.tsx"],"sourcesContent":["import type { ReactElement } from \"react\";\nimport { createContext, useContext, useState } from \"react\";\nimport type { ListProps } from \"@react-md/list\";\nimport { List } from \"@react-md/list\";\nimport type { LabelRequiredForA11y } from \"@react-md/utils\";\nimport { useKeyboardFocus } from \"@react-md/utils\";\n\nimport { useMenuBarContext } from \"./MenuBarProvider\";\n\n/**\n * This context is used to implement the \"roving tab index\" behavior\n *\n * @internal\n * @remarks \\@since 5.0.0\n */\nconst context = createContext(\"\");\ncontext.displayName = \"MenuBarWidgetFocusId\";\nconst { Provider } = context;\n\n/** @remarks \\@since 5.0.0 */\nexport function useMenuBarWidgetFocusId(): string {\n  return useContext(context);\n}\n\n/** @remarks \\@since 5.0.0 */\nexport type BaseMenuBarWidgetProps = Omit<ListProps, \"role\" | \"horizontal\">;\n\n/** @remarks \\@since 5.0.0 */\nexport type MenuBarWidgetProps = LabelRequiredForA11y<BaseMenuBarWidgetProps>;\n\n/**\n * This component implements the keyboard focus behavior for the `MenuBar`\n * component and probably shouldn't be used externally.\n *\n * @remarks \\@since 5.0.0\n */\nexport function MenuBarWidget({\n  children,\n  tabIndex,\n  onFocus: propOnFocus,\n  onKeyDown: propOnKeyDown,\n  ...props\n}: MenuBarWidgetProps): ReactElement {\n  const { setActiveId } = useMenuBarContext();\n  const [focusId, setFocusId] = useState(\"\");\n  const { onFocus, onKeyDown } = useKeyboardFocus({\n    onFocus: propOnFocus,\n    onKeyDown: propOnKeyDown,\n    onFocusChange(element) {\n      element.focus();\n      setFocusId(element.id);\n      setActiveId((prevActiveId) => (prevActiveId ? element.id : \"\"));\n    },\n  });\n\n  return (\n    <Provider value={focusId}>\n      <List\n        {...props}\n        role=\"menubar\"\n        horizontal\n        tabIndex={tabIndex ?? (focusId ? -1 : 0)}\n        onFocus={onFocus}\n        onKeyDown={onKeyDown}\n      >\n        {children}\n      </List>\n    </Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}