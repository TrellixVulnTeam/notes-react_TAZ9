{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { forwardRef } from \"react\";\n/**\n * This component offers no styles and probably shouldn't be used externally\n * since it is just rendered by the `RadioGroup` component.\n *\n * @remarks \\@since 2.7.0\n */\n\nexport var RadioWidget = forwardRef(function RadioGroupRadio(_a, ref) {\n  var checked = _a.checked,\n      children = _a.children,\n      props = __rest(_a, [\"checked\", \"children\"]);\n\n  return _jsx(\"span\", __assign({}, props, {\n    \"aria-checked\": checked,\n    ref: ref,\n    role: \"radio\"\n  }, {\n    children: children\n  }));\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AA4BA;;;;;;;AAMA,OAAO,IAAMC,WAAW,GAAGD,UAAU,CACnC,SAASE,eAAT,CAAyBC,EAAzB,EAA0DC,GAA1D,EAA6D;EAAlC,WAAO,aAAP;EAAA,IAASC,QAAQ,cAAjB;EAAA,IAAsBC,KAAK,cAA7B,uBAA6B,CAA3B;;EACzB,OACEC,0BAAUD,KAAV,EAAe;IAAA,gBAAgBE,OAAhB;IAAyBJ,GAAG,EAAEA,GAA9B;IAAmCK,IAAI,EAAC;EAAxC,CAAf,EAA8D;IAAAJ,UAC3DA;EAD2D,CAA9D,EADF;AAKD,CAPkC,CAA9B","names":["forwardRef","RadioWidget","RadioGroupRadio","_a","ref","children","props","_jsx","checked","role"],"sources":["C:\\Users\\hungr\\Documents\\VS-CODE\\notes-react\\node_modules\\@react-md\\utils\\src\\wia-aria\\radio\\RadioWidget.tsx"],"sourcesContent":["import { forwardRef } from \"react\";\nimport type { RadioWidgetAttributes } from \"./types\";\n\n/**\n * @remarks \\@since 2.7.0\n */\nexport interface RadioWidgetProps extends RadioWidgetAttributes {\n  /**\n   * An id to use for the item that is required for a11y. This should normally\n   * be handled and provided automatically by the `RadioGroup` component.\n   */\n  id: string;\n\n  /**\n   * Boolean if the radio is currently checked.\n   */\n  checked: boolean;\n\n  /**\n   * The current tab index for the item that should normally be handled\n   * automatically by the `RadioGroup` component. When there are no checked\n   * radio items or the item is checked, this should be `0`. Otherwise this\n   * should be set to `-1` so that it is shown that it can be focused but isn't\n   * included in the tab index flow.\n   */\n  tabIndex: 0 | -1;\n}\n\n/**\n * This component offers no styles and probably shouldn't be used externally\n * since it is just rendered by the `RadioGroup` component.\n *\n * @remarks \\@since 2.7.0\n */\nexport const RadioWidget = forwardRef<HTMLSpanElement, RadioWidgetProps>(\n  function RadioGroupRadio({ checked, children, ...props }, ref) {\n    return (\n      <span {...props} aria-checked={checked} ref={ref} role=\"radio\">\n        {children}\n      </span>\n    );\n  }\n);\n"]},"metadata":{},"sourceType":"module"}