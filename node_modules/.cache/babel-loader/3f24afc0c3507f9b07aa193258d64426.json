{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport { TextIconSpacing } from \"@react-md/icon\";\nimport { bem } from \"@react-md/utils\";\nimport { labelStyles } from \"../label\";\nvar styles = bem(\"rmd-slider-container\");\n/**\n * The `SliderContainer` component is mostly an internal component that is\n * built-in to the `Slider` and `RangeSlider` components to add addons to the\n * left or right of the `SliderTrack`. When vertical, it will add addons to the\n * bottom or top instead.\n *\n * @remarks \\@since 2.5.0\n */\n\nexport var SliderContainer = forwardRef(function SliderContainer(_a, ref) {\n  var className = _a.className,\n      beforeAddon = _a.beforeAddon,\n      afterAddon = _a.afterAddon,\n      children = _a.children,\n      _b = _a.vertical,\n      vertical = _b === void 0 ? false : _b,\n      label = _a.label,\n      labelId = _a.labelId,\n      labelProps = _a.labelProps,\n      _c = _a.disabled,\n      disabled = _c === void 0 ? false : _c,\n      props = __rest(_a, [\"className\", \"beforeAddon\", \"afterAddon\", \"children\", \"vertical\", \"label\", \"labelId\", \"labelProps\", \"disabled\"]);\n\n  return _jsxs(_Fragment, {\n    children: [label && _jsx(\"span\", __assign({}, labelProps, {\n      id: labelId,\n      className: cn(labelStyles({\n        disabled: disabled\n      }), labelProps === null || labelProps === void 0 ? void 0 : labelProps.className)\n    }, {\n      children: label\n    })), _jsx(\"div\", __assign({}, props, {\n      ref: ref,\n      className: cn(styles({\n        h: !vertical,\n        \"pad-left\": !vertical && !beforeAddon,\n        \"pad-right\": !vertical && !afterAddon,\n        \"pad-bottom\": vertical && !beforeAddon,\n        \"pad-top\": vertical && !afterAddon,\n        v: vertical\n      }), className)\n    }, {\n      children: _jsx(TextIconSpacing, __assign({\n        icon: beforeAddon,\n        stacked: vertical,\n        flexReverse: vertical\n      }, {\n        children: _jsx(TextIconSpacing, __assign({\n          icon: afterAddon,\n          iconAfter: true,\n          stacked: vertical,\n          flexReverse: vertical\n        }, {\n          children: children\n        }))\n      }))\n    }))]\n  });\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AACA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,SAASC,eAAT,QAAgC,gBAAhC;AACA,SAASC,GAAT,QAAoB,iBAApB;AAOA,SAASC,WAAT,QAA4B,UAA5B;AAEA,IAAMC,MAAM,GAAGF,GAAG,CAAC,sBAAD,CAAlB;AAwBA;;;;;;;;;AAQA,OAAO,IAAMG,eAAe,GAAGN,UAAU,CACvC,SAASM,eAAT,CACEC,EADF,EAaEC,GAbF,EAaK;EAXD,aAAS,eAAT;EAAA,IACAC,WAAW,iBADX;EAAA,IAEAC,UAAU,gBAFV;EAAA,IAGAC,QAAQ,cAHR;EAAA,IAIAC,gBAJA;EAAA,IAIAC,QAAQ,mBAAG,KAAH,GAAQD,EAJhB;EAAA,IAKAE,KAAK,WALL;EAAA,IAMAC,OAAO,aANP;EAAA,IAOAC,UAAU,gBAPV;EAAA,IAQAC,gBARA;EAAA,IAQAC,QAAQ,mBAAG,KAAH,GAAQD,EARhB;EAAA,IASGE,KAAK,cAVV,gHAUU,CATR;;EAaF,OACEC;IAAAT,WACGG,KAAK,IACJO,0BACML,UADN,EACgB;MACdM,EAAE,EAAEP,OADU;MAEdQ,SAAS,EAAEtB,EAAE,CAACG,WAAW,CAAC;QAAEc,QAAQ;MAAV,CAAD,CAAZ,EAA4BF,UAAU,SAAV,cAAU,WAAV,GAAU,MAAV,aAAU,CAAEO,SAAxC;IAFC,CADhB,EAGiE;MAAAZ,UAE9DG;IAF8D,CAHjE,EAFJ,EAUEO,yBACMF,KADN,EACW;MACTX,GAAG,EAAEA,GADI;MAETe,SAAS,EAAEtB,EAAE,CACXI,MAAM,CAAC;QACLmB,CAAC,EAAE,CAACX,QADC;QAEL,YAAY,CAACA,QAAD,IAAa,CAACJ,WAFrB;QAGL,aAAa,CAACI,QAAD,IAAa,CAACH,UAHtB;QAIL,cAAcG,QAAQ,IAAI,CAACJ,WAJtB;QAKL,WAAWI,QAAQ,IAAI,CAACH,UALnB;QAMLe,CAAC,EAAEZ;MANE,CAAD,CADK,EASXU,SATW;IAFJ,CADX,EAaG;MAAAZ,UAEDU,KAACnB,eAAD,EAAgBwB;QACdC,IAAI,EAAElB,WADQ;QAEdmB,OAAO,EAAEf,QAFK;QAGdgB,WAAW,EAAEhB;MAHC,GAGO;QAAAF,UAErBU,KAACnB,eAAD,EAAgBwB;UACdC,IAAI,EAAEjB,UADQ;UAEdoB,SAAS,MAFK;UAGdF,OAAO,EAAEf,QAHK;UAIdgB,WAAW,EAAEhB;QAJC,GAIO;UAAAF,UAEpBA;QAFoB,CAJP,CAAhB;MAFqB,CAHP,CAAhB;IAFC,CAbH,EAVF;EAAA,EADF;AA2CD,CA3DsC,CAAlC","names":["forwardRef","cn","TextIconSpacing","bem","labelStyles","styles","SliderContainer","_a","ref","beforeAddon","afterAddon","children","_b","vertical","label","labelId","labelProps","_c","disabled","props","_jsxs","_jsx","id","className","h","v","__assign","icon","stacked","flexReverse","iconAfter"],"sources":["C:\\Users\\hungr\\Documents\\VS-CODE\\notes-react\\node_modules\\@react-md\\form\\src\\slider\\SliderContainer.tsx"],"sourcesContent":["import type { HTMLAttributes } from \"react\";\nimport { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport { TextIconSpacing } from \"@react-md/icon\";\nimport { bem } from \"@react-md/utils\";\n\nimport type {\n  SliderAddons,\n  SliderLabelProps,\n  SliderPresentation,\n} from \"./types\";\nimport { labelStyles } from \"../label\";\n\nconst styles = bem(\"rmd-slider-container\");\n\n/**\n * @remarks \\@since 2.5.0\n */\nexport interface SliderContainerProps\n  extends HTMLAttributes<HTMLDivElement>,\n    SliderLabelProps,\n    SliderAddons,\n    Pick<SliderPresentation, \"vertical\"> {\n  /**\n   * This is _really_ only required when the `label` prop is also provided, but\n   * since this component is only really used internally for the `Slider` and\n   * `RangeSlider`, it is required since they always pass one in.\n   */\n  labelId: string;\n\n  /**\n   * Boolean if the `Slider` or `RangeSlider` are disabled so that the `label`\n   * can also be `disabled`.\n   */\n  disabled?: boolean;\n}\n\n/**\n * The `SliderContainer` component is mostly an internal component that is\n * built-in to the `Slider` and `RangeSlider` components to add addons to the\n * left or right of the `SliderTrack`. When vertical, it will add addons to the\n * bottom or top instead.\n *\n * @remarks \\@since 2.5.0\n */\nexport const SliderContainer = forwardRef<HTMLDivElement, SliderContainerProps>(\n  function SliderContainer(\n    {\n      className,\n      beforeAddon,\n      afterAddon,\n      children,\n      vertical = false,\n      label,\n      labelId,\n      labelProps,\n      disabled = false,\n      ...props\n    },\n    ref\n  ) {\n    return (\n      <>\n        {label && (\n          <span\n            {...labelProps}\n            id={labelId}\n            className={cn(labelStyles({ disabled }), labelProps?.className)}\n          >\n            {label}\n          </span>\n        )}\n        <div\n          {...props}\n          ref={ref}\n          className={cn(\n            styles({\n              h: !vertical,\n              \"pad-left\": !vertical && !beforeAddon,\n              \"pad-right\": !vertical && !afterAddon,\n              \"pad-bottom\": vertical && !beforeAddon,\n              \"pad-top\": vertical && !afterAddon,\n              v: vertical,\n            }),\n            className\n          )}\n        >\n          <TextIconSpacing\n            icon={beforeAddon}\n            stacked={vertical}\n            flexReverse={vertical}\n          >\n            <TextIconSpacing\n              icon={afterAddon}\n              iconAfter\n              stacked={vertical}\n              flexReverse={vertical}\n            >\n              {children}\n            </TextIconSpacing>\n          </TextIconSpacing>\n        </div>\n      </>\n    );\n  }\n);\n"]},"metadata":{},"sourceType":"module"}