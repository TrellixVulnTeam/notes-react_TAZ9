{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { forwardRef } from \"react\";\nimport { DEFAULT_SLIDER_ANIMATION_TIME, DEFAULT_SLIDER_GET_VALUE_TEXT } from \"./constants\";\nimport { SliderContainer } from \"./SliderContainer\";\nimport { SliderThumb } from \"./SliderThumb\";\nimport { SliderTrack } from \"./SliderTrack\";\nimport { useSliderControls } from \"./useSliderControls\";\n/**\n * The `Slider` component allows the user to select a single value from a range\n * of numbers. The functionality for controlling the value of this component is\n * provided by the `useSlider` hook.\n *\n * @remarks \\@since 2.5.0\n */\n\nexport var Slider = forwardRef(function Slider(_a, ref) {\n  var baseId = _a.baseId,\n      propTrackProps = _a.trackProps,\n      label = _a.label,\n      labelProps = _a.labelProps,\n      thumbLabel = _a.thumbLabel,\n      thumbLabelledBy = _a.thumbLabelledBy,\n      thumbProps = _a.thumbProps,\n      min = _a.min,\n      max = _a.max,\n      step = _a.step,\n      _b = _a.discrete,\n      discrete = _b === void 0 ? false : _b,\n      _c = _a.disabled,\n      disabled = _c === void 0 ? false : _c,\n      _d = _a.vertical,\n      vertical = _d === void 0 ? false : _d,\n      onBlur = _a.onBlur,\n      onMouseDown = _a.onMouseDown,\n      onTouchStart = _a.onTouchStart,\n      _e = _a.getValueText,\n      getValueText = _e === void 0 ? DEFAULT_SLIDER_GET_VALUE_TEXT : _e,\n      _f = _a.animationDuration,\n      animationDuration = _f === void 0 ? DEFAULT_SLIDER_ANIMATION_TIME : _f,\n      value = _a.value,\n      minimum = _a.minimum,\n      maximum = _a.maximum,\n      increment = _a.increment,\n      incrementJump = _a.incrementJump,\n      decrement = _a.decrement,\n      decrementJump = _a.decrementJump,\n      persist = _a.persist,\n      setValue = _a.setValue,\n      props = __rest(_a, [\"baseId\", \"trackProps\", \"label\", \"labelProps\", \"thumbLabel\", \"thumbLabelledBy\", \"thumbProps\", \"min\", \"max\", \"step\", \"discrete\", \"disabled\", \"vertical\", \"onBlur\", \"onMouseDown\", \"onTouchStart\", \"getValueText\", \"animationDuration\", \"value\", \"minimum\", \"maximum\", \"increment\", \"incrementJump\", \"decrement\", \"decrementJump\", \"persist\", \"setValue\"]);\n\n  var _g = useSliderControls({\n    ref: propTrackProps === null || propTrackProps === void 0 ? void 0 : propTrackProps.ref,\n    thumb1Ref: thumbProps === null || thumbProps === void 0 ? void 0 : thumbProps.ref,\n    min: min,\n    max: max,\n    step: step,\n    value: value,\n    disabled: disabled,\n    vertical: vertical,\n    onBlur: onBlur,\n    onKeyDown: thumbProps === null || thumbProps === void 0 ? void 0 : thumbProps.onKeyDown,\n    onMouseDown: onMouseDown,\n    onTouchStart: onTouchStart,\n    animationDuration: animationDuration,\n    minimum: minimum,\n    maximum: maximum,\n    increment: increment,\n    incrementJump: incrementJump,\n    decrement: decrement,\n    decrementJump: decrementJump,\n    persist: persist,\n    setValue: setValue\n  }),\n      thumb1Ref = _g.thumb1Ref,\n      thumb1Value = _g.thumb1Value,\n      _thumb2Ref = _g.thumb2Ref,\n      _thumb2Value = _g.thumb2Value,\n      dragging = _g.dragging,\n      draggingIndex = _g.draggingIndex,\n      onKeyDown = _g.onKeyDown,\n      trackProps = __rest(_g, [\"thumb1Ref\", \"thumb1Value\", \"thumb2Ref\", \"thumb2Value\", \"dragging\", \"draggingIndex\", \"onKeyDown\"]);\n\n  var labelId = \"\";\n\n  if (label) {\n    labelId = (labelProps === null || labelProps === void 0 ? void 0 : labelProps.id) || \"\".concat(baseId, \"-label\");\n  }\n\n  return _jsx(SliderContainer, __assign({}, props, {\n    ref: ref,\n    label: label,\n    labelId: labelId,\n    labelProps: labelProps,\n    disabled: disabled,\n    vertical: vertical\n  }, {\n    children: _jsx(SliderTrack, __assign({\n      id: baseId\n    }, propTrackProps, trackProps, {\n      animate: !dragging,\n      disabled: disabled,\n      vertical: vertical\n    }, {\n      children: _jsx(SliderThumb, __assign({}, thumbProps, {\n        \"aria-label\": thumbLabel,\n        \"aria-labelledby\": thumbLabelledBy || labelId,\n        baseId: baseId,\n        ref: thumb1Ref,\n        getValueText: getValueText,\n        min: min,\n        max: max,\n        discrete: discrete,\n        disabled: disabled,\n        vertical: vertical,\n        animate: !dragging,\n        animationDuration: animationDuration,\n        value: thumb1Value,\n        index: 0,\n        active: draggingIndex === 0,\n        onKeyDown: onKeyDown\n      }))\n    }))\n  }));\n});","map":{"version":3,"mappings":"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","names":["forwardRef","DEFAULT_SLIDER_ANIMATION_TIME","DEFAULT_SLIDER_GET_VALUE_TEXT","SliderContainer","SliderThumb","SliderTrack","useSliderControls","Slider","_a","ref","propTrackProps","label","labelProps","thumbLabel","thumbLabelledBy","thumbProps","min","max","step","_b","discrete","_c","disabled","_d","vertical","onBlur","onMouseDown","onTouchStart","_e","getValueText","_f","animationDuration","value","minimum","maximum","increment","incrementJump","decrement","decrementJump","persist","setValue","props","_g","thumb1Ref","onKeyDown","thumb1Value","_thumb2Ref","_thumb2Value","dragging","draggingIndex","trackProps","labelId","id","baseId","_jsx","__assign","children","animate","index","active"],"sources":["C:\\Users\\hungr\\Documents\\VS-CODE\\notes-react\\node_modules\\@react-md\\form\\src\\slider\\Slider.tsx"],"sourcesContent":["import type { HTMLAttributes } from \"react\";\nimport { forwardRef } from \"react\";\nimport type { PropsWithRef } from \"@react-md/utils\";\n\nimport {\n  DEFAULT_SLIDER_ANIMATION_TIME,\n  DEFAULT_SLIDER_GET_VALUE_TEXT,\n} from \"./constants\";\nimport { SliderContainer } from \"./SliderContainer\";\nimport { SliderThumb } from \"./SliderThumb\";\nimport { SliderTrack } from \"./SliderTrack\";\nimport type { BaseSliderProps } from \"./types\";\nimport type { SliderRequiredProps } from \"./useSlider\";\nimport { useSliderControls } from \"./useSliderControls\";\n\n/**\n * @remarks \\@since 2.5.0\n */\nexport interface SliderProps extends SliderRequiredProps, BaseSliderProps {\n  /**\n   * An optional label to apply to the slider's thumb. This should normally be a\n   * short (1-4 word) description for this slider.\n   *\n   * @see {@link SliderLabelProps.label}\n   * @see {@link thumbLabelledBy}\n   */\n  thumbLabel?: string;\n\n  /**\n   * An optional id point to a label describing the slider's thumb. This should\n   * normally be a short (1-4 word) description for this slider.\n   *\n   * @see {@link SliderLabelProps.label}\n   * @see {@link thumbLabel}\n   */\n  thumbLabelledBy?: string;\n\n  /**\n   * Any additional props you'd like to pass to the track element as well as an\n   * optional `ref` if you need access to the track element for some reason.\n   */\n  trackProps?: PropsWithRef<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>;\n\n  /**\n   * Any additional props you'd like to pass to the thumb element as well as an\n   * optional `ref` if you need access to the track element for some reason.\n   */\n  thumbProps?: PropsWithRef<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>;\n}\n\n/**\n * The `Slider` component allows the user to select a single value from a range\n * of numbers. The functionality for controlling the value of this component is\n * provided by the `useSlider` hook.\n *\n * @remarks \\@since 2.5.0\n */\nexport const Slider = forwardRef<HTMLDivElement, SliderProps>(function Slider(\n  {\n    baseId,\n    trackProps: propTrackProps,\n    label,\n    labelProps,\n    thumbLabel,\n    thumbLabelledBy,\n    thumbProps,\n    min,\n    max,\n    step,\n    discrete = false,\n    disabled = false,\n    vertical = false,\n    onBlur,\n    onMouseDown,\n    onTouchStart,\n    getValueText = DEFAULT_SLIDER_GET_VALUE_TEXT,\n    animationDuration = DEFAULT_SLIDER_ANIMATION_TIME,\n    value,\n    minimum,\n    maximum,\n    increment,\n    incrementJump,\n    decrement,\n    decrementJump,\n    persist,\n    setValue,\n    ...props\n  },\n  ref\n) {\n  const {\n    thumb1Ref,\n    thumb1Value,\n    thumb2Ref: _thumb2Ref,\n    thumb2Value: _thumb2Value,\n    dragging,\n    draggingIndex,\n    onKeyDown,\n    ...trackProps\n  } = useSliderControls({\n    ref: propTrackProps?.ref,\n    thumb1Ref: thumbProps?.ref,\n    min,\n    max,\n    step,\n    value,\n    disabled,\n    vertical,\n    onBlur,\n    onKeyDown: thumbProps?.onKeyDown,\n    onMouseDown,\n    onTouchStart,\n    animationDuration,\n    minimum,\n    maximum,\n    increment,\n    incrementJump,\n    decrement,\n    decrementJump,\n    persist,\n    setValue,\n  });\n\n  let labelId = \"\";\n  if (label) {\n    labelId = labelProps?.id || `${baseId}-label`;\n  }\n\n  return (\n    <SliderContainer\n      {...props}\n      ref={ref}\n      label={label}\n      labelId={labelId}\n      labelProps={labelProps}\n      disabled={disabled}\n      vertical={vertical}\n    >\n      <SliderTrack\n        id={baseId}\n        {...propTrackProps}\n        {...trackProps}\n        animate={!dragging}\n        disabled={disabled}\n        vertical={vertical}\n      >\n        <SliderThumb\n          {...thumbProps}\n          aria-label={thumbLabel}\n          aria-labelledby={thumbLabelledBy || labelId}\n          baseId={baseId}\n          ref={thumb1Ref}\n          getValueText={getValueText}\n          min={min}\n          max={max}\n          discrete={discrete}\n          disabled={disabled}\n          vertical={vertical}\n          animate={!dragging}\n          animationDuration={animationDuration}\n          value={thumb1Value}\n          index={0}\n          active={draggingIndex === 0}\n          onKeyDown={onKeyDown}\n        />\n      </SliderTrack>\n    </SliderContainer>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}