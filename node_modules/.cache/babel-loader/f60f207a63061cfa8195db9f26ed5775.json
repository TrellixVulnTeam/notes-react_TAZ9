{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { forwardRef, useMemo } from \"react\";\nimport cn from \"classnames\";\nimport { TableConfigProvider, useTableConfig } from \"./config\";\n/**\n * Creates a `<tbody>` element that also allows for overriding all the child\n * `TableCell` components with additional styling behavior.\n */\n\nexport var TableBody = forwardRef(function TableBody(_a, ref) {\n  var className = _a.className,\n      children = _a.children,\n      propHAlign = _a.hAlign,\n      propVAlign = _a.vAlign,\n      propLineWrap = _a.lineWrap,\n      propDisableHover = _a.disableHover,\n      propDisableBorders = _a.disableBorders,\n      props = __rest(_a, [\"className\", \"children\", \"hAlign\", \"vAlign\", \"lineWrap\", \"disableHover\", \"disableBorders\"]); // update the table configuration with the custom overrides for the `<thead>`\n\n\n  var _b = useTableConfig({\n    hAlign: propHAlign,\n    vAlign: propVAlign,\n    lineWrap: propLineWrap,\n    disableHover: propDisableHover,\n    disableBorders: propDisableBorders\n  }),\n      hAlign = _b.hAlign,\n      vAlign = _b.vAlign,\n      lineWrap = _b.lineWrap,\n      disableHover = _b.disableHover,\n      disableBorders = _b.disableBorders;\n\n  var configuration = useMemo(function () {\n    return {\n      header: false,\n      hAlign: hAlign,\n      vAlign: vAlign,\n      lineWrap: lineWrap,\n      disableBorders: disableBorders,\n      disableHover: disableHover\n    };\n  }, [hAlign, vAlign, lineWrap, disableBorders, disableHover]);\n  return _jsx(TableConfigProvider, __assign({\n    value: configuration\n  }, {\n    children: _jsx(\"tbody\", __assign({}, props, {\n      ref: ref,\n      className: cn(\"rmd-tbody\", className)\n    }, {\n      children: children\n    }))\n  }));\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AACA,SAASA,UAAT,EAAqBC,OAArB,QAAoC,OAApC;AACA,OAAOC,EAAP,MAAe,YAAf;AAGA,SAASC,mBAAT,EAA8BC,cAA9B,QAAoD,UAApD;AAMA;;;;;AAIA,OAAO,IAAMC,SAAS,GAAGL,UAAU,CACjC,SAASK,SAAT,CACEC,EADF,EAWEC,GAXF,EAWK;EATD,aAAS,eAAT;EAAA,IACAC,QAAQ,cADR;EAAA,IAEQC,UAAU,YAFlB;EAAA,IAGQC,UAAU,YAHlB;EAAA,IAIUC,YAAY,cAJtB;EAAA,IAKcC,gBAAgB,kBAL9B;EAAA,IAMgBC,kBAAkB,oBANlC;EAAA,IAOGC,KAAK,cARV,2FAQU,CAPR,CASC,CAEH;;;EACM,SACJV,cAAc,CAAC;IACbW,MAAM,EAAEN,UADK;IAEbO,MAAM,EAAEN,UAFK;IAGbO,QAAQ,EAAEN,YAHG;IAIbO,YAAY,EAAEN,gBAJD;IAKbO,cAAc,EAAEN;EALH,CAAD,CADV;EAAA,IAAEE,MAAM,YAAR;EAAA,IAAUC,MAAM,YAAhB;EAAA,IAAkBC,QAAQ,cAA1B;EAAA,IAA4BC,YAAY,kBAAxC;EAAA,IAA0CC,cAAc,oBAAxD;;EASN,IAAMC,aAAa,GAAGnB,OAAO,CAC3B;IAAM,OAAC;MACLoB,MAAM,EAAE,KADH;MAELN,MAAM,QAFD;MAGLC,MAAM,QAHD;MAILC,QAAQ,UAJH;MAKLE,cAAc,gBALT;MAMLD,YAAY;IANP,CAAD;EAOJ,CARyB,EAS3B,CAACH,MAAD,EAASC,MAAT,EAAiBC,QAAjB,EAA2BE,cAA3B,EAA2CD,YAA3C,CAT2B,CAA7B;EAYA,OACEI,KAACnB,mBAAD,EAAoBoB;IAACC,KAAK,EAAEJ;EAAR,GAAqB;IAAAZ,UACvCc,2BAAWR,KAAX,EAAgB;MAAEP,GAAG,EAAEA,GAAP;MAAYkB,SAAS,EAAEvB,EAAE,CAAC,WAAD,EAAcuB,SAAd;IAAzB,CAAhB,EAAiE;MAAAjB,UAC9DA;IAD8D,CAAjE;EADuC,CAArB,CAApB,CADF;AAOD,CA3CgC,CAA5B","names":["forwardRef","useMemo","cn","TableConfigProvider","useTableConfig","TableBody","_a","ref","children","propHAlign","propVAlign","propLineWrap","propDisableHover","propDisableBorders","props","hAlign","vAlign","lineWrap","disableHover","disableBorders","configuration","header","_jsx","__assign","value","className"],"sources":["C:\\Users\\hungr\\Documents\\VS-CODE\\notes-react\\node_modules\\@react-md\\table\\src\\TableBody.tsx"],"sourcesContent":["import type { HTMLAttributes } from \"react\";\nimport { forwardRef, useMemo } from \"react\";\nimport cn from \"classnames\";\n\nimport type { TableConfig } from \"./config\";\nimport { TableConfigProvider, useTableConfig } from \"./config\";\n\nexport interface TableBodyProps\n  extends HTMLAttributes<HTMLTableSectionElement>,\n    Omit<TableConfig, \"header\"> {}\n\n/**\n * Creates a `<tbody>` element that also allows for overriding all the child\n * `TableCell` components with additional styling behavior.\n */\nexport const TableBody = forwardRef<HTMLTableSectionElement, TableBodyProps>(\n  function TableBody(\n    {\n      className,\n      children,\n      hAlign: propHAlign,\n      vAlign: propVAlign,\n      lineWrap: propLineWrap,\n      disableHover: propDisableHover,\n      disableBorders: propDisableBorders,\n      ...props\n    },\n    ref\n  ) {\n    // update the table configuration with the custom overrides for the `<thead>`\n    const { hAlign, vAlign, lineWrap, disableHover, disableBorders } =\n      useTableConfig({\n        hAlign: propHAlign,\n        vAlign: propVAlign,\n        lineWrap: propLineWrap,\n        disableHover: propDisableHover,\n        disableBorders: propDisableBorders,\n      });\n\n    const configuration = useMemo(\n      () => ({\n        header: false,\n        hAlign,\n        vAlign,\n        lineWrap,\n        disableBorders,\n        disableHover,\n      }),\n      [hAlign, vAlign, lineWrap, disableBorders, disableHover]\n    );\n\n    return (\n      <TableConfigProvider value={configuration}>\n        <tbody {...props} ref={ref} className={cn(\"rmd-tbody\", className)}>\n          {children}\n        </tbody>\n      </TableConfigProvider>\n    );\n  }\n);\n"]},"metadata":{},"sourceType":"module"}