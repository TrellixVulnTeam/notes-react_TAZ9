{"ast":null,"code":"import { useEffect } from \"react\";\n/**\n * This hook is used to pause the exit timeout if the user blurs the window\n * while a toast is visible and the autohide functionality is not disabled. If\n * this functionality is not added, messages and alerts might be missed by the\n * user since they minimized the browser or viewing something on a second\n * screen.\n *\n * @internal\n */\n\nexport function useWindowBlurPause(_a) {\n  var startTimer = _a.startTimer,\n      stopTimer = _a.stopTimer,\n      visible = _a.visible,\n      message = _a.message,\n      _b = _a.disabled,\n      disabled = _b === void 0 ? false : _b;\n  useEffect(function () {\n    if (disabled || !visible || !message || message.disableAutohide) {\n      return;\n    }\n\n    var handleFocusEvent = function (event) {\n      if (event.type === \"focus\") {\n        startTimer();\n      } else {\n        stopTimer();\n      }\n    };\n\n    window.addEventListener(\"blur\", handleFocusEvent);\n    window.addEventListener(\"focus\", handleFocusEvent);\n    return function () {\n      window.removeEventListener(\"blur\", handleFocusEvent);\n      window.removeEventListener(\"focus\", handleFocusEvent);\n    };\n  }, [disabled, startTimer, stopTimer, visible, message]);\n}","map":{"version":3,"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AAYA;;;;;;;;;;AASA,OAAM,SAAUC,kBAAV,CAA6BC,EAA7B,EAMI;MALRC,UAAU;MACVC,SAAS;MACTC,OAAO;MACPC,OAAO;MACPC;MAAAC,QAAQ,mBAAG,KAAH,GAAQD;EAEhBP,SAAS,CAAC;IACR,IAAIQ,QAAQ,IAAI,CAACH,OAAb,IAAwB,CAACC,OAAzB,IAAoCA,OAAO,CAACG,eAAhD,EAAiE;MAC/D;IACD;;IAED,IAAMC,gBAAgB,GAAG,UAACC,KAAD,EAAa;MACpC,IAAIA,KAAK,CAACC,IAAN,KAAe,OAAnB,EAA4B;QAC1BT,UAAU;MACX,CAFD,MAEO;QACLC,SAAS;MACV;IACF,CAND;;IAQAS,MAAM,CAACC,gBAAP,CAAwB,MAAxB,EAAgCJ,gBAAhC;IACAG,MAAM,CAACC,gBAAP,CAAwB,OAAxB,EAAiCJ,gBAAjC;IACA,OAAO;MACLG,MAAM,CAACE,mBAAP,CAA2B,MAA3B,EAAmCL,gBAAnC;MACAG,MAAM,CAACE,mBAAP,CAA2B,OAA3B,EAAoCL,gBAApC;IACD,CAHD;EAID,CAnBQ,EAmBN,CAACF,QAAD,EAAWL,UAAX,EAAuBC,SAAvB,EAAkCC,OAAlC,EAA2CC,OAA3C,CAnBM,CAAT;AAoBD","names":["useEffect","useWindowBlurPause","_a","startTimer","stopTimer","visible","message","_b","disabled","disableAutohide","handleFocusEvent","event","type","window","addEventListener","removeEventListener"],"sources":["C:\\Users\\hungr\\Documents\\VS-CODE\\notes-react\\node_modules\\@react-md\\alert\\src\\useWindowBlurPause.ts"],"sourcesContent":["import { useEffect } from \"react\";\n\nimport type { Message } from \"./MessageQueueContext\";\n\ninterface Options {\n  startTimer: () => void;\n  stopTimer: () => void;\n  visible: boolean;\n  message: Message | undefined;\n  disabled?: boolean;\n}\n\n/**\n * This hook is used to pause the exit timeout if the user blurs the window\n * while a toast is visible and the autohide functionality is not disabled. If\n * this functionality is not added, messages and alerts might be missed by the\n * user since they minimized the browser or viewing something on a second\n * screen.\n *\n * @internal\n */\nexport function useWindowBlurPause({\n  startTimer,\n  stopTimer,\n  visible,\n  message,\n  disabled = false,\n}: Options): void {\n  useEffect(() => {\n    if (disabled || !visible || !message || message.disableAutohide) {\n      return;\n    }\n\n    const handleFocusEvent = (event: Event): void => {\n      if (event.type === \"focus\") {\n        startTimer();\n      } else {\n        stopTimer();\n      }\n    };\n\n    window.addEventListener(\"blur\", handleFocusEvent);\n    window.addEventListener(\"focus\", handleFocusEvent);\n    return () => {\n      window.removeEventListener(\"blur\", handleFocusEvent);\n      window.removeEventListener(\"focus\", handleFocusEvent);\n    };\n  }, [disabled, startTimer, stopTimer, visible, message]);\n}\n"]},"metadata":{},"sourceType":"module"}