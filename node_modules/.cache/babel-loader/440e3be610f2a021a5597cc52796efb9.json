{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { createContext, useContext, useMemo } from \"react\";\n/** @remarks \\@since 5.0.0 */\n\nexport var DEFAULT_MENU_CONFIGURATION = {\n  horizontal: false,\n  renderAsSheet: false,\n  sheetHeader: null,\n  sheetFooter: null,\n  sheetPosition: \"bottom\",\n  sheetVerticalSize: \"touch\"\n};\n/**\n * @internal\n * @remarks \\@since 5.0.0\n */\n\nvar context = createContext(DEFAULT_MENU_CONFIGURATION);\ncontext.displayName = \"MenuConfiguration\";\n/**\n * @internal\n * @remarks \\@since 5.0.0\n */\n\nvar Provider = context.Provider;\n/**\n * This is probably just an internal only hook that allows you to get the\n * {@link MenuConfigurationContext} with optional overrides.\n *\n * @param overrides - An object of {@link MenuConfiguration} that would override\n * the inherited context values if they are not `undefined`.\n * @returns the {@link MenuConfigurationContext} with any overrides that were\n * provided.\n * @remarks \\@since 5.0.0\n */\n\nexport function useMenuConfiguration(_a) {\n  var _b = _a === void 0 ? {} : _a,\n      horizontal = _b.horizontal,\n      renderAsSheet = _b.renderAsSheet,\n      sheetHeader = _b.sheetHeader,\n      sheetFooter = _b.sheetFooter,\n      sheetPosition = _b.sheetPosition,\n      sheetVerticalSize = _b.sheetVerticalSize;\n\n  var inherited = useContext(context);\n  return {\n    horizontal: horizontal !== null && horizontal !== void 0 ? horizontal : inherited.horizontal,\n    renderAsSheet: renderAsSheet !== null && renderAsSheet !== void 0 ? renderAsSheet : inherited.renderAsSheet,\n    sheetHeader: sheetHeader === null ? null : sheetHeader !== null && sheetHeader !== void 0 ? sheetHeader : inherited.sheetHeader,\n    sheetFooter: sheetFooter === null ? null : sheetFooter !== null && sheetFooter !== void 0 ? sheetFooter : inherited.sheetFooter,\n    sheetPosition: sheetPosition !== null && sheetPosition !== void 0 ? sheetPosition : inherited.sheetPosition,\n    sheetVerticalSize: sheetVerticalSize !== null && sheetVerticalSize !== void 0 ? sheetVerticalSize : inherited.sheetVerticalSize\n  };\n}\n/**\n * Note: This will always merge values with any parent\n * `MenuConfigurationProvider`s.\n *\n * @remarks \\@since 5.0.0\n */\n\nexport function MenuConfigurationProvider(_a) {\n  var children = _a.children,\n      configuration = __rest(_a, [\"children\"]);\n\n  var _b = useMenuConfiguration(configuration),\n      horizontal = _b.horizontal,\n      renderAsSheet = _b.renderAsSheet,\n      sheetHeader = _b.sheetHeader,\n      sheetFooter = _b.sheetFooter,\n      sheetPosition = _b.sheetPosition,\n      sheetVerticalSize = _b.sheetVerticalSize;\n\n  var value = useMemo(function () {\n    return {\n      horizontal: horizontal,\n      renderAsSheet: renderAsSheet,\n      sheetHeader: sheetHeader,\n      sheetFooter: sheetFooter,\n      sheetPosition: sheetPosition,\n      sheetVerticalSize: sheetVerticalSize\n    };\n  }, [horizontal, renderAsSheet, sheetFooter, sheetHeader, sheetPosition, sheetVerticalSize]);\n  return _jsx(Provider, __assign({\n    value: value\n  }, {\n    children: children\n  }));\n}","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AACA,SAASA,aAAT,EAAwBC,UAAxB,EAAoCC,OAApC,QAAmD,OAAnD;AAGA;;AACA,OAAO,IAAMC,0BAA0B,GAAuC;EAC5EC,UAAU,EAAE,KADgE;EAE5EC,aAAa,EAAE,KAF6D;EAG5EC,WAAW,EAAE,IAH+D;EAI5EC,WAAW,EAAE,IAJ+D;EAK5EC,aAAa,EAAE,QAL6D;EAM5EC,iBAAiB,EAAE;AANyD,CAAvE;AASP;;;;;AAIA,IAAMC,OAAO,GAAGV,aAAa,CAC3BG,0BAD2B,CAA7B;AAGAO,OAAO,CAACC,WAAR,GAAsB,mBAAtB;AACA;;;;;AAIQ,YAAQ,GAAKD,OAAO,SAApB;AAER;;;;;;;;;;;AAUA,OAAM,SAAUE,oBAAV,CAA+BC,EAA/B,EAOmB;MAPYC,qBAOd,EAPc,GAOZD;MANvBT,UAAU;MACVC,aAAa;MACbC,WAAW;MACXC,WAAW;MACXC,aAAa;MACbC,iBAAiB;;EAEjB,IAAMM,SAAS,GAAGd,UAAU,CAACS,OAAD,CAA5B;EAEA,OAAO;IACLN,UAAU,EAAEA,UAAU,SAAV,cAAU,WAAV,gBAAcW,SAAS,CAACX,UAD/B;IAELC,aAAa,EAAEA,aAAa,SAAb,iBAAa,WAAb,mBAAiBU,SAAS,CAACV,aAFrC;IAGLC,WAAW,EACTA,WAAW,KAAK,IAAhB,GAAuB,IAAvB,GAA8BA,WAAW,SAAX,eAAW,WAAX,iBAAeS,SAAS,CAACT,WAJpD;IAKLC,WAAW,EACTA,WAAW,KAAK,IAAhB,GAAuB,IAAvB,GAA8BA,WAAW,SAAX,eAAW,WAAX,iBAAeQ,SAAS,CAACR,WANpD;IAOLC,aAAa,EAAEA,aAAa,SAAb,iBAAa,WAAb,mBAAiBO,SAAS,CAACP,aAPrC;IAQLC,iBAAiB,EAAEA,iBAAiB,SAAjB,qBAAiB,WAAjB,uBAAqBM,SAAS,CAACN;EAR7C,CAAP;AAUD;AAOD;;;;;;;AAMA,OAAM,SAAUO,yBAAV,CAAoCH,EAApC,EAG2B;EAF/B,YAAQ,cAAR;EAAA,IACGI,aAAa,cAFwB,YAExB,CADhB;;EAGM,SAOFL,oBAAoB,CAACK,aAAD,CAPlB;EAAA,IACJb,UAAU,gBADN;EAAA,IAEJC,aAAa,mBAFT;EAAA,IAGJC,WAAW,iBAHP;EAAA,IAIJC,WAAW,iBAJP;EAAA,IAKJC,aAAa,mBALT;EAAA,IAMJC,iBAAiB,uBANb;;EASN,IAAMS,KAAK,GAAGhB,OAAO,CACnB;IAAM,OAAC;MACLE,UAAU,YADL;MAELC,aAAa,eAFR;MAGLC,WAAW,aAHN;MAILC,WAAW,aAJN;MAKLC,aAAa,eALR;MAMLC,iBAAiB;IANZ,CAAD;EAOJ,CARiB,EASnB,CACEL,UADF,EAEEC,aAFF,EAGEE,WAHF,EAIED,WAJF,EAKEE,aALF,EAMEC,iBANF,CATmB,CAArB;EAmBA,OAAOU,KAACC,QAAD,EAASC;IAACH,KAAK,EAAEA;EAAR,GAAa;IAAAI,UAAGA;EAAH,CAAb,CAAT,CAAP;AACD","names":["createContext","useContext","useMemo","DEFAULT_MENU_CONFIGURATION","horizontal","renderAsSheet","sheetHeader","sheetFooter","sheetPosition","sheetVerticalSize","context","displayName","useMenuConfiguration","_a","_b","inherited","MenuConfigurationProvider","configuration","value","_jsx","Provider","__assign","children"],"sources":["C:\\Users\\hungr\\Documents\\VS-CODE\\notes-react\\node_modules\\@react-md\\menu\\src\\MenuConfigurationProvider.tsx"],"sourcesContent":["import type { ReactElement, ReactNode } from \"react\";\nimport { createContext, useContext, useMemo } from \"react\";\nimport type { MenuConfiguration, MenuConfigurationContext } from \"./types\";\n\n/** @remarks \\@since 5.0.0 */\nexport const DEFAULT_MENU_CONFIGURATION: Readonly<MenuConfigurationContext> = {\n  horizontal: false,\n  renderAsSheet: false,\n  sheetHeader: null,\n  sheetFooter: null,\n  sheetPosition: \"bottom\",\n  sheetVerticalSize: \"touch\",\n};\n\n/**\n * @internal\n * @remarks \\@since 5.0.0\n */\nconst context = createContext<MenuConfigurationContext>(\n  DEFAULT_MENU_CONFIGURATION\n);\ncontext.displayName = \"MenuConfiguration\";\n/**\n * @internal\n * @remarks \\@since 5.0.0\n */\nconst { Provider } = context;\n\n/**\n * This is probably just an internal only hook that allows you to get the\n * {@link MenuConfigurationContext} with optional overrides.\n *\n * @param overrides - An object of {@link MenuConfiguration} that would override\n * the inherited context values if they are not `undefined`.\n * @returns the {@link MenuConfigurationContext} with any overrides that were\n * provided.\n * @remarks \\@since 5.0.0\n */\nexport function useMenuConfiguration({\n  horizontal,\n  renderAsSheet,\n  sheetHeader,\n  sheetFooter,\n  sheetPosition,\n  sheetVerticalSize,\n}: MenuConfiguration = {}): Readonly<MenuConfigurationContext> {\n  const inherited = useContext(context);\n\n  return {\n    horizontal: horizontal ?? inherited.horizontal,\n    renderAsSheet: renderAsSheet ?? inherited.renderAsSheet,\n    sheetHeader:\n      sheetHeader === null ? null : sheetHeader ?? inherited.sheetHeader,\n    sheetFooter:\n      sheetFooter === null ? null : sheetFooter ?? inherited.sheetFooter,\n    sheetPosition: sheetPosition ?? inherited.sheetPosition,\n    sheetVerticalSize: sheetVerticalSize ?? inherited.sheetVerticalSize,\n  };\n}\n\n/** @remarks \\@since 5.0.0 */\nexport interface MenuConfigurationProviderProps extends MenuConfiguration {\n  children: ReactNode;\n}\n\n/**\n * Note: This will always merge values with any parent\n * `MenuConfigurationProvider`s.\n *\n * @remarks \\@since 5.0.0\n */\nexport function MenuConfigurationProvider({\n  children,\n  ...configuration\n}: MenuConfigurationProviderProps): ReactElement {\n  const {\n    horizontal,\n    renderAsSheet,\n    sheetHeader,\n    sheetFooter,\n    sheetPosition,\n    sheetVerticalSize,\n  } = useMenuConfiguration(configuration);\n\n  const value = useMemo<MenuConfigurationContext>(\n    () => ({\n      horizontal,\n      renderAsSheet,\n      sheetHeader,\n      sheetFooter,\n      sheetPosition,\n      sheetVerticalSize,\n    }),\n    [\n      horizontal,\n      renderAsSheet,\n      sheetFooter,\n      sheetHeader,\n      sheetPosition,\n      sheetVerticalSize,\n    ]\n  );\n\n  return <Provider value={value}>{children}</Provider>;\n}\n"]},"metadata":{},"sourceType":"module"}