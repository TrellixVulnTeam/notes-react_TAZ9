{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nimport { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { forwardRef, useCallback, useMemo, useRef } from \"react\";\nimport cn from \"classnames\";\nimport { useIcon } from \"@react-md/icon\";\nimport { useFixedPositioning } from \"@react-md/transition\";\nimport { BELOW_CENTER_ANCHOR, bem, DEFAULT_GET_ITEM_VALUE, tryToSubmitRelatedForm, useCloseOnOutsideClick, useEnsuredRef, useToggle } from \"@react-md/utils\";\nimport { useFormTheme } from \"../FormThemeProvider\";\nimport { FloatingLabel } from \"../label/FloatingLabel\";\nimport { TextFieldContainer } from \"../text-field/TextFieldContainer\";\nimport { useFocusState } from \"../useFocusState\";\nimport { Listbox } from \"./Listbox\";\nimport { defaultIsOptionDisabled, getDisplayLabel as DEFAULT_GET_DISPLAY_LABEL, getOptionId as DEFAULT_GET_OPTION_ID, getOptionLabel as DEFAULT_GET_OPTION_LABEL } from \"./utils\";\nvar block = bem(\"rmd-select\");\n/**\n * This component is an accessible version of the `<select>` element that allows\n * for some more custom styles by using the `@react-md/list` package to render\n * the list of options.\n *\n * The `Select` component **must be controlled** with a `value` and `onChange`\n * handler.\n *\n * Note: Since this is not a native `<select>` component, the current value will\n * be rendered in an `<input type=\"hidden\" />` element so that the value can be\n * sent along in forms. It is highly recommended to always provide a `name` prop\n * so this value is sent.\n */\n\nexport var Select = forwardRef(function Select(_a, forwardedRef) {\n  var onBlur = _a.onBlur,\n      onFocus = _a.onFocus,\n      onKeyDown = _a.onKeyDown,\n      onClick = _a.onClick,\n      className = _a.className,\n      label = _a.label,\n      labelStyle = _a.labelStyle,\n      labelClassName = _a.labelClassName,\n      displayLabelStyle = _a.displayLabelStyle,\n      displayLabelClassName = _a.displayLabelClassName,\n      propListboxStyle = _a.listboxStyle,\n      listboxClassName = _a.listboxClassName,\n      _b = _a.anchor,\n      anchor = _b === void 0 ? BELOW_CENTER_ANCHOR : _b,\n      propTheme = _a.theme,\n      _c = _a.dense,\n      dense = _c === void 0 ? false : _c,\n      _d = _a.inline,\n      inline = _d === void 0 ? false : _d,\n      _e = _a.error,\n      error = _e === void 0 ? false : _e,\n      _f = _a.stretch,\n      stretch = _f === void 0 ? false : _f,\n      _g = _a.disabled,\n      disabled = _g === void 0 ? false : _g,\n      _h = _a.isLeftAddon,\n      isLeftAddon = _h === void 0 ? true : _h,\n      _j = _a.isRightAddon,\n      isRightAddon = _j === void 0 ? true : _j,\n      propUnderlineDirection = _a.underlineDirection,\n      _k = _a.listboxWidth,\n      listboxWidth = _k === void 0 ? \"equal\" : _k,\n      _l = _a.portal,\n      portal = _l === void 0 ? true : _l,\n      portalInto = _a.portalInto,\n      portalIntoId = _a.portalIntoId,\n      name = _a.name,\n      options = _a.options,\n      _m = _a.labelKey,\n      labelKey = _m === void 0 ? \"label\" : _m,\n      _o = _a.valueKey,\n      valueKey = _o === void 0 ? \"value\" : _o,\n      _p = _a.getOptionId,\n      getOptionId = _p === void 0 ? DEFAULT_GET_OPTION_ID : _p,\n      _q = _a.getOptionLabel,\n      getOptionLabel = _q === void 0 ? DEFAULT_GET_OPTION_LABEL : _q,\n      _r = _a.getOptionValue,\n      getOptionValue = _r === void 0 ? DEFAULT_GET_ITEM_VALUE : _r,\n      _s = _a.getDisplayLabel,\n      getDisplayLabel = _s === void 0 ? DEFAULT_GET_DISPLAY_LABEL : _s,\n      _t = _a.isOptionDisabled,\n      isOptionDisabled = _t === void 0 ? defaultIsOptionDisabled : _t,\n      _u = _a.disableLeftAddon,\n      disableLeftAddon = _u === void 0 ? false : _u,\n      _v = _a.disableMovementChange,\n      disableMovementChange = _v === void 0 ? false : _v,\n      _w = _a.closeOnResize,\n      closeOnResize = _w === void 0 ? false : _w,\n      _x = _a.closeOnScroll,\n      closeOnScroll = _x === void 0 ? false : _x,\n      readOnly = _a.readOnly,\n      placeholder = _a.placeholder,\n      value = _a.value,\n      onChange = _a.onChange,\n      propRightChildren = _a.rightChildren,\n      props = __rest(_a, [\"onBlur\", \"onFocus\", \"onKeyDown\", \"onClick\", \"className\", \"label\", \"labelStyle\", \"labelClassName\", \"displayLabelStyle\", \"displayLabelClassName\", \"listboxStyle\", \"listboxClassName\", \"anchor\", \"theme\", \"dense\", \"inline\", \"error\", \"stretch\", \"disabled\", \"isLeftAddon\", \"isRightAddon\", \"underlineDirection\", \"listboxWidth\", \"portal\", \"portalInto\", \"portalIntoId\", \"name\", \"options\", \"labelKey\", \"valueKey\", \"getOptionId\", \"getOptionLabel\", \"getOptionValue\", \"getDisplayLabel\", \"isOptionDisabled\", \"disableLeftAddon\", \"disableMovementChange\", \"closeOnResize\", \"closeOnScroll\", \"readOnly\", \"placeholder\", \"value\", \"onChange\", \"rightChildren\"]);\n\n  var id = props.id;\n  var rightChildren = useIcon(\"dropdown\", propRightChildren);\n\n  var _y = useFormTheme({\n    theme: propTheme,\n    underlineDirection: propUnderlineDirection\n  }),\n      theme = _y.theme,\n      underlineDirection = _y.underlineDirection;\n\n  var valued = typeof value === \"number\" || !!value;\n  var displayValue = useMemo(function () {\n    var currentOption = options.find(function (option) {\n      return getOptionValue(option, valueKey) === value;\n    }) || null;\n    return getDisplayLabel(currentOption, labelKey, !disableLeftAddon);\n  }, [options, getDisplayLabel, labelKey, disableLeftAddon, getOptionValue, valueKey, value]);\n\n  var _z = __read(useToggle(false), 3),\n      visible = _z[0],\n      show = _z[1],\n      hide = _z[2];\n\n  var _0 = __read(useFocusState({\n    onBlur: onBlur,\n    onFocus: onFocus\n  }), 3),\n      focused = _0[0],\n      handleFocus = _0[1],\n      handleBlur = _0[2];\n\n  var handleKeyDown = useCallback(function (event) {\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n\n    if (tryToSubmitRelatedForm(event)) {\n      return;\n    }\n\n    switch (event.key) {\n      case \" \":\n      case \"ArrowUp\":\n      case \"ArrowDown\":\n        // prevent page scroll\n        event.preventDefault();\n        show();\n        break;\n      // no default\n    }\n  }, [onKeyDown, show]);\n\n  var _1 = __read(useEnsuredRef(forwardedRef), 2),\n      ref = _1[0],\n      refHandler = _1[1];\n\n  useCloseOnOutsideClick({\n    enabled: visible,\n    element: ref.current,\n    onOutsideClick: hide\n  });\n  var nodeRef = useRef(null);\n\n  var _2 = useFixedPositioning({\n    style: propListboxStyle,\n    fixedTo: ref,\n    nodeRef: nodeRef,\n    anchor: anchor,\n    onScroll: closeOnScroll ? hide : undefined,\n    onResize: closeOnResize ? hide : undefined,\n    transformOrigin: true,\n    width: listboxWidth,\n    onEntering: function () {\n      var _a; // can't do onEnter since the positioning styles haven't been applied to the\n      // dom node at this time. this means the list is the last element in the DOM\n      // when portalled, which causes the page to scroll to the end. Moving it to\n      // onEntering will ensure the styles have been applied and won't cause page\n      // scrolling\n\n\n      (_a = nodeRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n  }),\n      listboxRef = _2.ref,\n      listboxStyle = _2.style,\n      transitionOptions = _2.callbacks;\n\n  var handleClick = useCallback(function (event) {\n    if (onClick) {\n      onClick(event);\n    }\n\n    show();\n  }, [onClick, show]);\n  var handleKeyboardClose = useCallback(function () {\n    hide();\n\n    if (ref.current) {\n      ref.current.focus();\n    }\n  }, [hide, ref]);\n  var labelId = \"\".concat(id, \"-label\");\n  var valueId = \"\".concat(id, \"-value\");\n  var listboxId = \"\".concat(id, \"-listbox\");\n  var displayValueId = \"\".concat(id, \"-display-value\");\n  return _jsxs(_Fragment, {\n    children: [_jsxs(TextFieldContainer, __assign({}, props, {\n      \"aria-haspopup\": \"listbox\",\n      \"aria-disabled\": disabled || undefined,\n      ref: refHandler,\n      role: \"button\",\n      dense: dense,\n      tabIndex: disabled ? undefined : 0,\n      label: !!label,\n      onFocus: handleFocus,\n      onBlur: handleBlur,\n      onKeyDown: disabled ? undefined : handleKeyDown,\n      onClick: disabled ? undefined : handleClick,\n      theme: theme,\n      error: error,\n      active: focused || visible,\n      inline: inline,\n      stretch: stretch,\n      disabled: disabled,\n      underlineDirection: underlineDirection,\n      isLeftAddon: isLeftAddon,\n      isRightAddon: isRightAddon,\n      rightChildren: rightChildren,\n      className: cn(block({\n        disabled: disabled\n      }), className)\n    }, {\n      children: [_jsx(FloatingLabel, __assign({\n        id: labelId,\n        style: labelStyle,\n        className: cn(block(\"label\"), labelClassName),\n        htmlFor: id,\n        error: error,\n        active: valued && (focused || visible),\n        valued: valued,\n        floating: focused || valued || visible,\n        dense: dense,\n        disabled: disabled,\n        component: \"span\"\n      }, {\n        children: label\n      })), _jsx(\"span\", __assign({\n        id: displayValueId,\n        style: displayLabelStyle,\n        className: cn(block(\"value\", {\n          disabled: disabled,\n          readonly: readOnly,\n          placeholder: !valued && placeholder,\n          \"placeholder-active\": !valued && placeholder && (focused || visible)\n        }), displayLabelClassName)\n      }, {\n        children: displayValue || !valued && placeholder\n      })), _jsx(\"input\", {\n        id: valueId,\n        type: \"hidden\",\n        name: name,\n        value: value\n      })]\n    })), _jsx(Listbox, __assign({\n      id: listboxId,\n      ref: listboxRef\n    }, transitionOptions, {\n      \"aria-labelledby\": id,\n      style: listboxStyle,\n      className: listboxClassName,\n      name: name,\n      readOnly: readOnly,\n      portal: portal,\n      portalInto: portalInto,\n      portalIntoId: portalIntoId,\n      value: value,\n      onChange: onChange,\n      visible: visible,\n      temporary: true,\n      onRequestClose: handleKeyboardClose,\n      options: options,\n      labelKey: labelKey,\n      valueKey: valueKey,\n      getOptionId: getOptionId,\n      getOptionLabel: getOptionLabel,\n      getOptionValue: getOptionValue,\n      isOptionDisabled: isOptionDisabled,\n      disableMovementChange: disableMovementChange\n    }))]\n  });\n});","map":{"version":3,"mappings":"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","names":["forwardRef","useCallback","useMemo","useRef","cn","useIcon","useFixedPositioning","BELOW_CENTER_ANCHOR","bem","DEFAULT_GET_ITEM_VALUE","tryToSubmitRelatedForm","useCloseOnOutsideClick","useEnsuredRef","useToggle","useFormTheme","FloatingLabel","TextFieldContainer","useFocusState","Listbox","defaultIsOptionDisabled","getDisplayLabel","DEFAULT_GET_DISPLAY_LABEL","getOptionId","DEFAULT_GET_OPTION_ID","getOptionLabel","DEFAULT_GET_OPTION_LABEL","block","Select","_a","forwardedRef","onFocus","onKeyDown","onClick","className","label","labelStyle","labelClassName","displayLabelStyle","displayLabelClassName","propListboxStyle","listboxClassName","_b","anchor","propTheme","_c","dense","_d","inline","_e","error","_f","stretch","_g","disabled","_h","isLeftAddon","_j","isRightAddon","propUnderlineDirection","_k","listboxWidth","_l","portal","portalInto","portalIntoId","name","options","_m","labelKey","_o","valueKey","_p","_q","_r","getOptionValue","_s","_t","isOptionDisabled","_u","disableLeftAddon","_v","disableMovementChange","_w","closeOnResize","_x","closeOnScroll","readOnly","placeholder","value","onChange","propRightChildren","props","rightChildren","theme","underlineDirection","valued","displayValue","currentOption","find","option","visible","show","hide","onBlur","focused","handleFocus","handleBlur","handleKeyDown","event","key","preventDefault","ref","refHandler","enabled","element","current","onOutsideClick","nodeRef","style","fixedTo","onScroll","undefined","onResize","transformOrigin","width","onEntering","focus","listboxRef","listboxStyle","transitionOptions","handleClick","handleKeyboardClose","labelId","id","valueId","listboxId","displayValueId","_jsxs","children","__assign","role","tabIndex","active","_jsx","htmlFor","floating","component","readonly","type","temporary","onRequestClose"],"sources":["C:\\Users\\hungr\\Documents\\VS-CODE\\notes-react\\node_modules\\@react-md\\form\\src\\select\\Select.tsx"],"sourcesContent":["import type { CSSProperties, HTMLAttributes, ReactNode } from \"react\";\nimport { forwardRef, useCallback, useMemo, useRef } from \"react\";\nimport cn from \"classnames\";\nimport { useIcon } from \"@react-md/icon\";\nimport type { ListElement } from \"@react-md/list\";\nimport { useFixedPositioning } from \"@react-md/transition\";\nimport type { PositionAnchor, PositionWidth } from \"@react-md/utils\";\nimport {\n  BELOW_CENTER_ANCHOR,\n  bem,\n  DEFAULT_GET_ITEM_VALUE,\n  tryToSubmitRelatedForm,\n  useCloseOnOutsideClick,\n  useEnsuredRef,\n  useToggle,\n} from \"@react-md/utils\";\n\nimport { useFormTheme } from \"../FormThemeProvider\";\nimport { FloatingLabel } from \"../label/FloatingLabel\";\nimport type { TextFieldContainerOptions } from \"../text-field/TextFieldContainer\";\nimport { TextFieldContainer } from \"../text-field/TextFieldContainer\";\nimport { useFocusState } from \"../useFocusState\";\nimport type { ListboxOptions } from \"./Listbox\";\nimport { Listbox } from \"./Listbox\";\nimport {\n  defaultIsOptionDisabled,\n  getDisplayLabel as DEFAULT_GET_DISPLAY_LABEL,\n  getOptionId as DEFAULT_GET_OPTION_ID,\n  getOptionLabel as DEFAULT_GET_OPTION_LABEL,\n} from \"./utils\";\n\ntype FakeSelectAttributes = Omit<\n  HTMLAttributes<HTMLDivElement>,\n  \"placeholder\" | \"children\" | \"onChange\" | \"defaultValue\" | \"value\"\n>;\n\nexport interface SelectProps\n  extends FakeSelectAttributes,\n    TextFieldContainerOptions,\n    ListboxOptions {\n  /**\n   * The id for the select component. This is required for a11y and will be used\n   * to generate ids for the listbox and each option within the listbox.\n   */\n  id: string;\n\n  /**\n   * Boolean if the select is currently disabled.\n   */\n  disabled?: boolean;\n\n  /**\n   * An optional floating label to use with the select.\n   */\n  label?: ReactNode;\n\n  /**\n   * An optional style to apply to the label element.\n   */\n  labelStyle?: CSSProperties;\n\n  /**\n   * An optional className to apply to the label element.\n   */\n  labelClassName?: string;\n\n  /**\n   * An optional style to apply to the current display value within the\n   * `Select`'s button component.\n   */\n  displayLabelStyle?: CSSProperties;\n\n  /**\n   * An optional className to apply to the current display value within the\n   * `Select`'s button component.\n   */\n  displayLabelClassName?: string;\n\n  /**\n   * An optional style to apply to the listbox.\n   */\n  listboxStyle?: CSSProperties;\n\n  /**\n   * An optional className to apply to the listbox.\n   */\n  listboxClassName?: string;\n\n  /**\n   * Boolean if the select should act as a read only select field which just\n   * allows for all the options to be visible when toggled open.\n   */\n  readOnly?: boolean;\n\n  /**\n   * An optional placeholder text to show while the select is unvalued and is\n   * either currently focused or the `label` prop was not provided.\n   */\n  placeholder?: ReactNode;\n\n  /**\n   * A function that gets called whenever the Select's value changes so that the\n   * selected option can be converted into a renderable element to show in the\n   * Select's button. The default behavior is to use the `getOptionLabel`\n   * default behavior. If the option is an object and the `disableLeftAddon`\n   * prop has not been disabled, it will then attempt to also extract a\n   * `leftAddon` from the option and use the `TextIconSpacing` component with\n   * the label + icon/avatar.\n   */\n  getDisplayLabel?: typeof DEFAULT_GET_DISPLAY_LABEL;\n\n  /**\n   * The positioning configuration for how the listbox should be anchored to the\n   * select button.\n   */\n  anchor?: PositionAnchor;\n\n  /**\n   * The sizing behavior for the listbox. It will default to have the same width\n   * as the select button, but it is also possible to either have the\n   * `min-width` be the width of the select button or just automatically\n   * determine the width.\n   *\n   * The sizing behavior will always ensure that the left and right bounds of\n   * the listbox appear within the viewport.\n   */\n  listboxWidth?: PositionWidth;\n\n  /**\n   * Boolean if the `Select`'s button display value should not attempt to\n   * extract a `leftAddon` from the current selected option to display.\n   */\n  disableLeftAddon?: boolean;\n\n  /**\n   * Boolean if the select's listbox should not hide if the user resizes the\n   * browser while it is visible.\n   */\n  closeOnResize?: boolean;\n\n  /**\n   * Boolean if the select's listbox should not hide if the user scrolls the\n   * page while it is visible.\n   */\n  closeOnScroll?: boolean;\n\n  /**\n   * An optional icon to display to the right of the select. This should\n   * normally be a dropdown icon to replace the native select's dropdown icon.\n   * If this is set to `null`, the native select's dropdown icon will be\n   * displayed instead.\n   *\n   * This defaults to the `IconProvider`'s dropdown icon from the\n   * `@react-md/icon` package.\n   */\n  rightChildren?: ReactNode;\n}\n\nconst block = bem(\"rmd-select\");\n\n/**\n * This component is an accessible version of the `<select>` element that allows\n * for some more custom styles by using the `@react-md/list` package to render\n * the list of options.\n *\n * The `Select` component **must be controlled** with a `value` and `onChange`\n * handler.\n *\n * Note: Since this is not a native `<select>` component, the current value will\n * be rendered in an `<input type=\"hidden\" />` element so that the value can be\n * sent along in forms. It is highly recommended to always provide a `name` prop\n * so this value is sent.\n */\nexport const Select = forwardRef<HTMLDivElement, SelectProps>(function Select(\n  {\n    onBlur,\n    onFocus,\n    onKeyDown,\n    onClick,\n    className,\n    label,\n    labelStyle,\n    labelClassName,\n    displayLabelStyle,\n    displayLabelClassName,\n    listboxStyle: propListboxStyle,\n    listboxClassName,\n    anchor = BELOW_CENTER_ANCHOR,\n    theme: propTheme,\n    dense = false,\n    inline = false,\n    error = false,\n    stretch = false,\n    disabled = false,\n    isLeftAddon = true,\n    isRightAddon = true,\n    underlineDirection: propUnderlineDirection,\n    listboxWidth = \"equal\",\n    portal = true,\n    portalInto,\n    portalIntoId,\n    name,\n    options,\n    labelKey = \"label\",\n    valueKey = \"value\",\n    getOptionId = DEFAULT_GET_OPTION_ID,\n    getOptionLabel = DEFAULT_GET_OPTION_LABEL,\n    getOptionValue = DEFAULT_GET_ITEM_VALUE,\n    getDisplayLabel = DEFAULT_GET_DISPLAY_LABEL,\n    isOptionDisabled = defaultIsOptionDisabled,\n    disableLeftAddon = false,\n    disableMovementChange = false,\n    closeOnResize = false,\n    closeOnScroll = false,\n    readOnly,\n    placeholder,\n    value,\n    onChange,\n    rightChildren: propRightChildren,\n    ...props\n  },\n  forwardedRef\n) {\n  const { id } = props;\n  const rightChildren = useIcon(\"dropdown\", propRightChildren);\n  const { theme, underlineDirection } = useFormTheme({\n    theme: propTheme,\n    underlineDirection: propUnderlineDirection,\n  });\n\n  const valued = typeof value === \"number\" || !!value;\n  const displayValue = useMemo(() => {\n    const currentOption =\n      options.find((option) => getOptionValue(option, valueKey) === value) ||\n      null;\n\n    return getDisplayLabel(currentOption, labelKey, !disableLeftAddon);\n  }, [\n    options,\n    getDisplayLabel,\n    labelKey,\n    disableLeftAddon,\n    getOptionValue,\n    valueKey,\n    value,\n  ]);\n\n  const [visible, show, hide] = useToggle(false);\n  const [focused, handleFocus, handleBlur] = useFocusState({ onBlur, onFocus });\n  const handleKeyDown = useCallback(\n    (event: React.KeyboardEvent<HTMLDivElement>) => {\n      if (onKeyDown) {\n        onKeyDown(event);\n      }\n\n      if (tryToSubmitRelatedForm(event)) {\n        return;\n      }\n\n      switch (event.key) {\n        case \" \":\n        case \"ArrowUp\":\n        case \"ArrowDown\":\n          // prevent page scroll\n          event.preventDefault();\n          show();\n          break;\n        // no default\n      }\n    },\n    [onKeyDown, show]\n  );\n\n  const [ref, refHandler] = useEnsuredRef(forwardedRef);\n\n  useCloseOnOutsideClick({\n    enabled: visible,\n    element: ref.current,\n    onOutsideClick: hide,\n  });\n\n  const nodeRef = useRef<ListElement | null>(null);\n  const {\n    ref: listboxRef,\n    style: listboxStyle,\n    callbacks: transitionOptions,\n  } = useFixedPositioning({\n    style: propListboxStyle,\n    fixedTo: ref,\n    nodeRef,\n    anchor,\n    onScroll: closeOnScroll ? hide : undefined,\n    onResize: closeOnResize ? hide : undefined,\n    transformOrigin: true,\n    width: listboxWidth,\n    onEntering() {\n      // can't do onEnter since the positioning styles haven't been applied to the\n      // dom node at this time. this means the list is the last element in the DOM\n      // when portalled, which causes the page to scroll to the end. Moving it to\n      // onEntering will ensure the styles have been applied and won't cause page\n      // scrolling\n      nodeRef.current?.focus();\n    },\n  });\n\n  const handleClick = useCallback(\n    (event: React.MouseEvent<HTMLDivElement>) => {\n      if (onClick) {\n        onClick(event);\n      }\n\n      show();\n    },\n    [onClick, show]\n  );\n\n  const handleKeyboardClose = useCallback(() => {\n    hide();\n    if (ref.current) {\n      ref.current.focus();\n    }\n  }, [hide, ref]);\n\n  const labelId = `${id}-label`;\n  const valueId = `${id}-value`;\n  const listboxId = `${id}-listbox`;\n  const displayValueId = `${id}-display-value`;\n\n  return (\n    <>\n      <TextFieldContainer\n        {...props}\n        aria-haspopup=\"listbox\"\n        aria-disabled={disabled || undefined}\n        ref={refHandler}\n        role=\"button\"\n        dense={dense}\n        tabIndex={disabled ? undefined : 0}\n        label={!!label}\n        onFocus={handleFocus}\n        onBlur={handleBlur}\n        onKeyDown={disabled ? undefined : handleKeyDown}\n        onClick={disabled ? undefined : handleClick}\n        theme={theme}\n        error={error}\n        active={focused || visible}\n        inline={inline}\n        stretch={stretch}\n        disabled={disabled}\n        underlineDirection={underlineDirection}\n        isLeftAddon={isLeftAddon}\n        isRightAddon={isRightAddon}\n        rightChildren={rightChildren}\n        className={cn(block({ disabled }), className)}\n      >\n        <FloatingLabel\n          id={labelId}\n          style={labelStyle}\n          className={cn(block(\"label\"), labelClassName)}\n          htmlFor={id}\n          error={error}\n          active={valued && (focused || visible)}\n          valued={valued}\n          floating={focused || valued || visible}\n          dense={dense}\n          disabled={disabled}\n          component=\"span\"\n        >\n          {label}\n        </FloatingLabel>\n        <span\n          id={displayValueId}\n          style={displayLabelStyle}\n          className={cn(\n            block(\"value\", {\n              disabled,\n              readonly: readOnly,\n              placeholder: !valued && placeholder,\n              \"placeholder-active\":\n                !valued && placeholder && (focused || visible),\n            }),\n            displayLabelClassName\n          )}\n        >\n          {displayValue || (!valued && placeholder)}\n        </span>\n        <input id={valueId} type=\"hidden\" name={name} value={value} />\n      </TextFieldContainer>\n      <Listbox\n        id={listboxId}\n        ref={listboxRef}\n        {...transitionOptions}\n        aria-labelledby={id}\n        style={listboxStyle}\n        className={listboxClassName}\n        name={name}\n        readOnly={readOnly}\n        portal={portal}\n        portalInto={portalInto}\n        portalIntoId={portalIntoId}\n        value={value}\n        onChange={onChange}\n        visible={visible}\n        temporary\n        onRequestClose={handleKeyboardClose}\n        options={options}\n        labelKey={labelKey}\n        valueKey={valueKey}\n        getOptionId={getOptionId}\n        getOptionLabel={getOptionLabel}\n        getOptionValue={getOptionValue}\n        isOptionDisabled={isOptionDisabled}\n        disableMovementChange={disableMovementChange}\n      />\n    </>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}