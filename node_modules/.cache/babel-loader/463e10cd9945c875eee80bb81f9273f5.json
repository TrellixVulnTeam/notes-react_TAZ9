{"ast":null,"code":"import { useResizeListener } from \"./useResizeListener\";\n/**\n * This is a simple component that will attach a throttled resize event listener\n * when mounted, and detach when it unmounts.\n *\n * This component only works for entire app resize events. If you are looking\n * for specific element resize events, check out the `ResizeObserver` component\n * instead.\n */\n\nexport function ResizeListener(_a) {\n  var onResize = _a.onResize,\n      options = _a.options,\n      _b = _a.immediate,\n      immediate = _b === void 0 ? typeof window !== \"undefined\" : _b;\n  useResizeListener({\n    onResize: onResize,\n    options: options,\n    immediate: immediate,\n    enabled: true\n  });\n  return null;\n}","map":{"version":3,"mappings":"AACA,SAASA,iBAAT,QAAkC,qBAAlC;AAIA;;;;;;;;;AAQA,OAAM,SAAUC,cAAV,CAAyBC,EAAzB,EAIgB;MAHpBC,QAAQ;MACRC,OAAO;MACPC;MAAAC,SAAS,mBAAG,OAAOC,MAAP,KAAkB,WAArB,GAAgCF;EAEzCL,iBAAiB,CAAC;IAAEG,QAAQ,UAAV;IAAYC,OAAO,SAAnB;IAAqBE,SAAS,WAA9B;IAAgCE,OAAO,EAAE;EAAzC,CAAD,CAAjB;EACA,OAAO,IAAP;AACD","names":["useResizeListener","ResizeListener","_a","onResize","options","_b","immediate","window","enabled"],"sources":["C:\\Users\\hungr\\Documents\\VS-CODE\\notes-react\\node_modules\\@react-md\\utils\\src\\sizing\\ResizeListener.tsx"],"sourcesContent":["import type { ResizeListenerOptions } from \"./useResizeListener\";\nimport { useResizeListener } from \"./useResizeListener\";\n\nexport type ResizeListenerProps = Omit<ResizeListenerOptions, \"enabled\">;\n\n/**\n * This is a simple component that will attach a throttled resize event listener\n * when mounted, and detach when it unmounts.\n *\n * This component only works for entire app resize events. If you are looking\n * for specific element resize events, check out the `ResizeObserver` component\n * instead.\n */\nexport function ResizeListener({\n  onResize,\n  options,\n  immediate = typeof window !== \"undefined\",\n}: ResizeListenerProps): null {\n  useResizeListener({ onResize, options, immediate, enabled: true });\n  return null;\n}\n"]},"metadata":{},"sourceType":"module"}