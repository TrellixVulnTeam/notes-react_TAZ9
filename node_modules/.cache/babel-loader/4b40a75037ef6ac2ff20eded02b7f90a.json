{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport { ListItem } from \"@react-md/list\";\nimport { useKeyboardFocusableElement } from \"@react-md/utils\";\n/**\n * This component is used as an \"action\" within a `Menu`/`DropdownMenu` that\n * implements some keyboard focus behavior. This component should generally have\n * an `onClick` event handler.\n *\n * @remarks \\@since 5.0.0\n */\n\nexport var MenuItem = forwardRef(function MenuItem(_a, nodeRef) {\n  var className = _a.className,\n      children = _a.children,\n      _b = _a.role,\n      role = _b === void 0 ? \"menuitem\" : _b,\n      _c = _a.tabIndex,\n      tabIndex = _c === void 0 ? -1 : _c,\n      props = __rest(_a, [\"className\", \"children\", \"role\", \"tabIndex\"]);\n\n  var ref = useKeyboardFocusableElement(nodeRef);\n  return _jsx(ListItem, __assign({}, props, {\n    ref: ref,\n    role: role,\n    tabIndex: tabIndex,\n    className: cn(\"rmd-menu-item\", className)\n  }, {\n    children: children\n  }));\n});","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,2BAAT,QAA4C,iBAA5C;AAIA;;;;;;;;AAOA,OAAO,IAAMC,QAAQ,GAAGJ,UAAU,CAChC,SAASI,QAAT,CACEC,EADF,EAEEC,OAFF,EAES;EADL,aAAS,eAAT;EAAA,IAAWC,QAAQ,cAAnB;EAAA,IAAqBC,YAArB;EAAA,IAAqBC,IAAI,mBAAG,UAAH,GAAaD,EAAtC;EAAA,IAAwCE,gBAAxC;EAAA,IAAwCC,QAAQ,mBAAG,CAAC,CAAJ,GAAKD,EAArD;EAAA,IAA0DE,KAAK,cAAjE,6CAAiE,CAA/D;;EAGF,IAAMC,GAAG,GAAGV,2BAA2B,CAACG,OAAD,CAAvC;EACA,OACEQ,KAACZ,QAAD,EAASa,aACHH,KADG,EACE;IACTC,GAAG,EAAEA,GADI;IAETJ,IAAI,EAAEA,IAFG;IAGTE,QAAQ,EAAEA,QAHD;IAITK,SAAS,EAAEf,EAAE,CAAC,eAAD,EAAkBe,SAAlB;EAJJ,CADF,EAKkC;IAAAT,UAExCA;EAFwC,CALlC,CAAT,CADF;AAWD,CAjB+B,CAA3B","names":["forwardRef","cn","ListItem","useKeyboardFocusableElement","MenuItem","_a","nodeRef","children","_b","role","_c","tabIndex","props","ref","_jsx","__assign","className"],"sources":["C:\\Users\\hungr\\Documents\\VS-CODE\\notes-react\\node_modules\\@react-md\\menu\\src\\MenuItem.tsx"],"sourcesContent":["import { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport { ListItem } from \"@react-md/list\";\nimport { useKeyboardFocusableElement } from \"@react-md/utils\";\n\nimport type { MenuItemProps } from \"./types\";\n\n/**\n * This component is used as an \"action\" within a `Menu`/`DropdownMenu` that\n * implements some keyboard focus behavior. This component should generally have\n * an `onClick` event handler.\n *\n * @remarks \\@since 5.0.0\n */\nexport const MenuItem = forwardRef<HTMLLIElement, MenuItemProps>(\n  function MenuItem(\n    { className, children, role = \"menuitem\", tabIndex = -1, ...props },\n    nodeRef\n  ) {\n    const ref = useKeyboardFocusableElement(nodeRef);\n    return (\n      <ListItem\n        {...props}\n        ref={ref}\n        role={role}\n        tabIndex={tabIndex}\n        className={cn(\"rmd-menu-item\", className)}\n      >\n        {children}\n      </ListItem>\n    );\n  }\n);\n"]},"metadata":{},"sourceType":"module"}