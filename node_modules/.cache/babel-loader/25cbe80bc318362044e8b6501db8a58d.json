{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { IncrementMovementKey, JumpMovementKey } from \"./types\";\n/**\n * A keyboard movement configuration preset for handling vertical menu\n * movements.\n */\n\nexport var VERTICAL_MENU = {\n  loopable: true,\n  searchable: true,\n  incrementKeys: [IncrementMovementKey.ArrowDown],\n  decrementKeys: [IncrementMovementKey.ArrowUp],\n  jumpToFirstKeys: [JumpMovementKey.Home],\n  jumpToLastKeys: [JumpMovementKey.End]\n};\n/**\n * A keyboard movement configuration preset for handling horizontal menu\n * movements.\n */\n\nexport var HORIZONTAL_MENU = __assign(__assign({}, VERTICAL_MENU), {\n  incrementKeys: [IncrementMovementKey.ArrowRight],\n  decrementKeys: [IncrementMovementKey.ArrowLeft]\n});\n/**\n * A keyboard movement configuration preset for handling vertical listbox\n * movements.\n */\n\nexport var VERTICAL_LISTBOX = __assign(__assign({}, VERTICAL_MENU), {\n  loopable: false\n});\n/**\n * A keyboard movement configuration preset for handling horizontal listbox\n * movements.\n */\n\nexport var HORIZONTAL_LISTBOX = __assign(__assign({}, HORIZONTAL_MENU), {\n  loopable: false\n});\n/**\n * A keyboard movement configuration preset for handling vertical combobox\n * movements.\n */\n\nexport var VERTICAL_COMBOBOX = {\n  incrementKeys: [IncrementMovementKey.ArrowDown],\n  decrementKeys: [IncrementMovementKey.ArrowUp],\n  // don't want to be able to jump since home and end should do default behavior\n  // in text field\n  jumpToFirstKeys: [],\n  jumpToLastKeys: [],\n  searchable: false\n};\n/**\n * A keyboard movement configuration preset for handling horizontal combobox\n * movements.\n */\n\nexport var HORIZONTAL_COMBOBOX = {\n  incrementKeys: [IncrementMovementKey.ArrowRight],\n  decrementKeys: [IncrementMovementKey.ArrowLeft],\n  // don't want to be able to jump since home and end should do default behavior\n  // in text field\n  jumpToFirstKeys: [],\n  jumpToLastKeys: [],\n  searchable: false\n};\nexport var VERTICAL_TREE = {\n  incrementKeys: [IncrementMovementKey.ArrowDown],\n  decrementKeys: [IncrementMovementKey.ArrowUp],\n  jumpToFirstKeys: [JumpMovementKey.Home, JumpMovementKey.ControlShiftHome],\n  jumpToLastKeys: [JumpMovementKey.End, JumpMovementKey.ControlShiftEnd],\n  loopable: true,\n  searchable: true\n};\nexport var HORIZONTAL_TREE = {\n  incrementKeys: [IncrementMovementKey.ArrowRight],\n  decrementKeys: [IncrementMovementKey.ArrowLeft],\n  jumpToFirstKeys: [JumpMovementKey.Home, JumpMovementKey.ControlShiftHome],\n  jumpToLastKeys: [JumpMovementKey.End, JumpMovementKey.ControlShiftEnd],\n  loopable: true,\n  searchable: true\n};\nexport var HORIZONTAL_TABS = {\n  incrementKeys: [IncrementMovementKey.ArrowRight],\n  decrementKeys: [IncrementMovementKey.ArrowLeft],\n  jumpToFirstKeys: [JumpMovementKey.Home],\n  jumpToLastKeys: [JumpMovementKey.End],\n  loopable: true,\n  searchable: false\n};\nexport var VERTICAL_TABS = {\n  incrementKeys: [IncrementMovementKey.ArrowDown],\n  decrementKeys: [IncrementMovementKey.ArrowUp],\n  jumpToFirstKeys: [JumpMovementKey.Home],\n  jumpToLastKeys: [JumpMovementKey.End],\n  loopable: true,\n  searchable: false\n};","map":{"version":3,"mappings":"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","names":["IncrementMovementKey","JumpMovementKey","VERTICAL_MENU","loopable","searchable","incrementKeys","ArrowDown","decrementKeys","ArrowUp","jumpToFirstKeys","Home","jumpToLastKeys","End","HORIZONTAL_MENU","ArrowRight","ArrowLeft","VERTICAL_LISTBOX","HORIZONTAL_LISTBOX","VERTICAL_COMBOBOX","HORIZONTAL_COMBOBOX","VERTICAL_TREE","ControlShiftHome","ControlShiftEnd","HORIZONTAL_TREE","HORIZONTAL_TABS","VERTICAL_TABS"],"sources":["C:\\Users\\hungr\\Documents\\VS-CODE\\notes-react\\node_modules\\@react-md\\utils\\src\\wia-aria\\movement\\presets.ts"],"sourcesContent":["import type { MovementConfig } from \"./types\";\nimport { IncrementMovementKey, JumpMovementKey } from \"./types\";\n\n/**\n * A keyboard movement configuration preset for handling vertical menu\n * movements.\n */\nexport const VERTICAL_MENU: MovementConfig = {\n  loopable: true,\n  searchable: true,\n  incrementKeys: [IncrementMovementKey.ArrowDown],\n  decrementKeys: [IncrementMovementKey.ArrowUp],\n  jumpToFirstKeys: [JumpMovementKey.Home],\n  jumpToLastKeys: [JumpMovementKey.End],\n};\n\n/**\n * A keyboard movement configuration preset for handling horizontal menu\n * movements.\n */\nexport const HORIZONTAL_MENU: MovementConfig = {\n  ...VERTICAL_MENU,\n  incrementKeys: [IncrementMovementKey.ArrowRight],\n  decrementKeys: [IncrementMovementKey.ArrowLeft],\n};\n\n/**\n * A keyboard movement configuration preset for handling vertical listbox\n * movements.\n */\nexport const VERTICAL_LISTBOX: MovementConfig = {\n  ...VERTICAL_MENU,\n  loopable: false,\n};\n\n/**\n * A keyboard movement configuration preset for handling horizontal listbox\n * movements.\n */\nexport const HORIZONTAL_LISTBOX: MovementConfig = {\n  ...HORIZONTAL_MENU,\n  loopable: false,\n};\n\n/**\n * A keyboard movement configuration preset for handling vertical combobox\n * movements.\n */\nexport const VERTICAL_COMBOBOX: MovementConfig = {\n  incrementKeys: [IncrementMovementKey.ArrowDown],\n  decrementKeys: [IncrementMovementKey.ArrowUp],\n  // don't want to be able to jump since home and end should do default behavior\n  // in text field\n  jumpToFirstKeys: [],\n  jumpToLastKeys: [],\n  searchable: false,\n};\n\n/**\n * A keyboard movement configuration preset for handling horizontal combobox\n * movements.\n */\nexport const HORIZONTAL_COMBOBOX: MovementConfig = {\n  incrementKeys: [IncrementMovementKey.ArrowRight],\n  decrementKeys: [IncrementMovementKey.ArrowLeft],\n  // don't want to be able to jump since home and end should do default behavior\n  // in text field\n  jumpToFirstKeys: [],\n  jumpToLastKeys: [],\n  searchable: false,\n};\n\nexport const VERTICAL_TREE: MovementConfig = {\n  incrementKeys: [IncrementMovementKey.ArrowDown],\n  decrementKeys: [IncrementMovementKey.ArrowUp],\n  jumpToFirstKeys: [JumpMovementKey.Home, JumpMovementKey.ControlShiftHome],\n  jumpToLastKeys: [JumpMovementKey.End, JumpMovementKey.ControlShiftEnd],\n  loopable: true,\n  searchable: true,\n};\n\nexport const HORIZONTAL_TREE: MovementConfig = {\n  incrementKeys: [IncrementMovementKey.ArrowRight],\n  decrementKeys: [IncrementMovementKey.ArrowLeft],\n  jumpToFirstKeys: [JumpMovementKey.Home, JumpMovementKey.ControlShiftHome],\n  jumpToLastKeys: [JumpMovementKey.End, JumpMovementKey.ControlShiftEnd],\n  loopable: true,\n  searchable: true,\n};\n\nexport const HORIZONTAL_TABS: MovementConfig = {\n  incrementKeys: [IncrementMovementKey.ArrowRight],\n  decrementKeys: [IncrementMovementKey.ArrowLeft],\n  jumpToFirstKeys: [JumpMovementKey.Home],\n  jumpToLastKeys: [JumpMovementKey.End],\n  loopable: true,\n  searchable: false,\n};\n\nexport const VERTICAL_TABS: MovementConfig = {\n  incrementKeys: [IncrementMovementKey.ArrowDown],\n  decrementKeys: [IncrementMovementKey.ArrowUp],\n  jumpToFirstKeys: [JumpMovementKey.Home],\n  jumpToLastKeys: [JumpMovementKey.End],\n  loopable: true,\n  searchable: false,\n};\n"]},"metadata":{},"sourceType":"module"}