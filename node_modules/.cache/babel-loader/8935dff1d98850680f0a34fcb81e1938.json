{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nimport { ResizeObserver } from \"@juggle/resize-observer\";\nimport { useEnsuredRef } from \"../useEnsuredRef\";\nimport { useIsomorphicLayoutEffect } from \"../useIsomorphicLayoutEffect\";\n/**\n * @internal\n */\n\nfunction isHeightChange(prevSize, nextSize) {\n  return !prevSize || prevSize.height !== nextSize.height || prevSize.scrollHeight !== nextSize.scrollHeight;\n}\n/**\n * @internal\n */\n\n\nfunction isWidthChange(prevSize, nextSize) {\n  return !prevSize || prevSize.width !== nextSize.width || prevSize.scrollWidth !== nextSize.scrollWidth;\n}\n/**\n * Why is there a single shared observer instead of multiple and a\n * \"subscription\" model?\n *\n * Note: Probably a bit of a premature optimization right now...\n *\n * @see https://github.com/WICG/resize-observer/issues/59\n * @internal\n */\n\n\nvar sharedObserver;\n/**\n *\n * @internal\n */\n\nvar subscriptions = [];\n/**\n * Lazy initializes the shared resize observer which will loop through all the\n * subscriptions when a resize event is called.\n *\n * @internal\n */\n\nfunction init() {\n  if (sharedObserver || typeof document === \"undefined\") {\n    return;\n  }\n\n  sharedObserver = new ResizeObserver(function (entries) {\n    var _loop_1 = function (i) {\n      var entry = entries[i];\n      var currentSubscriptions = subscriptions.filter(function (_a) {\n        var target = _a.target;\n        return target === entry.target;\n      });\n\n      if (!currentSubscriptions.length) {\n        return {\n          value: void 0\n        };\n      }\n\n      var _a = entry.contentRect,\n          height = _a.height,\n          width = _a.width;\n      var _b = entry.target,\n          scrollHeight = _b.scrollHeight,\n          scrollWidth = _b.scrollWidth;\n      var nextSize = {\n        height: height,\n        width: width,\n        scrollHeight: scrollHeight,\n        scrollWidth: scrollWidth\n      };\n\n      for (var j = 0; j < currentSubscriptions.length; j += 1) {\n        var subscription = currentSubscriptions[j];\n        var handler = subscription.handler,\n            prevSize = subscription.prevSize,\n            disableHeight = subscription.disableHeight,\n            disableWidth = subscription.disableWidth;\n        var isNewHeight = isHeightChange(prevSize, nextSize);\n        var isNewWidth = isWidthChange(prevSize, nextSize);\n\n        if (isNewHeight && !disableHeight || isNewWidth && !disableWidth) {\n          subscription.prevSize = nextSize;\n          handler(__assign(__assign({}, nextSize), {\n            element: entry.target\n          }));\n        }\n      }\n    }; // Note: might need to wait until an requestAnimationFrame has completed to\n    // fix the resize observer loop exceeded error if switching to\n    // `useIsomorphicLayoutEffect` and a shared observer didn't fix that error:\n    // https://stackoverflow.com/questions/49384120/resizeobserver-loop-limit-exceeded\n\n\n    for (var i = 0; i < entries.length; i += 1) {\n      var state_1 = _loop_1(i);\n\n      if (typeof state_1 === \"object\") return state_1.value;\n    }\n  });\n}\n/**\n *\n * @internal\n */\n\n\nfunction subscribe(target, onResize, disableHeight, disableWidth) {\n  var exists = subscriptions.find(function (sub) {\n    return sub.target === target;\n  });\n  subscriptions.push({\n    target: target,\n    handler: onResize,\n    disableWidth: disableWidth,\n    disableHeight: disableHeight,\n    prevSize: undefined\n  });\n\n  if (!exists) {\n    // I'll silently fail non-initialized observers for now until it becomes an\n    // issue... But how will I ever know?\n    sharedObserver === null || sharedObserver === void 0 ? void 0 : sharedObserver.observe(target);\n  }\n}\n/**\n *\n * @internal\n */\n\n\nfunction unsubscribe(target, onResize, disableHeight, disableWidth) {\n  var i = subscriptions.findIndex(function (sub) {\n    return sub.target === target && sub.handler === onResize && sub.disableWidth === disableWidth && sub.disableHeight === disableHeight;\n  });\n\n  if (i !== -1) {\n    subscriptions.splice(i, 1);\n  }\n\n  var remaining = subscriptions.some(function (sub) {\n    return sub.target === target;\n  });\n\n  if (!remaining) {\n    // I'll silently fail non-initialized observers for now until it becomes an\n    // issue... But how will I ever know?\n    sharedObserver === null || sharedObserver === void 0 ? void 0 : sharedObserver.unobserve(target);\n  }\n}\n/**\n * The new resize observer API that returns a `refHandler` to attach to a DOM\n * node instead of using the weird `target` API.\n *\n * @remarks \\@since 2.3.0\n * @param onResize - The resize handler to call when the element has changed\n * height or width. If you notice performance issues or other oddities, it is\n * recommended to wrap this function in `useCallback`.\n * @param options - Any additional options to use for the resize observer.\n */\n\n\nexport function useResizeObserver(onResize, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var propRef = options.ref,\n      _a = options.disableWidth,\n      disableWidth = _a === void 0 ? false : _a,\n      _b = options.disableHeight,\n      disableHeight = _b === void 0 ? false : _b;\n\n  var _c = __read(useEnsuredRef(propRef), 2),\n      ref = _c[0],\n      refHandler = _c[1];\n\n  useIsomorphicLayoutEffect(function () {\n    var target = ref.current;\n\n    if (disableHeight && disableWidth || !target) {\n      return;\n    }\n\n    init();\n    subscribe(target, onResize, disableHeight, disableWidth);\n    return function () {\n      unsubscribe(target, onResize, disableHeight, disableWidth);\n    };\n  }, [disableHeight, disableWidth, onResize]);\n  return [ref, refHandler];\n}","map":{"version":3,"mappings":"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","names":["ResizeObserver","useEnsuredRef","useIsomorphicLayoutEffect","isHeightChange","prevSize","nextSize","height","scrollHeight","isWidthChange","width","scrollWidth","sharedObserver","subscriptions","init","document","entries","i","entry","currentSubscriptions","filter","_a","target","length","contentRect","j","subscription","disableHeight","disableWidth","isNewHeight","isNewWidth","handler","element","subscribe","onResize","exists","find","sub","push","undefined","observe","unsubscribe","findIndex","splice","remaining","some","unobserve","useResizeObserver","options","propRef","_b","ref","refHandler","current"],"sources":["C:\\Users\\hungr\\Documents\\VS-CODE\\notes-react\\node_modules\\@react-md\\utils\\src\\sizing\\useResizeObserver.ts"],"sourcesContent":["import type { Ref } from \"react\";\nimport { ResizeObserver } from \"@juggle/resize-observer\";\n\nimport type { EnsuredRefs } from \"../useEnsuredRef\";\nimport { useEnsuredRef } from \"../useEnsuredRef\";\nimport { useIsomorphicLayoutEffect } from \"../useIsomorphicLayoutEffect\";\n\n/**\n * @remarks \\@since 2.3.0\n */\nexport interface UseResizeObserverOptions<E extends HTMLElement> {\n  /**\n   * An optional ref to merge with the returned ref handler function\n   */\n  ref?: Ref<E | null>;\n\n  /**\n   * Boolean if the `onResize` callback should not be triggered if only the\n   * height has changed for the watched element.\n   */\n  disableHeight?: boolean;\n\n  /**\n   * Boolean if the `onResize` callback should not be triggered if only the\n   * width has changed for the watched element.\n   */\n  disableWidth?: boolean;\n}\n\n/**\n * @remarks \\@since 2.3.0\n */\nexport interface ResizeObserverElementSize {\n  /**\n   * The height for the element that was changed.\n   */\n  height: number;\n\n  /**\n   * The width for the element that was changed.\n   */\n  width: number;\n\n  /**\n   * The scroll height for the element that was changed.\n   */\n  scrollHeight: number;\n\n  /**\n   * The scroll height for the element that was changed.\n   */\n  scrollWidth: number;\n}\n\n/**\n * @remarks \\@since 2.3.0\n */\nexport interface ResizeObserverElementData<E extends HTMLElement = HTMLElement>\n  extends ResizeObserverElementSize {\n  /**\n   * The element that changed due to the resize observer.\n   */\n  element: E;\n}\n\n/**\n * The callback that is triggered each time an element's size change has been\n * observed.\n * @remarks \\@since 2.3.0\n */\nexport type OnResizeObserverChange<E extends HTMLElement = HTMLElement> = (\n  resizeData: ResizeObserverElementData<E>\n) => void;\n\n/**\n * @internal\n */\ninterface ResizeObserverSubscription<E extends HTMLElement> {\n  readonly target: E;\n  readonly handler: OnResizeObserverChange<E>;\n  readonly disableHeight: boolean;\n  readonly disableWidth: boolean;\n  prevSize: ResizeObserverElementSize | undefined;\n}\n\n/**\n * @internal\n */\nfunction isHeightChange(\n  prevSize: ResizeObserverElementSize | undefined,\n  nextSize: ResizeObserverElementSize\n): boolean {\n  return (\n    !prevSize ||\n    prevSize.height !== nextSize.height ||\n    prevSize.scrollHeight !== nextSize.scrollHeight\n  );\n}\n\n/**\n * @internal\n */\nfunction isWidthChange(\n  prevSize: ResizeObserverElementSize | undefined,\n  nextSize: ResizeObserverElementSize\n): boolean {\n  return (\n    !prevSize ||\n    prevSize.width !== nextSize.width ||\n    prevSize.scrollWidth !== nextSize.scrollWidth\n  );\n}\n\n/**\n * Why is there a single shared observer instead of multiple and a\n * \"subscription\" model?\n *\n * Note: Probably a bit of a premature optimization right now...\n *\n * @see https://github.com/WICG/resize-observer/issues/59\n * @internal\n */\nlet sharedObserver: ResizeObserver | undefined;\n\n/**\n *\n * @internal\n */\nconst subscriptions: ResizeObserverSubscription<HTMLElement>[] = [];\n\n/**\n * Lazy initializes the shared resize observer which will loop through all the\n * subscriptions when a resize event is called.\n *\n * @internal\n */\nfunction init(): void {\n  if (sharedObserver || typeof document === \"undefined\") {\n    return;\n  }\n\n  sharedObserver = new ResizeObserver((entries) => {\n    // Note: might need to wait until an requestAnimationFrame has completed to\n    // fix the resize observer loop exceeded error if switching to\n    // `useIsomorphicLayoutEffect` and a shared observer didn't fix that error:\n    // https://stackoverflow.com/questions/49384120/resizeobserver-loop-limit-exceeded\n    for (let i = 0; i < entries.length; i += 1) {\n      const entry = entries[i];\n      const currentSubscriptions = subscriptions.filter(\n        ({ target }) => target === entry.target\n      );\n      if (!currentSubscriptions.length) {\n        return;\n      }\n\n      const { height, width } = entry.contentRect;\n      const { scrollHeight, scrollWidth } = entry.target;\n      const nextSize: ResizeObserverElementSize = {\n        height,\n        width,\n        scrollHeight,\n        scrollWidth,\n      };\n\n      for (let j = 0; j < currentSubscriptions.length; j += 1) {\n        const subscription = currentSubscriptions[j];\n        const { handler, prevSize, disableHeight, disableWidth } = subscription;\n        const isNewHeight = isHeightChange(prevSize, nextSize);\n        const isNewWidth = isWidthChange(prevSize, nextSize);\n        if ((isNewHeight && !disableHeight) || (isNewWidth && !disableWidth)) {\n          subscription.prevSize = nextSize;\n          handler({\n            ...nextSize,\n            element: entry.target as typeof subscription.target,\n          });\n        }\n      }\n    }\n  });\n}\n\n/**\n *\n * @internal\n */\nfunction subscribe<E extends HTMLElement>(\n  target: E,\n  onResize: OnResizeObserverChange<E>,\n  disableHeight: boolean,\n  disableWidth: boolean\n): void {\n  const exists = subscriptions.find((sub) => sub.target === target);\n  subscriptions.push({\n    target,\n    handler: onResize as OnResizeObserverChange<HTMLElement>,\n    disableWidth,\n    disableHeight,\n    prevSize: undefined,\n  });\n\n  if (!exists) {\n    // I'll silently fail non-initialized observers for now until it becomes an\n    // issue... But how will I ever know?\n    sharedObserver?.observe(target);\n  }\n}\n\n/**\n *\n * @internal\n */\nfunction unsubscribe<E extends HTMLElement>(\n  target: E,\n  onResize: OnResizeObserverChange<E>,\n  disableHeight: boolean,\n  disableWidth: boolean\n): void {\n  const i = subscriptions.findIndex(\n    (sub) =>\n      sub.target === target &&\n      sub.handler === onResize &&\n      sub.disableWidth === disableWidth &&\n      sub.disableHeight === disableHeight\n  );\n  if (i !== -1) {\n    subscriptions.splice(i, 1);\n  }\n\n  const remaining = subscriptions.some((sub) => sub.target === target);\n  if (!remaining) {\n    // I'll silently fail non-initialized observers for now until it becomes an\n    // issue... But how will I ever know?\n    sharedObserver?.unobserve(target);\n  }\n}\n\n/**\n * The new resize observer API that returns a `refHandler` to attach to a DOM\n * node instead of using the weird `target` API.\n *\n * @remarks \\@since 2.3.0\n * @param onResize - The resize handler to call when the element has changed\n * height or width. If you notice performance issues or other oddities, it is\n * recommended to wrap this function in `useCallback`.\n * @param options - Any additional options to use for the resize observer.\n */\nexport function useResizeObserver<E extends HTMLElement>(\n  onResize: OnResizeObserverChange<E>,\n  options: UseResizeObserverOptions<E> = {}\n): EnsuredRefs<E> {\n  const { ref: propRef, disableWidth = false, disableHeight = false } = options;\n  const [ref, refHandler] = useEnsuredRef<E>(propRef);\n\n  useIsomorphicLayoutEffect(() => {\n    const target = ref.current;\n    if ((disableHeight && disableWidth) || !target) {\n      return;\n    }\n\n    init();\n    subscribe(target, onResize, disableHeight, disableWidth);\n    return () => {\n      unsubscribe(target, onResize, disableHeight, disableWidth);\n    };\n  }, [disableHeight, disableWidth, onResize]);\n\n  return [ref, refHandler];\n}\n"]},"metadata":{},"sourceType":"module"}