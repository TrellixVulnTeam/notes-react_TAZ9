{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n};\n\nvar __spreadArray = this && this.__spreadArray || function (to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n    if (ar || !(i in from)) {\n      if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n      ar[i] = from[i];\n    }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n};\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport { useIcon } from \"@react-md/icon\";\nimport { List } from \"@react-md/list\";\nimport { bem } from \"@react-md/utils\";\nimport { defaultGetItemLabel } from \"./defaultGetItemLabel\";\nimport { defaultGetItemValue } from \"./defaultGetItemValue\";\nimport { defaultTreeItemRenderer } from \"./defaultTreeItemRenderer\";\nimport { useTreeMovement } from \"./useTreeMovement\";\nvar block = bem(\"rmd-tree\");\n\nvar defaultGetItemProps = function () {\n  return undefined;\n};\n/**\n * Creates an accessible tree widget that allows you to show hierarchical data\n * in a list presentation view. This component requires the selection and\n * expansion state to be provided/controlled but you can use the\n * `useTreeItemSelection` and `useTreeItemExpansion` hooks for a great starting\n * point for this functionality.\n */\n\n\nexport var Tree = forwardRef(function Tree( // eslint-disable-line @typescript-eslint/no-explicit-any\n_a, ref) {\n  var id = _a.id,\n      className = _a.className,\n      _b = _a.itemRenderer,\n      itemRenderer = _b === void 0 ? defaultTreeItemRenderer : _b,\n      data = _a.data,\n      _c = _a.multiSelect,\n      multiSelect = _c === void 0 ? false : _c,\n      selectedIds = _a.selectedIds,\n      onItemSelect = _a.onItemSelect,\n      onMultiItemSelect = _a.onMultiItemSelect,\n      expandedIds = _a.expandedIds,\n      onItemExpansion = _a.onItemExpansion,\n      onMultiItemExpansion = _a.onMultiItemExpansion,\n      _d = _a.expanderLeft,\n      expanderLeft = _d === void 0 ? false : _d,\n      propExpanderIcon = _a.expanderIcon,\n      _e = _a.labelKey,\n      labelKey = _e === void 0 ? \"name\" : _e,\n      _f = _a.valueKey,\n      valueKey = _f === void 0 ? \"name\" : _f,\n      _g = _a.getItemLabel,\n      getItemLabel = _g === void 0 ? defaultGetItemLabel : _g,\n      _h = _a.getItemValue,\n      getItemValue = _h === void 0 ? defaultGetItemValue : _h,\n      _j = _a.getItemProps,\n      getItemProps = _j === void 0 ? defaultGetItemProps : _j,\n      linkComponent = _a.linkComponent,\n      sort = _a.sort,\n      _k = _a.rootId,\n      rootId = _k === void 0 ? null : _k,\n      onBlur = _a.onBlur,\n      onFocus = _a.onFocus,\n      onKeyDown = _a.onKeyDown,\n      props = __rest(_a, // eslint-disable-line @typescript-eslint/no-explicit-any\n  [\"id\", \"className\", \"itemRenderer\", \"data\", \"multiSelect\", \"selectedIds\", \"onItemSelect\", \"onMultiItemSelect\", \"expandedIds\", \"onItemExpansion\", \"onMultiItemExpansion\", \"expanderLeft\", \"expanderIcon\", \"labelKey\", \"valueKey\", \"getItemLabel\", \"getItemValue\", \"getItemProps\", \"linkComponent\", \"sort\", \"rootId\", \"onBlur\", \"onFocus\", \"onKeyDown\"]);\n\n  var expanderIcon = useIcon(\"dropdown\", propExpanderIcon);\n\n  var _l = useTreeMovement({\n    id: id,\n    data: data,\n    sort: sort,\n    rootId: rootId,\n    onBlur: onBlur,\n    onFocus: onFocus,\n    onKeyDown: onKeyDown,\n    multiSelect: multiSelect,\n    selectedIds: selectedIds,\n    onItemSelect: onItemSelect,\n    onMultiItemSelect: onMultiItemSelect,\n    expandedIds: expandedIds,\n    onItemExpansion: onItemExpansion,\n    onMultiItemExpansion: onMultiItemExpansion,\n    valueKey: valueKey,\n    getItemValue: getItemValue\n  }),\n      items = _l.items,\n      activeId = _l.activeId,\n      setActiveId = _l.setActiveId,\n      itemIdRefs = _l.itemIdRefs,\n      handleBlur = _l.handleBlur,\n      handleFocus = _l.handleFocus,\n      handleKeyDown = _l.handleKeyDown;\n\n  var renderChildItems = function (items, depth, parentIndexes) {\n    var listSize = items.length;\n    return items.map(function (item, index) {\n      var _a;\n\n      var itemId = item.itemId,\n          childItems = item.childItems,\n          isCustom = item.isCustom;\n      var selected = selectedIds.includes(itemId);\n      var expanded = expandedIds.includes(itemId);\n      var id = \"\";\n      var ref;\n      var visibleIndex = -1;\n\n      if (!isCustom) {\n        _a = itemIdRefs[itemId], id = _a.id, ref = _a.ref, visibleIndex = _a.visibleIndex;\n      }\n\n      var focused = id === activeId;\n      return itemRenderer({\n        key: itemId,\n        id: id,\n        liRef: ref,\n        depth: depth,\n        listSize: listSize,\n        itemIndex: index,\n        selected: selected,\n        expanded: expanded,\n        focused: focused,\n        onClick: function (event) {\n          event.stopPropagation();\n          setActiveId(itemId);\n          onItemSelect(itemId);\n\n          if (childItems) {\n            onItemExpansion(itemId, !expanded);\n          }\n        },\n        renderChildItems: childItems ? function () {\n          return renderChildItems(childItems, depth + 1, __spreadArray(__spreadArray([], __read(parentIndexes), false), [index + 1], false));\n        } : undefined\n      }, __assign(__assign({}, item), {\n        visibleIndex: visibleIndex\n      }), __assign({\n        id: id,\n        expanderLeft: expanderLeft,\n        expanderIcon: expanderIcon,\n        multiSelect: multiSelect,\n        labelKey: labelKey,\n        valueKey: valueKey,\n        getItemLabel: getItemLabel,\n        getItemValue: getItemValue,\n        getItemProps: getItemProps,\n        linkComponent: linkComponent,\n        rootId: rootId\n      }, props));\n    });\n  };\n\n  return _jsx(List, __assign({}, props, {\n    ref: ref,\n    id: id,\n    \"aria-activedescendant\": activeId,\n    \"aria-multiselectable\": multiSelect || undefined,\n    role: \"tree\",\n    tabIndex: 0,\n    className: cn(block(), className),\n    onBlur: handleBlur,\n    onFocus: handleFocus,\n    onKeyDown: handleKeyDown\n  }, {\n    children: renderChildItems(items, 0, [])\n  }));\n});","map":{"version":3,"mappings":"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","names":["forwardRef","cn","useIcon","List","bem","defaultGetItemLabel","defaultGetItemValue","defaultTreeItemRenderer","useTreeMovement","block","defaultGetItemProps","Tree","_a","ref","className","_b","itemRenderer","data","_c","multiSelect","selectedIds","onItemSelect","onMultiItemSelect","expandedIds","onItemExpansion","onMultiItemExpansion","_d","expanderLeft","propExpanderIcon","_e","labelKey","_f","valueKey","_g","getItemLabel","_h","getItemValue","_j","getItemProps","linkComponent","sort","_k","rootId","onBlur","onFocus","onKeyDown","props","expanderIcon","id","items","activeId","setActiveId","itemIdRefs","handleBlur","handleFocus","handleKeyDown","renderChildItems","depth","parentIndexes","listSize","length","map","item","index","childItems","isCustom","selected","includes","itemId","expanded","visibleIndex","focused","key","liRef","itemIndex","onClick","event","stopPropagation","__spreadArray","undefined","__assign","_jsx","role","tabIndex","children"],"sources":["C:\\Users\\hungr\\Documents\\VS-CODE\\notes-react\\node_modules\\@react-md\\tree\\src\\Tree.tsx"],"sourcesContent":["import type { MutableRefObject, ReactElement, ReactNode } from \"react\";\nimport { forwardRef } from \"react\";\nimport cn from \"classnames\";\nimport { useIcon } from \"@react-md/icon\";\nimport type { ListElement } from \"@react-md/list\";\nimport { List } from \"@react-md/list\";\nimport { bem } from \"@react-md/utils\";\n\nimport { defaultGetItemLabel } from \"./defaultGetItemLabel\";\nimport { defaultGetItemValue } from \"./defaultGetItemValue\";\nimport { defaultTreeItemRenderer } from \"./defaultTreeItemRenderer\";\nimport type { TreeProps, UnknownTreeItem } from \"./types\";\nimport type { NestedTreeItem } from \"./useNestedTreeList\";\nimport { useTreeMovement } from \"./useTreeMovement\";\n\nconst block = bem(\"rmd-tree\");\nconst defaultGetItemProps = (): undefined => undefined;\n\n/**\n * Creates an accessible tree widget that allows you to show hierarchical data\n * in a list presentation view. This component requires the selection and\n * expansion state to be provided/controlled but you can use the\n * `useTreeItemSelection` and `useTreeItemExpansion` hooks for a great starting\n * point for this functionality.\n */\nexport const Tree = forwardRef<ListElement, TreeProps<any>>(function Tree( // eslint-disable-line @typescript-eslint/no-explicit-any\n  {\n    id,\n    className,\n    itemRenderer = defaultTreeItemRenderer,\n    data,\n    multiSelect = false,\n    selectedIds,\n    onItemSelect,\n    onMultiItemSelect,\n    expandedIds,\n    onItemExpansion,\n    onMultiItemExpansion,\n    expanderLeft = false,\n    expanderIcon: propExpanderIcon,\n    labelKey = \"name\",\n    valueKey = \"name\",\n    getItemLabel = defaultGetItemLabel,\n    getItemValue = defaultGetItemValue,\n    getItemProps = defaultGetItemProps,\n    linkComponent,\n    sort,\n    rootId = null,\n    onBlur,\n    onFocus,\n    onKeyDown,\n    ...props\n  },\n  ref\n) {\n  const expanderIcon = useIcon(\"dropdown\", propExpanderIcon);\n\n  const {\n    items,\n    activeId,\n    setActiveId,\n    itemIdRefs,\n    handleBlur,\n    handleFocus,\n    handleKeyDown,\n  } = useTreeMovement({\n    id,\n    data,\n    sort,\n    rootId,\n    onBlur,\n    onFocus,\n    onKeyDown,\n    multiSelect,\n    selectedIds,\n    onItemSelect,\n    onMultiItemSelect,\n    expandedIds,\n    onItemExpansion,\n    onMultiItemExpansion,\n    valueKey,\n    getItemValue,\n  });\n\n  const renderChildItems = (\n    items: readonly NestedTreeItem<UnknownTreeItem>[],\n    depth: number,\n    parentIndexes: readonly number[]\n  ): ReactNode => {\n    const listSize = items.length;\n\n    return items.map((item, index) => {\n      const { itemId, childItems, isCustom } = item;\n      const selected = selectedIds.includes(itemId);\n      const expanded = expandedIds.includes(itemId);\n      let id = \"\";\n      let ref: MutableRefObject<HTMLLIElement | null> | undefined;\n      let visibleIndex = -1;\n      if (!isCustom) {\n        ({ id, ref, visibleIndex } = itemIdRefs[itemId]);\n      }\n\n      const focused = id === activeId;\n\n      return itemRenderer(\n        {\n          key: itemId,\n          id,\n          liRef: ref,\n          depth,\n          listSize,\n          itemIndex: index,\n          selected,\n          expanded,\n          focused,\n          onClick(event) {\n            event.stopPropagation();\n\n            setActiveId(itemId);\n            onItemSelect(itemId);\n            if (childItems) {\n              onItemExpansion(itemId, !expanded);\n            }\n          },\n          renderChildItems: childItems\n            ? () =>\n                renderChildItems(childItems, depth + 1, [\n                  ...parentIndexes,\n                  index + 1,\n                ])\n            : undefined,\n        },\n        { ...item, visibleIndex },\n        {\n          id,\n          expanderLeft,\n          expanderIcon: expanderIcon as ReactElement,\n          multiSelect,\n          labelKey,\n          valueKey,\n          getItemLabel,\n          getItemValue,\n          getItemProps,\n          linkComponent,\n          rootId,\n          ...props,\n        }\n      );\n    });\n  };\n\n  return (\n    <List\n      {...props}\n      ref={ref}\n      id={id}\n      aria-activedescendant={activeId}\n      aria-multiselectable={multiSelect || undefined}\n      role=\"tree\"\n      tabIndex={0}\n      className={cn(block(), className)}\n      onBlur={handleBlur}\n      onFocus={handleFocus}\n      onKeyDown={handleKeyDown}\n    >\n      {renderChildItems(items, 0, [])}\n    </List>\n  );\n});\n"]},"metadata":{},"sourceType":"module"}