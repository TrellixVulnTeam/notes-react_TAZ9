{"ast":null,"code":"export var FOCUSABLE_ELEMENTS = [\"BUTTON\", \"TEXTAREA\", \"SELECT\"];\nvar BASE_FOCUSABLE_ELEMENTS = 'a[href],area[href],input:not([disabled]):not([type=\"hidden\"])';\nvar BASE_FOCUSABLE_QUERY = FOCUSABLE_ELEMENTS.reduce(function (queryString, element) {\n  return \"\".concat(queryString, \",\").concat(element, \":not([disabled])\");\n}, BASE_FOCUSABLE_ELEMENTS);\n/**\n * A query selector to find elements that are programmatically focusable.\n *\n * Example:\n *\n * ```ts\n * const focusableElements = document.querySelectorAll(PROGRAMATICALLY_FOCUSABLE);\n * // do something with elements\n * ```\n */\n\nexport var PROGRAMATICALLY_FOCUSABLE = \"\".concat(BASE_FOCUSABLE_QUERY, \",[tabindex]\");\n/**\n * A query selector to find elements that are focusable only with tab and shift+tab.\n *\n * Example:\n *\n * ```ts\n * const focusableElements = document.querySelectorAll(TAB_FOCUSABLE);\n * // do something with elements\n * ```\n */\n\nexport var TAB_FOCUSABLE = \"\".concat(PROGRAMATICALLY_FOCUSABLE, \":not([tabindex=\\\"-1\\\"])\");","map":{"version":3,"mappings":"AAAA,OAAO,IAAMA,kBAAkB,GAAG,CAAC,QAAD,EAAW,UAAX,EAAuB,QAAvB,CAA3B;AAEP,IAAMC,uBAAuB,GAC3B,+DADF;AAEA,IAAMC,oBAAoB,GAAGF,kBAAkB,CAACG,MAAnB,CAC3B,UAACC,WAAD,EAAcC,OAAd,EAAqB;EAAK,iBAAGD,WAAH,EAAc,GAAd,EAAcE,MAAd,CAAkBD,OAAlB,EAAyB,kBAAzB;AAA2C,CAD1C,EAE3BJ,uBAF2B,CAA7B;AAKA;;;;;;;;;;;AAUA,OAAO,IAAMM,yBAAyB,GAAG,UAAGL,oBAAH,EAAuB,aAAvB,CAAlC;AAEP;;;;;;;;;;;AAUA,OAAO,IAAMM,aAAa,GAAG,UAAGD,yBAAH,EAA4B,yBAA5B,CAAtB","names":["FOCUSABLE_ELEMENTS","BASE_FOCUSABLE_ELEMENTS","BASE_FOCUSABLE_QUERY","reduce","queryString","element","concat","PROGRAMATICALLY_FOCUSABLE","TAB_FOCUSABLE"],"sources":["C:\\Users\\hungr\\Documents\\VS-CODE\\notes-react\\node_modules\\@react-md\\utils\\src\\wia-aria\\constants.ts"],"sourcesContent":["export const FOCUSABLE_ELEMENTS = [\"BUTTON\", \"TEXTAREA\", \"SELECT\"];\n\nconst BASE_FOCUSABLE_ELEMENTS =\n  'a[href],area[href],input:not([disabled]):not([type=\"hidden\"])';\nconst BASE_FOCUSABLE_QUERY = FOCUSABLE_ELEMENTS.reduce(\n  (queryString, element) => `${queryString},${element}:not([disabled])`,\n  BASE_FOCUSABLE_ELEMENTS\n);\n\n/**\n * A query selector to find elements that are programmatically focusable.\n *\n * Example:\n *\n * ```ts\n * const focusableElements = document.querySelectorAll(PROGRAMATICALLY_FOCUSABLE);\n * // do something with elements\n * ```\n */\nexport const PROGRAMATICALLY_FOCUSABLE = `${BASE_FOCUSABLE_QUERY},[tabindex]`;\n\n/**\n * A query selector to find elements that are focusable only with tab and shift+tab.\n *\n * Example:\n *\n * ```ts\n * const focusableElements = document.querySelectorAll(TAB_FOCUSABLE);\n * // do something with elements\n * ```\n */\nexport const TAB_FOCUSABLE = `${PROGRAMATICALLY_FOCUSABLE}:not([tabindex=\"-1\"])`;\n"]},"metadata":{},"sourceType":"module"}